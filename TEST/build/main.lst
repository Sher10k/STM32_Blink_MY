ARM GAS  /tmp/ccnegJ8u.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	click0
  19              		.section	.data.click0,"aw",%progbits
  22              	click0:
  23 0000 01       		.byte	1
  24              		.global	k
  25              		.section	.data.k,"aw",%progbits
  28              	k:
  29 0000 01       		.byte	1
  30              		.section	.text.main,"ax",%progbits
  31              		.align	2
  32              		.global	main
  33              		.thumb
  34              		.thumb_func
  36              	main:
  37              	.LFB63:
  38              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
ARM GAS  /tmp/ccnegJ8u.s 			page 2


  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f1xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** char click0=1, k=1;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** void Delay(uint32_t t);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /**
  70:Src/main.c    ****   * @brief  The application entry point.
  71:Src/main.c    ****   *
  72:Src/main.c    ****   * @retval None
  73:Src/main.c    ****   */
  74:Src/main.c    **** int main(void)
  75:Src/main.c    **** {
  39              		.loc 1 75 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 0
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 80B5     		push	{r7, lr}
  44              	.LCFI0:
ARM GAS  /tmp/ccnegJ8u.s 			page 3


  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              	.LCFI1:
  50              		.cfi_def_cfa_register 7
  76:Src/main.c    ****   /* USER CODE BEGIN 1 */
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE END 1 */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Src/main.c    ****   HAL_Init();
  51              		.loc 1 83 0
  52 0004 FFF7FEFF 		bl	HAL_Init
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Configure the system clock */
  90:Src/main.c    ****   SystemClock_Config();
  53              		.loc 1 90 0
  54 0008 FFF7FEFF 		bl	SystemClock_Config
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Initialize all configured peripherals */
  97:Src/main.c    ****   MX_GPIO_Init();
  55              		.loc 1 97 0
  56 000c FFF7FEFF 		bl	MX_GPIO_Init
  57              	.L4:
  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END 2 */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Infinite loop */
 103:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 104:Src/main.c    ****   while (1)
 105:Src/main.c    ****   {
 106:Src/main.c    **** 		if (((GPIOA->IDR & (GPIO_IDR_IDR0)) == 0) && (click0 != 0))
  58              		.loc 1 106 0
  59 0010 174B     		ldr	r3, .L5
  60 0012 9B68     		ldr	r3, [r3, #8]
  61 0014 03F00103 		and	r3, r3, #1
  62 0018 002B     		cmp	r3, #0
  63 001a 0AD1     		bne	.L2
  64              		.loc 1 106 0 is_stmt 0 discriminator 1
  65 001c 154B     		ldr	r3, .L5+4
  66 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  67 0020 002B     		cmp	r3, #0
  68 0022 06D0     		beq	.L2
 107:Src/main.c    **** 		{
 108:Src/main.c    **** 			//GPIOC->ODR ^= GPIO_ODR_ODR13;
ARM GAS  /tmp/ccnegJ8u.s 			page 4


 109:Src/main.c    **** 			k ^= 1;
  69              		.loc 1 109 0 is_stmt 1
  70 0024 144B     		ldr	r3, .L5+8
  71 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  72 0028 83F00103 		eor	r3, r3, #1
  73 002c DAB2     		uxtb	r2, r3
  74 002e 124B     		ldr	r3, .L5+8
  75 0030 1A70     		strb	r2, [r3]
  76              	.L2:
 110:Src/main.c    **** 		}
 111:Src/main.c    **** 		click0 = (GPIOA->IDR & (GPIO_IDR_IDR0));
  77              		.loc 1 111 0
  78 0032 0F4B     		ldr	r3, .L5
  79 0034 9B68     		ldr	r3, [r3, #8]
  80 0036 DBB2     		uxtb	r3, r3
  81 0038 03F00103 		and	r3, r3, #1
  82 003c DAB2     		uxtb	r2, r3
  83 003e 0D4B     		ldr	r3, .L5+4
  84 0040 1A70     		strb	r2, [r3]
 112:Src/main.c    **** 
 113:Src/main.c    **** 		if (k == 0)
  85              		.loc 1 113 0
  86 0042 0D4B     		ldr	r3, .L5+8
  87 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  88 0046 002B     		cmp	r3, #0
  89 0048 11D1     		bne	.L3
 114:Src/main.c    **** 		{
 115:Src/main.c    **** 			GPIOC->BSRR |= GPIO_BSRR_BS13;
  90              		.loc 1 115 0
  91 004a 0C4A     		ldr	r2, .L5+12
  92 004c 0B4B     		ldr	r3, .L5+12
  93 004e 1B69     		ldr	r3, [r3, #16]
  94 0050 43F40053 		orr	r3, r3, #8192
  95 0054 1361     		str	r3, [r2, #16]
 116:Src/main.c    **** 			Delay(500000);
  96              		.loc 1 116 0
  97 0056 0A48     		ldr	r0, .L5+16
  98 0058 FFF7FEFF 		bl	Delay
 117:Src/main.c    **** 			GPIOC->BSRR |= GPIO_BSRR_BR13;
  99              		.loc 1 117 0
 100 005c 074A     		ldr	r2, .L5+12
 101 005e 074B     		ldr	r3, .L5+12
 102 0060 1B69     		ldr	r3, [r3, #16]
 103 0062 43F00053 		orr	r3, r3, #536870912
 104 0066 1361     		str	r3, [r2, #16]
 118:Src/main.c    **** 			Delay(500000);
 105              		.loc 1 118 0
 106 0068 0548     		ldr	r0, .L5+16
 107 006a FFF7FEFF 		bl	Delay
 108              	.L3:
 119:Src/main.c    **** 		}
 120:Src/main.c    ****   }
 109              		.loc 1 120 0
 110 006e CFE7     		b	.L4
 111              	.L6:
 112              		.align	2
 113              	.L5:
ARM GAS  /tmp/ccnegJ8u.s 			page 5


 114 0070 00080140 		.word	1073809408
 115 0074 00000000 		.word	click0
 116 0078 00000000 		.word	k
 117 007c 00100140 		.word	1073811456
 118 0080 20A10700 		.word	500000
 119              		.cfi_endproc
 120              	.LFE63:
 122              		.section	.rodata
 123              		.align	2
 124              	.LC0:
 125 0000 5372632F 		.ascii	"Src/main.c\000"
 125      6D61696E 
 125      2E6300
 126              		.section	.text.SystemClock_Config,"ax",%progbits
 127              		.align	2
 128              		.global	SystemClock_Config
 129              		.thumb
 130              		.thumb_func
 132              	SystemClock_Config:
 133              	.LFB64:
 121:Src/main.c    ****   /* USER CODE END 3 */
 122:Src/main.c    **** 
 123:Src/main.c    **** }
 124:Src/main.c    **** 
 125:Src/main.c    **** /**
 126:Src/main.c    ****   * @brief System Clock Configuration
 127:Src/main.c    ****   * @retval None
 128:Src/main.c    ****   */
 129:Src/main.c    **** void SystemClock_Config(void)
 130:Src/main.c    **** {
 134              		.loc 1 130 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 64
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138 0000 80B5     		push	{r7, lr}
 139              	.LCFI2:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 90B0     		sub	sp, sp, #64
 144              	.LCFI3:
 145              		.cfi_def_cfa_offset 72
 146 0004 00AF     		add	r7, sp, #0
 147              	.LCFI4:
 148              		.cfi_def_cfa_register 7
 131:Src/main.c    **** 
 132:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 133:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 134:Src/main.c    **** 
 135:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 136:Src/main.c    ****     */
 137:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 149              		.loc 1 137 0
 150 0006 0123     		movs	r3, #1
 151 0008 BB61     		str	r3, [r7, #24]
 138:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 152              		.loc 1 138 0
ARM GAS  /tmp/ccnegJ8u.s 			page 6


 153 000a 4FF48033 		mov	r3, #65536
 154 000e FB61     		str	r3, [r7, #28]
 139:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 155              		.loc 1 139 0
 156 0010 0023     		movs	r3, #0
 157 0012 3B62     		str	r3, [r7, #32]
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158              		.loc 1 140 0
 159 0014 0123     		movs	r3, #1
 160 0016 BB62     		str	r3, [r7, #40]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161              		.loc 1 141 0
 162 0018 0223     		movs	r3, #2
 163 001a 7B63     		str	r3, [r7, #52]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 164              		.loc 1 142 0
 165 001c 4FF48033 		mov	r3, #65536
 166 0020 BB63     		str	r3, [r7, #56]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 167              		.loc 1 143 0
 168 0022 4FF4E013 		mov	r3, #1835008
 169 0026 FB63     		str	r3, [r7, #60]
 144:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 170              		.loc 1 144 0
 171 0028 07F11803 		add	r3, r7, #24
 172 002c 1846     		mov	r0, r3
 173 002e FFF7FEFF 		bl	HAL_RCC_OscConfig
 174 0032 0346     		mov	r3, r0
 175 0034 002B     		cmp	r3, #0
 176 0036 03D0     		beq	.L8
 145:Src/main.c    ****   {
 146:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 177              		.loc 1 146 0
 178 0038 1748     		ldr	r0, .L10
 179 003a 9221     		movs	r1, #146
 180 003c FFF7FEFF 		bl	_Error_Handler
 181              	.L8:
 147:Src/main.c    ****   }
 148:Src/main.c    **** 
 149:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 150:Src/main.c    ****     */
 151:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 182              		.loc 1 151 0
 183 0040 0F23     		movs	r3, #15
 184 0042 7B60     		str	r3, [r7, #4]
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 185              		.loc 1 153 0
 186 0044 0223     		movs	r3, #2
 187 0046 BB60     		str	r3, [r7, #8]
 154:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 188              		.loc 1 154 0
 189 0048 8023     		movs	r3, #128
 190 004a FB60     		str	r3, [r7, #12]
 155:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 191              		.loc 1 155 0
 192 004c 0023     		movs	r3, #0
ARM GAS  /tmp/ccnegJ8u.s 			page 7


 193 004e 3B61     		str	r3, [r7, #16]
 156:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 194              		.loc 1 156 0
 195 0050 0023     		movs	r3, #0
 196 0052 7B61     		str	r3, [r7, #20]
 157:Src/main.c    **** 
 158:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 197              		.loc 1 158 0
 198 0054 3B1D     		adds	r3, r7, #4
 199 0056 1846     		mov	r0, r3
 200 0058 0221     		movs	r1, #2
 201 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 202 005e 0346     		mov	r3, r0
 203 0060 002B     		cmp	r3, #0
 204 0062 03D0     		beq	.L9
 159:Src/main.c    ****   {
 160:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 205              		.loc 1 160 0
 206 0064 0C48     		ldr	r0, .L10
 207 0066 A021     		movs	r1, #160
 208 0068 FFF7FEFF 		bl	_Error_Handler
 209              	.L9:
 161:Src/main.c    ****   }
 162:Src/main.c    **** 
 163:Src/main.c    ****     /**Configure the Systick interrupt time
 164:Src/main.c    ****     */
 165:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 210              		.loc 1 165 0
 211 006c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 212 0070 0246     		mov	r2, r0
 213 0072 0A4B     		ldr	r3, .L10+4
 214 0074 A3FB0223 		umull	r2, r3, r3, r2
 215 0078 9B09     		lsrs	r3, r3, #6
 216 007a 1846     		mov	r0, r3
 217 007c FFF7FEFF 		bl	HAL_SYSTICK_Config
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Configure the Systick
 168:Src/main.c    ****     */
 169:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 218              		.loc 1 169 0
 219 0080 0420     		movs	r0, #4
 220 0082 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 172:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 221              		.loc 1 172 0
 222 0086 4FF0FF30 		mov	r0, #-1
 223 008a 0021     		movs	r1, #0
 224 008c 0022     		movs	r2, #0
 225 008e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 173:Src/main.c    **** }
 226              		.loc 1 173 0
 227 0092 4037     		adds	r7, r7, #64
 228              	.LCFI5:
 229              		.cfi_def_cfa_offset 8
 230 0094 BD46     		mov	sp, r7
 231              	.LCFI6:
ARM GAS  /tmp/ccnegJ8u.s 			page 8


 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 0096 80BD     		pop	{r7, pc}
 235              	.L11:
 236              		.align	2
 237              	.L10:
 238 0098 00000000 		.word	.LC0
 239 009c D34D6210 		.word	274877907
 240              		.cfi_endproc
 241              	.LFE64:
 243              		.section	.text.MX_GPIO_Init,"ax",%progbits
 244              		.align	2
 245              		.thumb
 246              		.thumb_func
 248              	MX_GPIO_Init:
 249              	.LFB65:
 174:Src/main.c    **** 
 175:Src/main.c    **** /** Configure pins as
 176:Src/main.c    ****         * Analog
 177:Src/main.c    ****         * Input
 178:Src/main.c    ****         * Output
 179:Src/main.c    ****         * EVENT_OUT
 180:Src/main.c    ****         * EXTI
 181:Src/main.c    **** */
 182:Src/main.c    **** static void MX_GPIO_Init(void)
 183:Src/main.c    **** {
 250              		.loc 1 183 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 32
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 0000 80B5     		push	{r7, lr}
 255              	.LCFI7:
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 88B0     		sub	sp, sp, #32
 260              	.LCFI8:
 261              		.cfi_def_cfa_offset 40
 262 0004 00AF     		add	r7, sp, #0
 263              	.LCFI9:
 264              		.cfi_def_cfa_register 7
 265              	.LBB2:
 184:Src/main.c    **** 
 185:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* GPIO Ports Clock Enable */
 188:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 266              		.loc 1 188 0
 267 0006 244A     		ldr	r2, .L13
 268 0008 234B     		ldr	r3, .L13
 269 000a 9B69     		ldr	r3, [r3, #24]
 270 000c 43F01003 		orr	r3, r3, #16
 271 0010 9361     		str	r3, [r2, #24]
 272 0012 214B     		ldr	r3, .L13
 273 0014 9B69     		ldr	r3, [r3, #24]
 274 0016 03F01003 		and	r3, r3, #16
 275 001a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccnegJ8u.s 			page 9


 276 001c FB68     		ldr	r3, [r7, #12]
 277              	.LBE2:
 278              	.LBB3:
 189:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 279              		.loc 1 189 0
 280 001e 1E4A     		ldr	r2, .L13
 281 0020 1D4B     		ldr	r3, .L13
 282 0022 9B69     		ldr	r3, [r3, #24]
 283 0024 43F02003 		orr	r3, r3, #32
 284 0028 9361     		str	r3, [r2, #24]
 285 002a 1B4B     		ldr	r3, .L13
 286 002c 9B69     		ldr	r3, [r3, #24]
 287 002e 03F02003 		and	r3, r3, #32
 288 0032 BB60     		str	r3, [r7, #8]
 289 0034 BB68     		ldr	r3, [r7, #8]
 290              	.LBE3:
 291              	.LBB4:
 190:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 292              		.loc 1 190 0
 293 0036 184A     		ldr	r2, .L13
 294 0038 174B     		ldr	r3, .L13
 295 003a 9B69     		ldr	r3, [r3, #24]
 296 003c 43F00403 		orr	r3, r3, #4
 297 0040 9361     		str	r3, [r2, #24]
 298 0042 154B     		ldr	r3, .L13
 299 0044 9B69     		ldr	r3, [r3, #24]
 300 0046 03F00403 		and	r3, r3, #4
 301 004a 7B60     		str	r3, [r7, #4]
 302 004c 7B68     		ldr	r3, [r7, #4]
 303              	.LBE4:
 191:Src/main.c    **** 
 192:Src/main.c    ****   /*Configure GPIO pin Output Level */
 193:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);
 304              		.loc 1 193 0
 305 004e 1348     		ldr	r0, .L13+4
 306 0050 4FF40051 		mov	r1, #8192
 307 0054 0122     		movs	r2, #1
 308 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 194:Src/main.c    **** 
 195:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 196:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 309              		.loc 1 196 0
 310 005a 4FF40053 		mov	r3, #8192
 311 005e 3B61     		str	r3, [r7, #16]
 197:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 312              		.loc 1 197 0
 313 0060 0123     		movs	r3, #1
 314 0062 7B61     		str	r3, [r7, #20]
 198:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 315              		.loc 1 198 0
 316 0064 0023     		movs	r3, #0
 317 0066 BB61     		str	r3, [r7, #24]
 199:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 318              		.loc 1 199 0
 319 0068 0223     		movs	r3, #2
 320 006a FB61     		str	r3, [r7, #28]
 200:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
ARM GAS  /tmp/ccnegJ8u.s 			page 10


 321              		.loc 1 200 0
 322 006c 07F11003 		add	r3, r7, #16
 323 0070 0A48     		ldr	r0, .L13+4
 324 0072 1946     		mov	r1, r3
 325 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 201:Src/main.c    **** 
 202:Src/main.c    **** 	/*Configure GPIO pin : PA0 */
 203:Src/main.c    **** 	GPIO_InitStruct.Pin = GPIO_PIN_0;
 326              		.loc 1 203 0
 327 0078 0123     		movs	r3, #1
 328 007a 3B61     		str	r3, [r7, #16]
 204:Src/main.c    **** 	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 329              		.loc 1 204 0
 330 007c 0023     		movs	r3, #0
 331 007e 7B61     		str	r3, [r7, #20]
 205:Src/main.c    **** 	GPIO_InitStruct.Pull = GPIO_PULLUP;
 332              		.loc 1 205 0
 333 0080 0123     		movs	r3, #1
 334 0082 BB61     		str	r3, [r7, #24]
 206:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 335              		.loc 1 206 0
 336 0084 07F11003 		add	r3, r7, #16
 337 0088 0548     		ldr	r0, .L13+8
 338 008a 1946     		mov	r1, r3
 339 008c FFF7FEFF 		bl	HAL_GPIO_Init
 207:Src/main.c    **** 
 208:Src/main.c    **** }
 340              		.loc 1 208 0
 341 0090 2037     		adds	r7, r7, #32
 342              	.LCFI10:
 343              		.cfi_def_cfa_offset 8
 344 0092 BD46     		mov	sp, r7
 345              	.LCFI11:
 346              		.cfi_def_cfa_register 13
 347              		@ sp needed
 348 0094 80BD     		pop	{r7, pc}
 349              	.L14:
 350 0096 00BF     		.align	2
 351              	.L13:
 352 0098 00100240 		.word	1073876992
 353 009c 00100140 		.word	1073811456
 354 00a0 00080140 		.word	1073809408
 355              		.cfi_endproc
 356              	.LFE65:
 358              		.section	.text.Delay,"ax",%progbits
 359              		.align	2
 360              		.global	Delay
 361              		.thumb
 362              		.thumb_func
 364              	Delay:
 365              	.LFB66:
 209:Src/main.c    **** /* функция задержки */
 210:Src/main.c    **** void Delay(uint32_t t)
 211:Src/main.c    **** {
 366              		.loc 1 211 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccnegJ8u.s 			page 11


 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              	.LCFI12:
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 0002 85B0     		sub	sp, sp, #20
 376              	.LCFI13:
 377              		.cfi_def_cfa_offset 24
 378 0004 00AF     		add	r7, sp, #0
 379              	.LCFI14:
 380              		.cfi_def_cfa_register 7
 381 0006 7860     		str	r0, [r7, #4]
 382              	.LBB5:
 212:Src/main.c    ****   for (uint32_t i = 0; i < t; i++)
 383              		.loc 1 212 0
 384 0008 0023     		movs	r3, #0
 385 000a FB60     		str	r3, [r7, #12]
 386 000c 03E0     		b	.L16
 387              	.L17:
 213:Src/main.c    ****   {
 214:Src/main.c    ****     asm("NOP");
 388              		.loc 1 214 0 discriminator 3
 389              	@ 214 "Src/main.c" 1
 390 000e 00BF     		NOP
 391              	@ 0 "" 2
 212:Src/main.c    ****   for (uint32_t i = 0; i < t; i++)
 392              		.loc 1 212 0 discriminator 3
 393              		.thumb
 394 0010 FB68     		ldr	r3, [r7, #12]
 395 0012 0133     		adds	r3, r3, #1
 396 0014 FB60     		str	r3, [r7, #12]
 397              	.L16:
 212:Src/main.c    ****   for (uint32_t i = 0; i < t; i++)
 398              		.loc 1 212 0 is_stmt 0 discriminator 1
 399 0016 FA68     		ldr	r2, [r7, #12]
 400 0018 7B68     		ldr	r3, [r7, #4]
 401 001a 9A42     		cmp	r2, r3
 402 001c F7D3     		bcc	.L17
 403              	.LBE5:
 215:Src/main.c    ****   }
 216:Src/main.c    **** }
 404              		.loc 1 216 0 is_stmt 1
 405 001e 1437     		adds	r7, r7, #20
 406              	.LCFI15:
 407              		.cfi_def_cfa_offset 4
 408 0020 BD46     		mov	sp, r7
 409              	.LCFI16:
 410              		.cfi_def_cfa_register 13
 411              		@ sp needed
 412 0022 5DF8047B 		ldr	r7, [sp], #4
 413              	.LCFI17:
 414              		.cfi_restore 7
 415              		.cfi_def_cfa_offset 0
 416 0026 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE66:
ARM GAS  /tmp/ccnegJ8u.s 			page 12


 420              		.section	.text._Error_Handler,"ax",%progbits
 421              		.align	2
 422              		.global	_Error_Handler
 423              		.thumb
 424              		.thumb_func
 426              	_Error_Handler:
 427              	.LFB67:
 217:Src/main.c    **** 
 218:Src/main.c    **** /* USER CODE BEGIN 4 */
 219:Src/main.c    **** 
 220:Src/main.c    **** /* USER CODE END 4 */
 221:Src/main.c    **** 
 222:Src/main.c    **** /**
 223:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 224:Src/main.c    ****   * @param  file: The file name as string.
 225:Src/main.c    ****   * @param  line: The line in file as a number.
 226:Src/main.c    ****   * @retval None
 227:Src/main.c    ****   */
 228:Src/main.c    **** void _Error_Handler(char *file, int line)
 229:Src/main.c    **** {
 428              		.loc 1 229 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI18:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI19:
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              	.LCFI20:
 442              		.cfi_def_cfa_register 7
 443 0006 7860     		str	r0, [r7, #4]
 444 0008 3960     		str	r1, [r7]
 445              	.L19:
 230:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 231:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 232:Src/main.c    ****   while(1)
 233:Src/main.c    ****   {
 234:Src/main.c    ****   }
 446              		.loc 1 234 0 discriminator 1
 447 000a FEE7     		b	.L19
 448              		.cfi_endproc
 449              	.LFE67:
 451              		.text
 452              	.Letext0:
 453              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 454              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 455              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 456              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 457              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 458              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 459              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 460              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/ccnegJ8u.s 			page 13


ARM GAS  /tmp/ccnegJ8u.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnegJ8u.s:22     .data.click0:0000000000000000 click0
     /tmp/ccnegJ8u.s:28     .data.k:0000000000000000 k
     /tmp/ccnegJ8u.s:31     .text.main:0000000000000000 $t
     /tmp/ccnegJ8u.s:36     .text.main:0000000000000000 main
     /tmp/ccnegJ8u.s:132    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnegJ8u.s:248    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccnegJ8u.s:364    .text.Delay:0000000000000000 Delay
     /tmp/ccnegJ8u.s:114    .text.main:0000000000000070 $d
     /tmp/ccnegJ8u.s:123    .rodata:0000000000000000 $d
     /tmp/ccnegJ8u.s:127    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnegJ8u.s:426    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccnegJ8u.s:238    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccnegJ8u.s:244    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccnegJ8u.s:352    .text.MX_GPIO_Init:0000000000000098 $d
     /tmp/ccnegJ8u.s:359    .text.Delay:0000000000000000 $t
     /tmp/ccnegJ8u.s:421    .text._Error_Handler:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_GPIO_WritePin
HAL_GPIO_Init
