ARM GAS  /tmp/cc3F7Krn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	uwTick,4,4
  19              		.global	uwTickPrio
  20              		.section	.data.uwTickPrio,"aw",%progbits
  21              		.align	2
  24              	uwTickPrio:
  25 0000 10000000 		.word	16
  26              		.global	uwTickFreq
  27              		.section	.data.uwTickFreq,"aw",%progbits
  30              	uwTickFreq:
  31 0000 01       		.byte	1
  32              		.section	.text.HAL_Init,"ax",%progbits
  33              		.align	2
  34              		.global	HAL_Init
  35              		.thumb
  36              		.thumb_func
  38              	HAL_Init:
  39              	.LFB63:
  40              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
ARM GAS  /tmp/cc3F7Krn.s 			page 2


  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.2
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
ARM GAS  /tmp/cc3F7Krn.s 			page 3


  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           and the backup domain when enabled.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority.
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
ARM GAS  /tmp/cc3F7Krn.s 			page 4


 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  41              		.loc 1 159 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  53              		.loc 1 168 0
  54 0004 084A     		ldr	r2, .L3
  55 0006 084B     		ldr	r3, .L3
  56 0008 1B68     		ldr	r3, [r3]
  57 000a 43F01003 		orr	r3, r3, #16
  58 000e 1360     		str	r3, [r2]
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  59              		.loc 1 173 0
  60 0010 0320     		movs	r0, #3
ARM GAS  /tmp/cc3F7Krn.s 			page 5


  61 0012 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  62              		.loc 1 176 0
  63 0016 0020     		movs	r0, #0
  64 0018 FFF7FEFF 		bl	HAL_InitTick
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
  65              		.loc 1 179 0
  66 001c FFF7FEFF 		bl	HAL_MspInit
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
  67              		.loc 1 182 0
  68 0020 0023     		movs	r3, #0
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
  69              		.loc 1 183 0
  70 0022 1846     		mov	r0, r3
  71 0024 80BD     		pop	{r7, pc}
  72              	.L4:
  73 0026 00BF     		.align	2
  74              	.L3:
  75 0028 00200240 		.word	1073881088
  76              		.cfi_endproc
  77              	.LFE63:
  79              		.section	.text.HAL_DeInit,"ax",%progbits
  80              		.align	2
  81              		.global	HAL_DeInit
  82              		.thumb
  83              		.thumb_func
  85              	HAL_DeInit:
  86              	.LFB64:
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the systick.
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  87              		.loc 1 192 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              	.LCFI2:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 00AF     		add	r7, sp, #0
  97              	.LCFI3:
  98              		.cfi_def_cfa_register 7
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
ARM GAS  /tmp/cc3F7Krn.s 			page 6


  99              		.loc 1 194 0
 100 0004 094B     		ldr	r3, .L7
 101 0006 4FF0FF32 		mov	r2, #-1
 102 000a DA60     		str	r2, [r3, #12]
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 103              		.loc 1 195 0
 104 000c 074B     		ldr	r3, .L7
 105 000e 0022     		movs	r2, #0
 106 0010 1A61     		str	r2, [r3, #16]
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 107              		.loc 1 197 0
 108 0012 064B     		ldr	r3, .L7
 109 0014 4FF0FF32 		mov	r2, #-1
 110 0018 DA60     		str	r2, [r3, #12]
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 111              		.loc 1 198 0
 112 001a 044B     		ldr	r3, .L7
 113 001c 0022     		movs	r2, #0
 114 001e DA60     		str	r2, [r3, #12]
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 115              		.loc 1 206 0
 116 0020 FFF7FEFF 		bl	HAL_MspDeInit
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 117              		.loc 1 209 0
 118 0024 0023     		movs	r3, #0
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 119              		.loc 1 210 0
 120 0026 1846     		mov	r0, r3
 121 0028 80BD     		pop	{r7, pc}
 122              	.L8:
 123 002a 00BF     		.align	2
 124              	.L7:
 125 002c 00100240 		.word	1073876992
 126              		.cfi_endproc
 127              	.LFE64:
 129              		.section	.text.HAL_MspInit,"ax",%progbits
 130              		.align	2
 131              		.weak	HAL_MspInit
 132              		.thumb
 133              		.thumb_func
 135              	HAL_MspInit:
 136              	.LFB65:
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initialize the MSP.
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
ARM GAS  /tmp/cc3F7Krn.s 			page 7


 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 137              		.loc 1 217 0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 1, uses_anonymous_args = 0
 141              		@ link register save eliminated.
 142 0000 80B4     		push	{r7}
 143              	.LCFI4:
 144              		.cfi_def_cfa_offset 4
 145              		.cfi_offset 7, -4
 146 0002 00AF     		add	r7, sp, #0
 147              	.LCFI5:
 148              		.cfi_def_cfa_register 7
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 149              		.loc 1 221 0
 150 0004 BD46     		mov	sp, r7
 151              	.LCFI6:
 152              		.cfi_def_cfa_register 13
 153              		@ sp needed
 154 0006 5DF8047B 		ldr	r7, [sp], #4
 155              	.LCFI7:
 156              		.cfi_restore 7
 157              		.cfi_def_cfa_offset 0
 158 000a 7047     		bx	lr
 159              		.cfi_endproc
 160              	.LFE65:
 162              		.section	.text.HAL_MspDeInit,"ax",%progbits
 163              		.align	2
 164              		.weak	HAL_MspDeInit
 165              		.thumb
 166              		.thumb_func
 168              	HAL_MspDeInit:
 169              	.LFB66:
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 170              		.loc 1 228 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 1, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175 0000 80B4     		push	{r7}
 176              	.LCFI8:
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 00AF     		add	r7, sp, #0
 180              	.LCFI9:
 181              		.cfi_def_cfa_register 7
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
ARM GAS  /tmp/cc3F7Krn.s 			page 8


 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 182              		.loc 1 232 0
 183 0004 BD46     		mov	sp, r7
 184              	.LCFI10:
 185              		.cfi_def_cfa_register 13
 186              		@ sp needed
 187 0006 5DF8047B 		ldr	r7, [sp], #4
 188              	.LCFI11:
 189              		.cfi_restore 7
 190              		.cfi_def_cfa_offset 0
 191 000a 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE66:
 195              		.section	.text.HAL_InitTick,"ax",%progbits
 196              		.align	2
 197              		.weak	HAL_InitTick
 198              		.thumb
 199              		.thumb_func
 201              	HAL_InitTick:
 202              	.LFB67:
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base.
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 203              		.loc 1 251 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              	.LCFI12:
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              	.LCFI13:
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              	.LCFI14:
 217              		.cfi_def_cfa_register 7
 218 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc3F7Krn.s 			page 9


 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 219              		.loc 1 253 0
 220 0008 124B     		ldr	r3, .L16
 221 000a 1A68     		ldr	r2, [r3]
 222 000c 124B     		ldr	r3, .L16+4
 223 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224 0010 1946     		mov	r1, r3
 225 0012 4FF47A73 		mov	r3, #1000
 226 0016 B3FBF1F3 		udiv	r3, r3, r1
 227 001a B2FBF3F3 		udiv	r3, r2, r3
 228 001e 1846     		mov	r0, r3
 229 0020 FFF7FEFF 		bl	HAL_SYSTICK_Config
 230 0024 0346     		mov	r3, r0
 231 0026 002B     		cmp	r3, #0
 232 0028 01D0     		beq	.L12
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 233              		.loc 1 255 0
 234 002a 0123     		movs	r3, #1
 235 002c 0EE0     		b	.L13
 236              	.L12:
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick IRQ priority */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 237              		.loc 1 259 0
 238 002e 7B68     		ldr	r3, [r7, #4]
 239 0030 0F2B     		cmp	r3, #15
 240 0032 0AD8     		bhi	.L14
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 241              		.loc 1 261 0
 242 0034 4FF0FF30 		mov	r0, #-1
 243 0038 7968     		ldr	r1, [r7, #4]
 244 003a 0022     		movs	r2, #0
 245 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 246              		.loc 1 262 0
 247 0040 064A     		ldr	r2, .L16+8
 248 0042 7B68     		ldr	r3, [r7, #4]
 249 0044 1360     		str	r3, [r2]
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   else
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 250              		.loc 1 270 0
 251 0046 0023     		movs	r3, #0
 252 0048 00E0     		b	.L13
 253              	.L14:
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 254              		.loc 1 266 0
 255 004a 0123     		movs	r3, #1
ARM GAS  /tmp/cc3F7Krn.s 			page 10


 256              	.L13:
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 257              		.loc 1 271 0
 258 004c 1846     		mov	r0, r3
 259 004e 0837     		adds	r7, r7, #8
 260              	.LCFI15:
 261              		.cfi_def_cfa_offset 8
 262 0050 BD46     		mov	sp, r7
 263              	.LCFI16:
 264              		.cfi_def_cfa_register 13
 265              		@ sp needed
 266 0052 80BD     		pop	{r7, pc}
 267              	.L17:
 268              		.align	2
 269              	.L16:
 270 0054 00000000 		.word	SystemCoreClock
 271 0058 00000000 		.word	uwTickFreq
 272 005c 00000000 		.word	uwTickPrio
 273              		.cfi_endproc
 274              	.LFE67:
 276              		.section	.text.HAL_IncTick,"ax",%progbits
 277              		.align	2
 278              		.weak	HAL_IncTick
 279              		.thumb
 280              		.thumb_func
 282              	HAL_IncTick:
 283              	.LFB68:
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
ARM GAS  /tmp/cc3F7Krn.s 			page 11


 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in SysTick ISR.
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 284              		.loc 1 310 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              	.LCFI17:
 291              		.cfi_def_cfa_offset 4
 292              		.cfi_offset 7, -4
 293 0002 00AF     		add	r7, sp, #0
 294              	.LCFI18:
 295              		.cfi_def_cfa_register 7
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick += uwTickFreq;
 296              		.loc 1 311 0
 297 0004 054B     		ldr	r3, .L19
 298 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 299 0008 1A46     		mov	r2, r3
 300 000a 054B     		ldr	r3, .L19+4
 301 000c 1B68     		ldr	r3, [r3]
 302 000e 1344     		add	r3, r3, r2
 303 0010 034A     		ldr	r2, .L19+4
 304 0012 1360     		str	r3, [r2]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 305              		.loc 1 312 0
 306 0014 BD46     		mov	sp, r7
 307              	.LCFI19:
 308              		.cfi_def_cfa_register 13
 309              		@ sp needed
 310 0016 5DF8047B 		ldr	r7, [sp], #4
 311              	.LCFI20:
 312              		.cfi_restore 7
 313              		.cfi_def_cfa_offset 0
 314 001a 7047     		bx	lr
 315              	.L20:
 316              		.align	2
 317              	.L19:
 318 001c 00000000 		.word	uwTickFreq
 319 0020 00000000 		.word	uwTick
 320              		.cfi_endproc
 321              	.LFE68:
 323              		.section	.text.HAL_GetTick,"ax",%progbits
 324              		.align	2
 325              		.weak	HAL_GetTick
 326              		.thumb
 327              		.thumb_func
 329              	HAL_GetTick:
 330              	.LFB69:
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/cc3F7Krn.s 			page 12


 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak to be overwritten in case of other
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 331              		.loc 1 321 0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 1, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 336 0000 80B4     		push	{r7}
 337              	.LCFI21:
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 00AF     		add	r7, sp, #0
 341              	.LCFI22:
 342              		.cfi_def_cfa_register 7
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 343              		.loc 1 322 0
 344 0004 034B     		ldr	r3, .L23
 345 0006 1B68     		ldr	r3, [r3]
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 346              		.loc 1 323 0
 347 0008 1846     		mov	r0, r3
 348 000a BD46     		mov	sp, r7
 349              	.LCFI23:
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
 352 000c 5DF8047B 		ldr	r7, [sp], #4
 353              	.LCFI24:
 354              		.cfi_restore 7
 355              		.cfi_def_cfa_offset 0
 356 0010 7047     		bx	lr
 357              	.L24:
 358 0012 00BF     		.align	2
 359              	.L23:
 360 0014 00000000 		.word	uwTick
 361              		.cfi_endproc
 362              	.LFE69:
 364              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 365              		.align	2
 366              		.global	HAL_GetTickPrio
 367              		.thumb
 368              		.thumb_func
 370              	HAL_GetTickPrio:
 371              	.LFB70:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function returns a tick priority.
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick priority
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 372              		.loc 1 330 0
ARM GAS  /tmp/cc3F7Krn.s 			page 13


 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 377 0000 80B4     		push	{r7}
 378              	.LCFI25:
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 00AF     		add	r7, sp, #0
 382              	.LCFI26:
 383              		.cfi_def_cfa_register 7
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickPrio;
 384              		.loc 1 331 0
 385 0004 034B     		ldr	r3, .L27
 386 0006 1B68     		ldr	r3, [r3]
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 387              		.loc 1 332 0
 388 0008 1846     		mov	r0, r3
 389 000a BD46     		mov	sp, r7
 390              	.LCFI27:
 391              		.cfi_def_cfa_register 13
 392              		@ sp needed
 393 000c 5DF8047B 		ldr	r7, [sp], #4
 394              	.LCFI28:
 395              		.cfi_restore 7
 396              		.cfi_def_cfa_offset 0
 397 0010 7047     		bx	lr
 398              	.L28:
 399 0012 00BF     		.align	2
 400              	.L27:
 401 0014 00000000 		.word	uwTickPrio
 402              		.cfi_endproc
 403              	.LFE70:
 405              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 406              		.align	2
 407              		.global	HAL_SetTickFreq
 408              		.thumb
 409              		.thumb_func
 411              	HAL_SetTickFreq:
 412              	.LFB71:
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Set new tick Freq.
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Status
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 413              		.loc 1 339 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 16
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418              	.LCFI29:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/cc3F7Krn.s 			page 14


 423              	.LCFI30:
 424              		.cfi_def_cfa_offset 24
 425 0004 00AF     		add	r7, sp, #0
 426              	.LCFI31:
 427              		.cfi_def_cfa_register 7
 428 0006 0346     		mov	r3, r0
 429 0008 FB71     		strb	r3, [r7, #7]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 430              		.loc 1 340 0
 431 000a 0023     		movs	r3, #0
 432 000c FB73     		strb	r3, [r7, #15]
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (uwTickFreq != Freq)
 433              		.loc 1 343 0
 434 000e 0A4B     		ldr	r3, .L32
 435 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 436 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 437 0014 9A42     		cmp	r2, r3
 438 0016 09D0     		beq	.L30
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickFreq = Freq;
 439              		.loc 1 345 0
 440 0018 074A     		ldr	r2, .L32
 441 001a FB79     		ldrb	r3, [r7, #7]
 442 001c 1370     		strb	r3, [r2]
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Apply the new tick Freq  */
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 443              		.loc 1 348 0
 444 001e 074B     		ldr	r3, .L32+4
 445 0020 1B68     		ldr	r3, [r3]
 446 0022 1846     		mov	r0, r3
 447 0024 FFF7FEFF 		bl	HAL_InitTick
 448 0028 0346     		mov	r3, r0
 449 002a FB73     		strb	r3, [r7, #15]
 450              	.L30:
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return status;
 451              		.loc 1 351 0
 452 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 453              		.loc 1 352 0
 454 002e 1846     		mov	r0, r3
 455 0030 1037     		adds	r7, r7, #16
 456              	.LCFI32:
 457              		.cfi_def_cfa_offset 8
 458 0032 BD46     		mov	sp, r7
 459              	.LCFI33:
 460              		.cfi_def_cfa_register 13
 461              		@ sp needed
 462 0034 80BD     		pop	{r7, pc}
 463              	.L33:
 464 0036 00BF     		.align	2
 465              	.L32:
 466 0038 00000000 		.word	uwTickFreq
ARM GAS  /tmp/cc3F7Krn.s 			page 15


 467 003c 00000000 		.word	uwTickPrio
 468              		.cfi_endproc
 469              	.LFE71:
 471              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 472              		.align	2
 473              		.global	HAL_GetTickFreq
 474              		.thumb
 475              		.thumb_func
 477              	HAL_GetTickFreq:
 478              	.LFB72:
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return tick frequency.
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick period in Hz
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 479              		.loc 1 359 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484 0000 80B4     		push	{r7}
 485              	.LCFI34:
 486              		.cfi_def_cfa_offset 4
 487              		.cfi_offset 7, -4
 488 0002 00AF     		add	r7, sp, #0
 489              	.LCFI35:
 490              		.cfi_def_cfa_register 7
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickFreq;
 491              		.loc 1 360 0
 492 0004 034B     		ldr	r3, .L36
 493 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 494              		.loc 1 361 0
 495 0008 1846     		mov	r0, r3
 496 000a BD46     		mov	sp, r7
 497              	.LCFI36:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 000c 5DF8047B 		ldr	r7, [sp], #4
 501              	.LCFI37:
 502              		.cfi_restore 7
 503              		.cfi_def_cfa_offset 0
 504 0010 7047     		bx	lr
 505              	.L37:
 506 0012 00BF     		.align	2
 507              	.L36:
 508 0014 00000000 		.word	uwTickFreq
 509              		.cfi_endproc
 510              	.LFE72:
 512              		.section	.text.HAL_Delay,"ax",%progbits
 513              		.align	2
 514              		.weak	HAL_Delay
 515              		.thumb
 516              		.thumb_func
 518              	HAL_Delay:
ARM GAS  /tmp/cc3F7Krn.s 			page 16


 519              	.LFB73:
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 520              		.loc 1 375 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 16
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524 0000 80B5     		push	{r7, lr}
 525              	.LCFI38:
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 7, -8
 528              		.cfi_offset 14, -4
 529 0002 84B0     		sub	sp, sp, #16
 530              	.LCFI39:
 531              		.cfi_def_cfa_offset 24
 532 0004 00AF     		add	r7, sp, #0
 533              	.LCFI40:
 534              		.cfi_def_cfa_register 7
 535 0006 7860     		str	r0, [r7, #4]
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 536              		.loc 1 376 0
 537 0008 FFF7FEFF 		bl	HAL_GetTick
 538 000c B860     		str	r0, [r7, #8]
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 539              		.loc 1 377 0
 540 000e 7B68     		ldr	r3, [r7, #4]
 541 0010 FB60     		str	r3, [r7, #12]
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 542              		.loc 1 380 0
 543 0012 FB68     		ldr	r3, [r7, #12]
 544 0014 B3F1FF3F 		cmp	r3, #-1
 545 0018 05D0     		beq	.L39
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 546              		.loc 1 382 0
 547 001a 094B     		ldr	r3, .L41
 548 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 549 001e 1A46     		mov	r2, r3
 550 0020 FB68     		ldr	r3, [r7, #12]
 551 0022 1344     		add	r3, r3, r2
 552 0024 FB60     		str	r3, [r7, #12]
 553              	.L39:
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
ARM GAS  /tmp/cc3F7Krn.s 			page 17


 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 554              		.loc 1 385 0
 555 0026 00BF     		nop
 556              	.L40:
 557              		.loc 1 385 0 is_stmt 0 discriminator 1
 558 0028 FFF7FEFF 		bl	HAL_GetTick
 559 002c 0246     		mov	r2, r0
 560 002e BB68     		ldr	r3, [r7, #8]
 561 0030 D21A     		subs	r2, r2, r3
 562 0032 FB68     		ldr	r3, [r7, #12]
 563 0034 9A42     		cmp	r2, r3
 564 0036 F7D3     		bcc	.L40
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 565              		.loc 1 388 0 is_stmt 1
 566 0038 1037     		adds	r7, r7, #16
 567              	.LCFI41:
 568              		.cfi_def_cfa_offset 8
 569 003a BD46     		mov	sp, r7
 570              	.LCFI42:
 571              		.cfi_def_cfa_register 13
 572              		@ sp needed
 573 003c 80BD     		pop	{r7, pc}
 574              	.L42:
 575 003e 00BF     		.align	2
 576              	.L41:
 577 0040 00000000 		.word	uwTickFreq
 578              		.cfi_endproc
 579              	.LFE73:
 581              		.section	.text.HAL_SuspendTick,"ax",%progbits
 582              		.align	2
 583              		.weak	HAL_SuspendTick
 584              		.thumb
 585              		.thumb_func
 587              	HAL_SuspendTick:
 588              	.LFB74:
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 589              		.loc 1 401 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc3F7Krn.s 			page 18


 595              	.LCFI43:
 596              		.cfi_def_cfa_offset 4
 597              		.cfi_offset 7, -4
 598 0002 00AF     		add	r7, sp, #0
 599              	.LCFI44:
 600              		.cfi_def_cfa_register 7
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 601              		.loc 1 403 0
 602 0004 044A     		ldr	r2, .L44
 603 0006 044B     		ldr	r3, .L44
 604 0008 1B68     		ldr	r3, [r3]
 605 000a 23F00203 		bic	r3, r3, #2
 606 000e 1360     		str	r3, [r2]
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 607              		.loc 1 404 0
 608 0010 BD46     		mov	sp, r7
 609              	.LCFI45:
 610              		.cfi_def_cfa_register 13
 611              		@ sp needed
 612 0012 5DF8047B 		ldr	r7, [sp], #4
 613              	.LCFI46:
 614              		.cfi_restore 7
 615              		.cfi_def_cfa_offset 0
 616 0016 7047     		bx	lr
 617              	.L45:
 618              		.align	2
 619              	.L44:
 620 0018 10E000E0 		.word	-536813552
 621              		.cfi_endproc
 622              	.LFE74:
 624              		.section	.text.HAL_ResumeTick,"ax",%progbits
 625              		.align	2
 626              		.weak	HAL_ResumeTick
 627              		.thumb
 628              		.thumb_func
 630              	HAL_ResumeTick:
 631              	.LFB75:
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 632              		.loc 1 417 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc3F7Krn.s 			page 19


 638              	.LCFI47:
 639              		.cfi_def_cfa_offset 4
 640              		.cfi_offset 7, -4
 641 0002 00AF     		add	r7, sp, #0
 642              	.LCFI48:
 643              		.cfi_def_cfa_register 7
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 644              		.loc 1 419 0
 645 0004 044A     		ldr	r2, .L47
 646 0006 044B     		ldr	r3, .L47
 647 0008 1B68     		ldr	r3, [r3]
 648 000a 43F00203 		orr	r3, r3, #2
 649 000e 1360     		str	r3, [r2]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 650              		.loc 1 420 0
 651 0010 BD46     		mov	sp, r7
 652              	.LCFI49:
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0012 5DF8047B 		ldr	r7, [sp], #4
 656              	.LCFI50:
 657              		.cfi_restore 7
 658              		.cfi_def_cfa_offset 0
 659 0016 7047     		bx	lr
 660              	.L48:
 661              		.align	2
 662              	.L47:
 663 0018 10E000E0 		.word	-536813552
 664              		.cfi_endproc
 665              	.LFE75:
 667              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 668              		.align	2
 669              		.global	HAL_GetHalVersion
 670              		.thumb
 671              		.thumb_func
 673              	HAL_GetHalVersion:
 674              	.LFB76:
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 675              		.loc 1 427 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679              		@ link register save eliminated.
 680 0000 80B4     		push	{r7}
 681              	.LCFI51:
 682              		.cfi_def_cfa_offset 4
 683              		.cfi_offset 7, -4
 684 0002 00AF     		add	r7, sp, #0
 685              	.LCFI52:
 686              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc3F7Krn.s 			page 20


 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return __STM32F1xx_HAL_VERSION;
 687              		.loc 1 428 0
 688 0004 024B     		ldr	r3, .L51
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 689              		.loc 1 429 0
 690 0006 1846     		mov	r0, r3
 691 0008 BD46     		mov	sp, r7
 692              	.LCFI53:
 693              		.cfi_def_cfa_register 13
 694              		@ sp needed
 695 000a 5DF8047B 		ldr	r7, [sp], #4
 696              	.LCFI54:
 697              		.cfi_restore 7
 698              		.cfi_def_cfa_offset 0
 699 000e 7047     		bx	lr
 700              	.L52:
 701              		.align	2
 702              	.L51:
 703 0010 00020101 		.word	16843264
 704              		.cfi_endproc
 705              	.LFE76:
 707              		.section	.text.HAL_GetREVID,"ax",%progbits
 708              		.align	2
 709              		.global	HAL_GetREVID
 710              		.thumb
 711              		.thumb_func
 713              	HAL_GetREVID:
 714              	.LFB77:
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 715              		.loc 1 443 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 1, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720 0000 80B4     		push	{r7}
 721              	.LCFI55:
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 00AF     		add	r7, sp, #0
 725              	.LCFI56:
 726              		.cfi_def_cfa_register 7
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 727              		.loc 1 444 0
 728 0004 034B     		ldr	r3, .L55
ARM GAS  /tmp/cc3F7Krn.s 			page 21


 729 0006 1B68     		ldr	r3, [r3]
 730 0008 1B0C     		lsrs	r3, r3, #16
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 731              		.loc 1 445 0
 732 000a 1846     		mov	r0, r3
 733 000c BD46     		mov	sp, r7
 734              	.LCFI57:
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 000e 5DF8047B 		ldr	r7, [sp], #4
 738              	.LCFI58:
 739              		.cfi_restore 7
 740              		.cfi_def_cfa_offset 0
 741 0012 7047     		bx	lr
 742              	.L56:
 743              		.align	2
 744              	.L55:
 745 0014 002004E0 		.word	-536600576
 746              		.cfi_endproc
 747              	.LFE77:
 749              		.section	.text.HAL_GetDEVID,"ax",%progbits
 750              		.align	2
 751              		.global	HAL_GetDEVID
 752              		.thumb
 753              		.thumb_func
 755              	HAL_GetDEVID:
 756              	.LFB78:
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 757              		.loc 1 459 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 1, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762 0000 80B4     		push	{r7}
 763              	.LCFI59:
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 7, -4
 766 0002 00AF     		add	r7, sp, #0
 767              	.LCFI60:
 768              		.cfi_def_cfa_register 7
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 769              		.loc 1 460 0
 770 0004 044B     		ldr	r3, .L59
 771 0006 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc3F7Krn.s 			page 22


 772 0008 C3F30B03 		ubfx	r3, r3, #0, #12
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 773              		.loc 1 461 0
 774 000c 1846     		mov	r0, r3
 775 000e BD46     		mov	sp, r7
 776              	.LCFI61:
 777              		.cfi_def_cfa_register 13
 778              		@ sp needed
 779 0010 5DF8047B 		ldr	r7, [sp], #4
 780              	.LCFI62:
 781              		.cfi_restore 7
 782              		.cfi_def_cfa_offset 0
 783 0014 7047     		bx	lr
 784              	.L60:
 785 0016 00BF     		.align	2
 786              	.L59:
 787 0018 002004E0 		.word	-536600576
 788              		.cfi_endproc
 789              	.LFE78:
 791              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 792              		.align	2
 793              		.global	HAL_DBGMCU_EnableDBGSleepMode
 794              		.thumb
 795              		.thumb_func
 797              	HAL_DBGMCU_EnableDBGSleepMode:
 798              	.LFB79:
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 799              		.loc 1 468 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              	.LCFI63:
 806              		.cfi_def_cfa_offset 4
 807              		.cfi_offset 7, -4
 808 0002 00AF     		add	r7, sp, #0
 809              	.LCFI64:
 810              		.cfi_def_cfa_register 7
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 811              		.loc 1 469 0
 812 0004 044A     		ldr	r2, .L62
 813 0006 044B     		ldr	r3, .L62
 814 0008 5B68     		ldr	r3, [r3, #4]
 815 000a 43F00103 		orr	r3, r3, #1
 816 000e 5360     		str	r3, [r2, #4]
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 817              		.loc 1 470 0
 818 0010 BD46     		mov	sp, r7
 819              	.LCFI65:
 820              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc3F7Krn.s 			page 23


 821              		@ sp needed
 822 0012 5DF8047B 		ldr	r7, [sp], #4
 823              	.LCFI66:
 824              		.cfi_restore 7
 825              		.cfi_def_cfa_offset 0
 826 0016 7047     		bx	lr
 827              	.L63:
 828              		.align	2
 829              	.L62:
 830 0018 002004E0 		.word	-536600576
 831              		.cfi_endproc
 832              	.LFE79:
 834              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 835              		.align	2
 836              		.global	HAL_DBGMCU_DisableDBGSleepMode
 837              		.thumb
 838              		.thumb_func
 840              	HAL_DBGMCU_DisableDBGSleepMode:
 841              	.LFB80:
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 842              		.loc 1 484 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846              		@ link register save eliminated.
 847 0000 80B4     		push	{r7}
 848              	.LCFI67:
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 7, -4
 851 0002 00AF     		add	r7, sp, #0
 852              	.LCFI68:
 853              		.cfi_def_cfa_register 7
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 854              		.loc 1 485 0
 855 0004 044A     		ldr	r2, .L65
 856 0006 044B     		ldr	r3, .L65
 857 0008 5B68     		ldr	r3, [r3, #4]
 858 000a 23F00103 		bic	r3, r3, #1
 859 000e 5360     		str	r3, [r2, #4]
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 860              		.loc 1 486 0
 861 0010 BD46     		mov	sp, r7
 862              	.LCFI69:
 863              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc3F7Krn.s 			page 24


 864              		@ sp needed
 865 0012 5DF8047B 		ldr	r7, [sp], #4
 866              	.LCFI70:
 867              		.cfi_restore 7
 868              		.cfi_def_cfa_offset 0
 869 0016 7047     		bx	lr
 870              	.L66:
 871              		.align	2
 872              	.L65:
 873 0018 002004E0 		.word	-536600576
 874              		.cfi_endproc
 875              	.LFE80:
 877              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 878              		.align	2
 879              		.global	HAL_DBGMCU_EnableDBGStopMode
 880              		.thumb
 881              		.thumb_func
 883              	HAL_DBGMCU_EnableDBGStopMode:
 884              	.LFB81:
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 885              		.loc 1 514 0
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 0
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890 0000 80B4     		push	{r7}
 891              	.LCFI71:
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 7, -4
 894 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc3F7Krn.s 			page 25


 895              	.LCFI72:
 896              		.cfi_def_cfa_register 7
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 897              		.loc 1 515 0
 898 0004 044A     		ldr	r2, .L68
 899 0006 044B     		ldr	r3, .L68
 900 0008 5B68     		ldr	r3, [r3, #4]
 901 000a 43F00203 		orr	r3, r3, #2
 902 000e 5360     		str	r3, [r2, #4]
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 903              		.loc 1 516 0
 904 0010 BD46     		mov	sp, r7
 905              	.LCFI73:
 906              		.cfi_def_cfa_register 13
 907              		@ sp needed
 908 0012 5DF8047B 		ldr	r7, [sp], #4
 909              	.LCFI74:
 910              		.cfi_restore 7
 911              		.cfi_def_cfa_offset 0
 912 0016 7047     		bx	lr
 913              	.L69:
 914              		.align	2
 915              	.L68:
 916 0018 002004E0 		.word	-536600576
 917              		.cfi_endproc
 918              	.LFE81:
 920              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 921              		.align	2
 922              		.global	HAL_DBGMCU_DisableDBGStopMode
 923              		.thumb
 924              		.thumb_func
 926              	HAL_DBGMCU_DisableDBGStopMode:
 927              	.LFB82:
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 928              		.loc 1 530 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932              		@ link register save eliminated.
 933 0000 80B4     		push	{r7}
 934              	.LCFI75:
 935              		.cfi_def_cfa_offset 4
 936              		.cfi_offset 7, -4
 937 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc3F7Krn.s 			page 26


 938              	.LCFI76:
 939              		.cfi_def_cfa_register 7
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 940              		.loc 1 531 0
 941 0004 044A     		ldr	r2, .L71
 942 0006 044B     		ldr	r3, .L71
 943 0008 5B68     		ldr	r3, [r3, #4]
 944 000a 23F00203 		bic	r3, r3, #2
 945 000e 5360     		str	r3, [r2, #4]
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 946              		.loc 1 532 0
 947 0010 BD46     		mov	sp, r7
 948              	.LCFI77:
 949              		.cfi_def_cfa_register 13
 950              		@ sp needed
 951 0012 5DF8047B 		ldr	r7, [sp], #4
 952              	.LCFI78:
 953              		.cfi_restore 7
 954              		.cfi_def_cfa_offset 0
 955 0016 7047     		bx	lr
 956              	.L72:
 957              		.align	2
 958              	.L71:
 959 0018 002004E0 		.word	-536600576
 960              		.cfi_endproc
 961              	.LFE82:
 963              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 964              		.align	2
 965              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 966              		.thumb
 967              		.thumb_func
 969              	HAL_DBGMCU_EnableDBGStandbyMode:
 970              	.LFB83:
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 971              		.loc 1 546 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 1, uses_anonymous_args = 0
 975              		@ link register save eliminated.
 976 0000 80B4     		push	{r7}
 977              	.LCFI79:
 978              		.cfi_def_cfa_offset 4
 979              		.cfi_offset 7, -4
 980 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc3F7Krn.s 			page 27


 981              	.LCFI80:
 982              		.cfi_def_cfa_register 7
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 983              		.loc 1 547 0
 984 0004 044A     		ldr	r2, .L74
 985 0006 044B     		ldr	r3, .L74
 986 0008 5B68     		ldr	r3, [r3, #4]
 987 000a 43F00403 		orr	r3, r3, #4
 988 000e 5360     		str	r3, [r2, #4]
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 989              		.loc 1 548 0
 990 0010 BD46     		mov	sp, r7
 991              	.LCFI81:
 992              		.cfi_def_cfa_register 13
 993              		@ sp needed
 994 0012 5DF8047B 		ldr	r7, [sp], #4
 995              	.LCFI82:
 996              		.cfi_restore 7
 997              		.cfi_def_cfa_offset 0
 998 0016 7047     		bx	lr
 999              	.L75:
 1000              		.align	2
 1001              	.L74:
 1002 0018 002004E0 		.word	-536600576
 1003              		.cfi_endproc
 1004              	.LFE83:
 1006              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1007              		.align	2
 1008              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1009              		.thumb
 1010              		.thumb_func
 1012              	HAL_DBGMCU_DisableDBGStandbyMode:
 1013              	.LFB84:
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 1014              		.loc 1 562 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 1019 0000 80B4     		push	{r7}
 1020              	.LCFI83:
 1021              		.cfi_def_cfa_offset 4
 1022              		.cfi_offset 7, -4
 1023 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc3F7Krn.s 			page 28


 1024              	.LCFI84:
 1025              		.cfi_def_cfa_register 7
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1026              		.loc 1 563 0
 1027 0004 044A     		ldr	r2, .L77
 1028 0006 044B     		ldr	r3, .L77
 1029 0008 5B68     		ldr	r3, [r3, #4]
 1030 000a 23F00403 		bic	r3, r3, #4
 1031 000e 5360     		str	r3, [r2, #4]
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 1032              		.loc 1 564 0
 1033 0010 BD46     		mov	sp, r7
 1034              	.LCFI85:
 1035              		.cfi_def_cfa_register 13
 1036              		@ sp needed
 1037 0012 5DF8047B 		ldr	r7, [sp], #4
 1038              	.LCFI86:
 1039              		.cfi_restore 7
 1040              		.cfi_def_cfa_offset 0
 1041 0016 7047     		bx	lr
 1042              	.L78:
 1043              		.align	2
 1044              	.L77:
 1045 0018 002004E0 		.word	-536600576
 1046              		.cfi_endproc
 1047              	.LFE84:
 1049              		.section	.text.HAL_GetUID,"ax",%progbits
 1050              		.align	2
 1051              		.global	HAL_GetUID
 1052              		.thumb
 1053              		.thumb_func
 1055              	HAL_GetUID:
 1056              	.LFB85:
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID pointer to 3 words array.
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 1057              		.loc 1 572 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062 0000 80B4     		push	{r7}
 1063              	.LCFI87:
 1064              		.cfi_def_cfa_offset 4
 1065              		.cfi_offset 7, -4
 1066 0002 83B0     		sub	sp, sp, #12
 1067              	.LCFI88:
 1068              		.cfi_def_cfa_offset 16
 1069 0004 00AF     		add	r7, sp, #0
 1070              	.LCFI89:
 1071              		.cfi_def_cfa_register 7
 1072 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc3F7Krn.s 			page 29


 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 1073              		.loc 1 573 0
 1074 0008 094B     		ldr	r3, .L80
 1075 000a 1A68     		ldr	r2, [r3]
 1076 000c 7B68     		ldr	r3, [r7, #4]
 1077 000e 1A60     		str	r2, [r3]
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 1078              		.loc 1 574 0
 1079 0010 7B68     		ldr	r3, [r7, #4]
 1080 0012 0433     		adds	r3, r3, #4
 1081 0014 074A     		ldr	r2, .L80+4
 1082 0016 1268     		ldr	r2, [r2]
 1083 0018 1A60     		str	r2, [r3]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 1084              		.loc 1 575 0
 1085 001a 7B68     		ldr	r3, [r7, #4]
 1086 001c 0833     		adds	r3, r3, #8
 1087 001e 064A     		ldr	r2, .L80+8
 1088 0020 1268     		ldr	r2, [r2]
 1089 0022 1A60     		str	r2, [r3]
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 1090              		.loc 1 576 0
 1091 0024 0C37     		adds	r7, r7, #12
 1092              	.LCFI90:
 1093              		.cfi_def_cfa_offset 4
 1094 0026 BD46     		mov	sp, r7
 1095              	.LCFI91:
 1096              		.cfi_def_cfa_register 13
 1097              		@ sp needed
 1098 0028 5DF8047B 		ldr	r7, [sp], #4
 1099              	.LCFI92:
 1100              		.cfi_restore 7
 1101              		.cfi_def_cfa_offset 0
 1102 002c 7047     		bx	lr
 1103              	.L81:
 1104 002e 00BF     		.align	2
 1105              	.L80:
 1106 0030 E8F7FF1F 		.word	536868840
 1107 0034 ECF7FF1F 		.word	536868844
 1108 0038 F0F7FF1F 		.word	536868848
 1109              		.cfi_endproc
 1110              	.LFE85:
 1112              		.text
 1113              	.Letext0:
 1114              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1115              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 1116              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1117              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1118              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1119              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1120              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
ARM GAS  /tmp/cc3F7Krn.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
                            *COM*:0000000000000004 uwTick
     /tmp/cc3F7Krn.s:24     .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/cc3F7Krn.s:21     .data.uwTickPrio:0000000000000000 $d
     /tmp/cc3F7Krn.s:30     .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/cc3F7Krn.s:33     .text.HAL_Init:0000000000000000 $t
     /tmp/cc3F7Krn.s:38     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/cc3F7Krn.s:201    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc3F7Krn.s:135    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc3F7Krn.s:75     .text.HAL_Init:0000000000000028 $d
     /tmp/cc3F7Krn.s:80     .text.HAL_DeInit:0000000000000000 $t
     /tmp/cc3F7Krn.s:85     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/cc3F7Krn.s:168    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/cc3F7Krn.s:125    .text.HAL_DeInit:000000000000002c $d
     /tmp/cc3F7Krn.s:130    .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc3F7Krn.s:163    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/cc3F7Krn.s:196    .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc3F7Krn.s:270    .text.HAL_InitTick:0000000000000054 $d
     /tmp/cc3F7Krn.s:277    .text.HAL_IncTick:0000000000000000 $t
     /tmp/cc3F7Krn.s:282    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/cc3F7Krn.s:318    .text.HAL_IncTick:000000000000001c $d
     /tmp/cc3F7Krn.s:324    .text.HAL_GetTick:0000000000000000 $t
     /tmp/cc3F7Krn.s:329    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/cc3F7Krn.s:360    .text.HAL_GetTick:0000000000000014 $d
     /tmp/cc3F7Krn.s:365    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/cc3F7Krn.s:370    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/cc3F7Krn.s:401    .text.HAL_GetTickPrio:0000000000000014 $d
     /tmp/cc3F7Krn.s:406    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/cc3F7Krn.s:411    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/cc3F7Krn.s:466    .text.HAL_SetTickFreq:0000000000000038 $d
     /tmp/cc3F7Krn.s:472    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/cc3F7Krn.s:477    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/cc3F7Krn.s:508    .text.HAL_GetTickFreq:0000000000000014 $d
     /tmp/cc3F7Krn.s:513    .text.HAL_Delay:0000000000000000 $t
     /tmp/cc3F7Krn.s:518    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/cc3F7Krn.s:577    .text.HAL_Delay:0000000000000040 $d
     /tmp/cc3F7Krn.s:582    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc3F7Krn.s:587    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc3F7Krn.s:620    .text.HAL_SuspendTick:0000000000000018 $d
     /tmp/cc3F7Krn.s:625    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc3F7Krn.s:630    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc3F7Krn.s:663    .text.HAL_ResumeTick:0000000000000018 $d
     /tmp/cc3F7Krn.s:668    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/cc3F7Krn.s:673    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/cc3F7Krn.s:703    .text.HAL_GetHalVersion:0000000000000010 $d
     /tmp/cc3F7Krn.s:708    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/cc3F7Krn.s:713    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/cc3F7Krn.s:745    .text.HAL_GetREVID:0000000000000014 $d
     /tmp/cc3F7Krn.s:750    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/cc3F7Krn.s:755    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/cc3F7Krn.s:787    .text.HAL_GetDEVID:0000000000000018 $d
     /tmp/cc3F7Krn.s:792    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/cc3F7Krn.s:797    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/cc3F7Krn.s:830    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000018 $d
     /tmp/cc3F7Krn.s:835    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/cc3F7Krn.s:840    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
ARM GAS  /tmp/cc3F7Krn.s 			page 31


     /tmp/cc3F7Krn.s:873    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000018 $d
     /tmp/cc3F7Krn.s:878    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/cc3F7Krn.s:883    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/cc3F7Krn.s:916    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000018 $d
     /tmp/cc3F7Krn.s:921    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/cc3F7Krn.s:926    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/cc3F7Krn.s:959    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000018 $d
     /tmp/cc3F7Krn.s:964    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/cc3F7Krn.s:969    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/cc3F7Krn.s:1002   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000018 $d
     /tmp/cc3F7Krn.s:1007   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/cc3F7Krn.s:1012   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/cc3F7Krn.s:1045   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000018 $d
     /tmp/cc3F7Krn.s:1050   .text.HAL_GetUID:0000000000000000 $t
     /tmp/cc3F7Krn.s:1055   .text.HAL_GetUID:0000000000000000 HAL_GetUID
     /tmp/cc3F7Krn.s:1106   .text.HAL_GetUID:0000000000000030 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
