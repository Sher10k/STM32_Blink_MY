ARM GAS  /tmp/cc9wfwek.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.HAL_UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	HAL_UART_Init
  21              		.thumb
  22              		.thumb_func
  24              	HAL_UART_Init:
  25              	.LFB63:
  26              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @file    stm32f1xx_hal_uart.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the UART pins (TX as alternate function pull-up, RX as alternate functi
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
ARM GAS  /tmp/cc9wfwek.s 			page 2


  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   Tx/Rx parameters.                
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx channel.
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         Three operation modes are available within this driver:
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =================================
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** Interrupt mode IO operation ***
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** DMA mode IO operation ***
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      ==============================
ARM GAS  /tmp/cc9wfwek.s 			page 3


  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..] 
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      =============================================
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   @endverbatim
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      [..]
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (@) Additionnal remark: If the parity is enabled, then the MSB bit of the data written
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------------------|---------------------------------------|
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     +-------------------------------------------------------------+
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @attention
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
ARM GAS  /tmp/cc9wfwek.s 			page 4


 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *      without specific prior written permission.
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ******************************************************************************
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #include "stm32f1xx_hal.h"
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup STM32F1xx_HAL_Driver
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART UART
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief HAL UART module driver
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cc9wfwek.s 			page 5


 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in asynchronous mode.
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Baud Rate
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Word Length 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Stop Bit
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Hardware flow control
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Receiver/transmitter modes
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) Over Sampling Method
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manuals 
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (RM0008 for STM32F10Xxx MCUs and RM0041 for STM32F100xx MCUs)).
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  /tmp/cc9wfwek.s 			page 6


  27              		.loc 1 260 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
  43              		.loc 1 262 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 002B     		cmp	r3, #0
  46 000c 01D1     		bne	.L2
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
  47              		.loc 1 264 0
  48 000e 0123     		movs	r3, #1
  49 0010 3FE0     		b	.L3
  50              	.L2:
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 */
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  51              		.loc 1 283 0
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 93F83930 		ldrb	r3, [r3, #57]
  54 0018 DBB2     		uxtb	r3, r3
  55 001a 002B     		cmp	r3, #0
  56 001c 06D1     		bne	.L4
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {  
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  57              		.loc 1 286 0
ARM GAS  /tmp/cc9wfwek.s 			page 7


  58 001e 7B68     		ldr	r3, [r7, #4]
  59 0020 0022     		movs	r2, #0
  60 0022 83F83820 		strb	r2, [r3, #56]
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  61              		.loc 1 289 0
  62 0026 7868     		ldr	r0, [r7, #4]
  63 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  64              	.L4:
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  65              		.loc 1 292 0
  66 002c 7B68     		ldr	r3, [r7, #4]
  67 002e 2422     		movs	r2, #36
  68 0030 83F83920 		strb	r2, [r3, #57]
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  69              		.loc 1 295 0
  70 0034 7B68     		ldr	r3, [r7, #4]
  71 0036 1B68     		ldr	r3, [r3]
  72 0038 7A68     		ldr	r2, [r7, #4]
  73 003a 1268     		ldr	r2, [r2]
  74 003c D268     		ldr	r2, [r2, #12]
  75 003e 22F40052 		bic	r2, r2, #8192
  76 0042 DA60     		str	r2, [r3, #12]
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
  77              		.loc 1 298 0
  78 0044 7868     		ldr	r0, [r7, #4]
  79 0046 FFF7FEFF 		bl	UART_SetConfig
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  80              		.loc 1 303 0
  81 004a 7B68     		ldr	r3, [r7, #4]
  82 004c 1B68     		ldr	r3, [r3]
  83 004e 7A68     		ldr	r2, [r7, #4]
  84 0050 1268     		ldr	r2, [r2]
  85 0052 1269     		ldr	r2, [r2, #16]
  86 0054 22F49042 		bic	r2, r2, #18432
  87 0058 1A61     		str	r2, [r3, #16]
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  88              		.loc 1 304 0
  89 005a 7B68     		ldr	r3, [r7, #4]
  90 005c 1B68     		ldr	r3, [r3]
  91 005e 7A68     		ldr	r2, [r7, #4]
  92 0060 1268     		ldr	r2, [r2]
  93 0062 5269     		ldr	r2, [r2, #20]
  94 0064 22F02A02 		bic	r2, r2, #42
  95 0068 5A61     		str	r2, [r3, #20]
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/cc9wfwek.s 			page 8


 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  96              		.loc 1 307 0
  97 006a 7B68     		ldr	r3, [r7, #4]
  98 006c 1B68     		ldr	r3, [r3]
  99 006e 7A68     		ldr	r2, [r7, #4]
 100 0070 1268     		ldr	r2, [r2]
 101 0072 D268     		ldr	r2, [r2, #12]
 102 0074 42F40052 		orr	r2, r2, #8192
 103 0078 DA60     		str	r2, [r3, #12]
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 104              		.loc 1 310 0
 105 007a 7B68     		ldr	r3, [r7, #4]
 106 007c 0022     		movs	r2, #0
 107 007e DA63     		str	r2, [r3, #60]
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 108              		.loc 1 311 0
 109 0080 7B68     		ldr	r3, [r7, #4]
 110 0082 2022     		movs	r2, #32
 111 0084 83F83920 		strb	r2, [r3, #57]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 112              		.loc 1 312 0
 113 0088 7B68     		ldr	r3, [r7, #4]
 114 008a 2022     		movs	r2, #32
 115 008c 83F83A20 		strb	r2, [r3, #58]
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 116              		.loc 1 314 0
 117 0090 0023     		movs	r3, #0
 118              	.L3:
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 119              		.loc 1 315 0
 120 0092 1846     		mov	r0, r3
 121 0094 0837     		adds	r7, r7, #8
 122              	.LCFI3:
 123              		.cfi_def_cfa_offset 8
 124 0096 BD46     		mov	sp, r7
 125              	.LCFI4:
 126              		.cfi_def_cfa_register 13
 127              		@ sp needed
 128 0098 80BD     		pop	{r7, pc}
 129              		.cfi_endproc
 130              	.LFE63:
 132 009a 00BF     		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 133              		.align	2
 134              		.global	HAL_HalfDuplex_Init
 135              		.thumb
 136              		.thumb_func
 138              	HAL_HalfDuplex_Init:
 139              	.LFB64:
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/cc9wfwek.s 			page 9


 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 140              		.loc 1 325 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 8
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144 0000 80B5     		push	{r7, lr}
 145              	.LCFI5:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 82B0     		sub	sp, sp, #8
 150              	.LCFI6:
 151              		.cfi_def_cfa_offset 16
 152 0004 00AF     		add	r7, sp, #0
 153              	.LCFI7:
 154              		.cfi_def_cfa_register 7
 155 0006 7860     		str	r0, [r7, #4]
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 156              		.loc 1 327 0
 157 0008 7B68     		ldr	r3, [r7, #4]
 158 000a 002B     		cmp	r3, #0
 159 000c 01D1     		bne	.L6
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 160              		.loc 1 329 0
 161 000e 0123     		movs	r3, #1
 162 0010 47E0     		b	.L7
 163              	.L6:
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */ 
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 164              		.loc 1 338 0
 165 0012 7B68     		ldr	r3, [r7, #4]
 166 0014 93F83930 		ldrb	r3, [r3, #57]
 167 0018 DBB2     		uxtb	r3, r3
 168 001a 002B     		cmp	r3, #0
 169 001c 06D1     		bne	.L8
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 170              		.loc 1 341 0
 171 001e 7B68     		ldr	r3, [r7, #4]
 172 0020 0022     		movs	r2, #0
 173 0022 83F83820 		strb	r2, [r3, #56]
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
ARM GAS  /tmp/cc9wfwek.s 			page 10


 174              		.loc 1 343 0
 175 0026 7868     		ldr	r0, [r7, #4]
 176 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 177              	.L8:
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 178              		.loc 1 346 0
 179 002c 7B68     		ldr	r3, [r7, #4]
 180 002e 2422     		movs	r2, #36
 181 0030 83F83920 		strb	r2, [r3, #57]
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 182              		.loc 1 349 0
 183 0034 7B68     		ldr	r3, [r7, #4]
 184 0036 1B68     		ldr	r3, [r3]
 185 0038 7A68     		ldr	r2, [r7, #4]
 186 003a 1268     		ldr	r2, [r2]
 187 003c D268     		ldr	r2, [r2, #12]
 188 003e 22F40052 		bic	r2, r2, #8192
 189 0042 DA60     		str	r2, [r3, #12]
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 190              		.loc 1 352 0
 191 0044 7868     		ldr	r0, [r7, #4]
 192 0046 FFF7FEFF 		bl	UART_SetConfig
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 193              		.loc 1 357 0
 194 004a 7B68     		ldr	r3, [r7, #4]
 195 004c 1B68     		ldr	r3, [r3]
 196 004e 7A68     		ldr	r2, [r7, #4]
 197 0050 1268     		ldr	r2, [r2]
 198 0052 1269     		ldr	r2, [r2, #16]
 199 0054 22F49042 		bic	r2, r2, #18432
 200 0058 1A61     		str	r2, [r3, #16]
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 201              		.loc 1 358 0
 202 005a 7B68     		ldr	r3, [r7, #4]
 203 005c 1B68     		ldr	r3, [r3]
 204 005e 7A68     		ldr	r2, [r7, #4]
 205 0060 1268     		ldr	r2, [r2]
 206 0062 5269     		ldr	r2, [r2, #20]
 207 0064 22F02202 		bic	r2, r2, #34
 208 0068 5A61     		str	r2, [r3, #20]
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 209              		.loc 1 361 0
 210 006a 7B68     		ldr	r3, [r7, #4]
 211 006c 1B68     		ldr	r3, [r3]
 212 006e 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 11


 213 0070 1268     		ldr	r2, [r2]
 214 0072 5269     		ldr	r2, [r2, #20]
 215 0074 42F00802 		orr	r2, r2, #8
 216 0078 5A61     		str	r2, [r3, #20]
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 217              		.loc 1 364 0
 218 007a 7B68     		ldr	r3, [r7, #4]
 219 007c 1B68     		ldr	r3, [r3]
 220 007e 7A68     		ldr	r2, [r7, #4]
 221 0080 1268     		ldr	r2, [r2]
 222 0082 D268     		ldr	r2, [r2, #12]
 223 0084 42F40052 		orr	r2, r2, #8192
 224 0088 DA60     		str	r2, [r3, #12]
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 225              		.loc 1 367 0
 226 008a 7B68     		ldr	r3, [r7, #4]
 227 008c 0022     		movs	r2, #0
 228 008e DA63     		str	r2, [r3, #60]
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 229              		.loc 1 368 0
 230 0090 7B68     		ldr	r3, [r7, #4]
 231 0092 2022     		movs	r2, #32
 232 0094 83F83920 		strb	r2, [r3, #57]
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 233              		.loc 1 369 0
 234 0098 7B68     		ldr	r3, [r7, #4]
 235 009a 2022     		movs	r2, #32
 236 009c 83F83A20 		strb	r2, [r3, #58]
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 237              		.loc 1 371 0
 238 00a0 0023     		movs	r3, #0
 239              	.L7:
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 240              		.loc 1 372 0
 241 00a2 1846     		mov	r0, r3
 242 00a4 0837     		adds	r7, r7, #8
 243              	.LCFI8:
 244              		.cfi_def_cfa_offset 8
 245 00a6 BD46     		mov	sp, r7
 246              	.LCFI9:
 247              		.cfi_def_cfa_register 13
 248              		@ sp needed
 249 00a8 80BD     		pop	{r7, pc}
 250              		.cfi_endproc
 251              	.LFE64:
 253              		.section	.text.HAL_LIN_Init,"ax",%progbits
 254              		.align	2
 255              		.global	HAL_LIN_Init
 256              		.thumb
 257              		.thumb_func
 259              	HAL_LIN_Init:
 260              	.LFB65:
ARM GAS  /tmp/cc9wfwek.s 			page 12


 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  BreakDetectLength: Specifies the LIN break detection length.
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 261              		.loc 1 386 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265 0000 80B5     		push	{r7, lr}
 266              	.LCFI10:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 7, -8
 269              		.cfi_offset 14, -4
 270 0002 82B0     		sub	sp, sp, #8
 271              	.LCFI11:
 272              		.cfi_def_cfa_offset 16
 273 0004 00AF     		add	r7, sp, #0
 274              	.LCFI12:
 275              		.cfi_def_cfa_register 7
 276 0006 7860     		str	r0, [r7, #4]
 277 0008 3960     		str	r1, [r7]
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 278              		.loc 1 388 0
 279 000a 7B68     		ldr	r3, [r7, #4]
 280 000c 002B     		cmp	r3, #0
 281 000e 01D1     		bne	.L10
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 282              		.loc 1 390 0
 283 0010 0123     		movs	r3, #1
 284 0012 51E0     		b	.L11
 285              	.L10:
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the LIN UART instance */  
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Break detection length parameter */
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 286              		.loc 1 402 0
 287 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 13


 288 0016 93F83930 		ldrb	r3, [r3, #57]
 289 001a DBB2     		uxtb	r3, r3
 290 001c 002B     		cmp	r3, #0
 291 001e 06D1     		bne	.L12
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 292              		.loc 1 405 0
 293 0020 7B68     		ldr	r3, [r7, #4]
 294 0022 0022     		movs	r2, #0
 295 0024 83F83820 		strb	r2, [r3, #56]
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 296              		.loc 1 407 0
 297 0028 7868     		ldr	r0, [r7, #4]
 298 002a FFF7FEFF 		bl	HAL_UART_MspInit
 299              	.L12:
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 300              		.loc 1 410 0
 301 002e 7B68     		ldr	r3, [r7, #4]
 302 0030 2422     		movs	r2, #36
 303 0032 83F83920 		strb	r2, [r3, #57]
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 304              		.loc 1 413 0
 305 0036 7B68     		ldr	r3, [r7, #4]
 306 0038 1B68     		ldr	r3, [r3]
 307 003a 7A68     		ldr	r2, [r7, #4]
 308 003c 1268     		ldr	r2, [r2]
 309 003e D268     		ldr	r2, [r2, #12]
 310 0040 22F40052 		bic	r2, r2, #8192
 311 0044 DA60     		str	r2, [r3, #12]
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 312              		.loc 1 416 0
 313 0046 7868     		ldr	r0, [r7, #4]
 314 0048 FFF7FEFF 		bl	UART_SetConfig
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 315              		.loc 1 421 0
 316 004c 7B68     		ldr	r3, [r7, #4]
 317 004e 1B68     		ldr	r3, [r3]
 318 0050 7A68     		ldr	r2, [r7, #4]
 319 0052 1268     		ldr	r2, [r2]
 320 0054 1269     		ldr	r2, [r2, #16]
 321 0056 22F40062 		bic	r2, r2, #2048
 322 005a 1A61     		str	r2, [r3, #16]
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 323              		.loc 1 422 0
 324 005c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 14


 325 005e 1B68     		ldr	r3, [r3]
 326 0060 7A68     		ldr	r2, [r7, #4]
 327 0062 1268     		ldr	r2, [r2]
 328 0064 5269     		ldr	r2, [r2, #20]
 329 0066 22F02A02 		bic	r2, r2, #42
 330 006a 5A61     		str	r2, [r3, #20]
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 331              		.loc 1 425 0
 332 006c 7B68     		ldr	r3, [r7, #4]
 333 006e 1B68     		ldr	r3, [r3]
 334 0070 7A68     		ldr	r2, [r7, #4]
 335 0072 1268     		ldr	r2, [r2]
 336 0074 1269     		ldr	r2, [r2, #16]
 337 0076 42F48042 		orr	r2, r2, #16384
 338 007a 1A61     		str	r2, [r3, #16]
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 339              		.loc 1 428 0
 340 007c 7B68     		ldr	r3, [r7, #4]
 341 007e 1B68     		ldr	r3, [r3]
 342 0080 7A68     		ldr	r2, [r7, #4]
 343 0082 1268     		ldr	r2, [r2]
 344 0084 1269     		ldr	r2, [r2, #16]
 345 0086 22F02001 		bic	r1, r2, #32
 346 008a 3A68     		ldr	r2, [r7]
 347 008c 0A43     		orrs	r2, r2, r1
 348 008e 1A61     		str	r2, [r3, #16]
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 349              		.loc 1 431 0
 350 0090 7B68     		ldr	r3, [r7, #4]
 351 0092 1B68     		ldr	r3, [r3]
 352 0094 7A68     		ldr	r2, [r7, #4]
 353 0096 1268     		ldr	r2, [r2]
 354 0098 D268     		ldr	r2, [r2, #12]
 355 009a 42F40052 		orr	r2, r2, #8192
 356 009e DA60     		str	r2, [r3, #12]
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state*/
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 357              		.loc 1 434 0
 358 00a0 7B68     		ldr	r3, [r7, #4]
 359 00a2 0022     		movs	r2, #0
 360 00a4 DA63     		str	r2, [r3, #60]
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 361              		.loc 1 435 0
 362 00a6 7B68     		ldr	r3, [r7, #4]
 363 00a8 2022     		movs	r2, #32
 364 00aa 83F83920 		strb	r2, [r3, #57]
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 365              		.loc 1 436 0
 366 00ae 7B68     		ldr	r3, [r7, #4]
 367 00b0 2022     		movs	r2, #32
ARM GAS  /tmp/cc9wfwek.s 			page 15


 368 00b2 83F83A20 		strb	r2, [r3, #58]
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 369              		.loc 1 438 0
 370 00b6 0023     		movs	r3, #0
 371              	.L11:
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 372              		.loc 1 439 0
 373 00b8 1846     		mov	r0, r3
 374 00ba 0837     		adds	r7, r7, #8
 375              	.LCFI13:
 376              		.cfi_def_cfa_offset 8
 377 00bc BD46     		mov	sp, r7
 378              	.LCFI14:
 379              		.cfi_def_cfa_register 13
 380              		@ sp needed
 381 00be 80BD     		pop	{r7, pc}
 382              		.cfi_endproc
 383              	.LFE65:
 385              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 386              		.align	2
 387              		.global	HAL_MultiProcessor_Init
 388              		.thumb
 389              		.thumb_func
 391              	HAL_MultiProcessor_Init:
 392              	.LFB66:
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Address: USART address
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  WakeUpMethod: specifies the USART wake-up method.
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This parameter can be one of the following values:
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 393              		.loc 1 454 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 16
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397 0000 80B5     		push	{r7, lr}
 398              	.LCFI15:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 84B0     		sub	sp, sp, #16
 403              	.LCFI16:
 404              		.cfi_def_cfa_offset 24
 405 0004 00AF     		add	r7, sp, #0
 406              	.LCFI17:
 407              		.cfi_def_cfa_register 7
 408 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/cc9wfwek.s 			page 16


 409 0008 0B46     		mov	r3, r1
 410 000a 7A60     		str	r2, [r7, #4]
 411 000c FB72     		strb	r3, [r7, #11]
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 412              		.loc 1 456 0
 413 000e FB68     		ldr	r3, [r7, #12]
 414 0010 002B     		cmp	r3, #0
 415 0012 01D1     		bne	.L14
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 416              		.loc 1 458 0
 417 0014 0123     		movs	r3, #1
 418 0016 53E0     		b	.L15
 419              	.L14:
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check UART instance capabilities */  
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MULTIPROCESSOR_INSTANCE(huart->Instance));
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 420              		.loc 1 472 0
 421 0018 FB68     		ldr	r3, [r7, #12]
 422 001a 93F83930 		ldrb	r3, [r3, #57]
 423 001e DBB2     		uxtb	r3, r3
 424 0020 002B     		cmp	r3, #0
 425 0022 06D1     		bne	.L16
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 426              		.loc 1 475 0
 427 0024 FB68     		ldr	r3, [r7, #12]
 428 0026 0022     		movs	r2, #0
 429 0028 83F83820 		strb	r2, [r3, #56]
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init the low level hardware */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 430              		.loc 1 477 0
 431 002c F868     		ldr	r0, [r7, #12]
 432 002e FFF7FEFF 		bl	HAL_UART_MspInit
 433              	.L16:
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 434              		.loc 1 480 0
 435 0032 FB68     		ldr	r3, [r7, #12]
 436 0034 2422     		movs	r2, #36
 437 0036 83F83920 		strb	r2, [r3, #57]
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the peripheral */
ARM GAS  /tmp/cc9wfwek.s 			page 17


 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 438              		.loc 1 483 0
 439 003a FB68     		ldr	r3, [r7, #12]
 440 003c 1B68     		ldr	r3, [r3]
 441 003e FA68     		ldr	r2, [r7, #12]
 442 0040 1268     		ldr	r2, [r2]
 443 0042 D268     		ldr	r2, [r2, #12]
 444 0044 22F40052 		bic	r2, r2, #8192
 445 0048 DA60     		str	r2, [r3, #12]
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the UART Communication parameters */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_SetConfig(huart);
 446              		.loc 1 486 0
 447 004a F868     		ldr	r0, [r7, #12]
 448 004c FFF7FEFF 		bl	UART_SetConfig
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 449              		.loc 1 491 0
 450 0050 FB68     		ldr	r3, [r7, #12]
 451 0052 1B68     		ldr	r3, [r3]
 452 0054 FA68     		ldr	r2, [r7, #12]
 453 0056 1268     		ldr	r2, [r2]
 454 0058 1269     		ldr	r2, [r2, #16]
 455 005a 22F49042 		bic	r2, r2, #18432
 456 005e 1A61     		str	r2, [r3, #16]
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 457              		.loc 1 492 0
 458 0060 FB68     		ldr	r3, [r7, #12]
 459 0062 1B68     		ldr	r3, [r3]
 460 0064 FA68     		ldr	r2, [r7, #12]
 461 0066 1268     		ldr	r2, [r2]
 462 0068 5269     		ldr	r2, [r2, #20]
 463 006a 22F02A02 		bic	r2, r2, #42
 464 006e 5A61     		str	r2, [r3, #20]
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the USART address node */
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, Address);
 465              		.loc 1 495 0
 466 0070 FB68     		ldr	r3, [r7, #12]
 467 0072 1B68     		ldr	r3, [r3]
 468 0074 FA68     		ldr	r2, [r7, #12]
 469 0076 1268     		ldr	r2, [r2]
 470 0078 1269     		ldr	r2, [r2, #16]
 471 007a 22F00F01 		bic	r1, r2, #15
 472 007e FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 473 0080 0A43     		orrs	r2, r2, r1
 474 0082 1A61     		str	r2, [r3, #16]
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 475              		.loc 1 498 0
 476 0084 FB68     		ldr	r3, [r7, #12]
 477 0086 1B68     		ldr	r3, [r3]
 478 0088 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/cc9wfwek.s 			page 18


 479 008a 1268     		ldr	r2, [r2]
 480 008c D268     		ldr	r2, [r2, #12]
 481 008e 22F40061 		bic	r1, r2, #2048
 482 0092 7A68     		ldr	r2, [r7, #4]
 483 0094 0A43     		orrs	r2, r2, r1
 484 0096 DA60     		str	r2, [r3, #12]
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the peripheral */
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 485              		.loc 1 501 0
 486 0098 FB68     		ldr	r3, [r7, #12]
 487 009a 1B68     		ldr	r3, [r3]
 488 009c FA68     		ldr	r2, [r7, #12]
 489 009e 1268     		ldr	r2, [r2]
 490 00a0 D268     		ldr	r2, [r2, #12]
 491 00a2 42F40052 		orr	r2, r2, #8192
 492 00a6 DA60     		str	r2, [r3, #12]
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Initialize the UART state */
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 493              		.loc 1 504 0
 494 00a8 FB68     		ldr	r3, [r7, #12]
 495 00aa 0022     		movs	r2, #0
 496 00ac DA63     		str	r2, [r3, #60]
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 497              		.loc 1 505 0
 498 00ae FB68     		ldr	r3, [r7, #12]
 499 00b0 2022     		movs	r2, #32
 500 00b2 83F83920 		strb	r2, [r3, #57]
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 501              		.loc 1 506 0
 502 00b6 FB68     		ldr	r3, [r7, #12]
 503 00b8 2022     		movs	r2, #32
 504 00ba 83F83A20 		strb	r2, [r3, #58]
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 505              		.loc 1 508 0
 506 00be 0023     		movs	r3, #0
 507              	.L15:
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 508              		.loc 1 509 0
 509 00c0 1846     		mov	r0, r3
 510 00c2 1037     		adds	r7, r7, #16
 511              	.LCFI18:
 512              		.cfi_def_cfa_offset 8
 513 00c4 BD46     		mov	sp, r7
 514              	.LCFI19:
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 00c6 80BD     		pop	{r7, pc}
 518              		.cfi_endproc
 519              	.LFE66:
 521              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 522              		.align	2
 523              		.global	HAL_UART_DeInit
 524              		.thumb
 525              		.thumb_func
ARM GAS  /tmp/cc9wfwek.s 			page 19


 527              	HAL_UART_DeInit:
 528              	.LFB67:
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 529              		.loc 1 518 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 8
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              	.LCFI20:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 7, -8
 537              		.cfi_offset 14, -4
 538 0002 82B0     		sub	sp, sp, #8
 539              	.LCFI21:
 540              		.cfi_def_cfa_offset 16
 541 0004 00AF     		add	r7, sp, #0
 542              	.LCFI22:
 543              		.cfi_def_cfa_register 7
 544 0006 7860     		str	r0, [r7, #4]
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the UART handle allocation */
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart == NULL)
 545              		.loc 1 520 0
 546 0008 7B68     		ldr	r3, [r7, #4]
 547 000a 002B     		cmp	r3, #0
 548 000c 01D1     		bne	.L18
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_ERROR;
 549              		.loc 1 522 0
 550 000e 0123     		movs	r3, #1
 551 0010 16E0     		b	.L19
 552              	.L18:
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 553              		.loc 1 528 0
 554 0012 7B68     		ldr	r3, [r7, #4]
 555 0014 2422     		movs	r2, #36
 556 0016 83F83920 		strb	r2, [r3, #57]
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DeInit the low level hardware */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 557              		.loc 1 531 0
 558 001a 7868     		ldr	r0, [r7, #4]
 559 001c FFF7FEFF 		bl	HAL_UART_MspDeInit
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc9wfwek.s 			page 20


 560              		.loc 1 533 0
 561 0020 7B68     		ldr	r3, [r7, #4]
 562 0022 0022     		movs	r2, #0
 563 0024 DA63     		str	r2, [r3, #60]
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 564              		.loc 1 534 0
 565 0026 7B68     		ldr	r3, [r7, #4]
 566 0028 0022     		movs	r2, #0
 567 002a 83F83920 		strb	r2, [r3, #57]
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 568              		.loc 1 535 0
 569 002e 7B68     		ldr	r3, [r7, #4]
 570 0030 0022     		movs	r2, #0
 571 0032 83F83A20 		strb	r2, [r3, #58]
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlock */
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 572              		.loc 1 538 0
 573 0036 7B68     		ldr	r3, [r7, #4]
 574 0038 0022     		movs	r2, #0
 575 003a 83F83820 		strb	r2, [r3, #56]
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 576              		.loc 1 540 0
 577 003e 0023     		movs	r3, #0
 578              	.L19:
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 579              		.loc 1 541 0
 580 0040 1846     		mov	r0, r3
 581 0042 0837     		adds	r7, r7, #8
 582              	.LCFI23:
 583              		.cfi_def_cfa_offset 8
 584 0044 BD46     		mov	sp, r7
 585              	.LCFI24:
 586              		.cfi_def_cfa_register 13
 587              		@ sp needed
 588 0046 80BD     		pop	{r7, pc}
 589              		.cfi_endproc
 590              	.LFE67:
 592              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 593              		.align	2
 594              		.weak	HAL_UART_MspInit
 595              		.thumb
 596              		.thumb_func
 598              	HAL_UART_MspInit:
 599              	.LFB68:
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP Init.
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 600              		.loc 1 550 0
 601              		.cfi_startproc
ARM GAS  /tmp/cc9wfwek.s 			page 21


 602              		@ args = 0, pretend = 0, frame = 8
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605 0000 80B4     		push	{r7}
 606              	.LCFI25:
 607              		.cfi_def_cfa_offset 4
 608              		.cfi_offset 7, -4
 609 0002 83B0     		sub	sp, sp, #12
 610              	.LCFI26:
 611              		.cfi_def_cfa_offset 16
 612 0004 00AF     		add	r7, sp, #0
 613              	.LCFI27:
 614              		.cfi_def_cfa_register 7
 615 0006 7860     		str	r0, [r7, #4]
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 616              		.loc 1 556 0
 617 0008 0C37     		adds	r7, r7, #12
 618              	.LCFI28:
 619              		.cfi_def_cfa_offset 4
 620 000a BD46     		mov	sp, r7
 621              	.LCFI29:
 622              		.cfi_def_cfa_register 13
 623              		@ sp needed
 624 000c 5DF8047B 		ldr	r7, [sp], #4
 625              	.LCFI30:
 626              		.cfi_restore 7
 627              		.cfi_def_cfa_offset 0
 628 0010 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE68:
 632 0012 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 633              		.align	2
 634              		.weak	HAL_UART_MspDeInit
 635              		.thumb
 636              		.thumb_func
 638              	HAL_UART_MspDeInit:
 639              	.LFB69:
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 640              		.loc 1 565 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc9wfwek.s 			page 22


 646              	.LCFI31:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 7, -4
 649 0002 83B0     		sub	sp, sp, #12
 650              	.LCFI32:
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
 653              	.LCFI33:
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 656              		.loc 1 571 0
 657 0008 0C37     		adds	r7, r7, #12
 658              	.LCFI34:
 659              		.cfi_def_cfa_offset 4
 660 000a BD46     		mov	sp, r7
 661              	.LCFI35:
 662              		.cfi_def_cfa_register 13
 663              		@ sp needed
 664 000c 5DF8047B 		ldr	r7, [sp], #4
 665              	.LCFI36:
 666              		.cfi_restore 7
 667              		.cfi_def_cfa_offset 0
 668 0010 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE69:
 672 0012 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 673              		.align	2
 674              		.global	HAL_UART_Transmit
 675              		.thumb
 676              		.thumb_func
 678              	HAL_UART_Transmit:
 679              	.LFB70:
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### IO operation functions #####
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     and Half duplex data transfers.
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) There are two modes of transfer:
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
ARM GAS  /tmp/cc9wfwek.s 			page 23


 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             after finishing transfer.  
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             using DMA mode.
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             a communication error is detected.
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Blocking mode APIs are:
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAPause()
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAResume()
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_DMAStop()
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxHalfCpltCallback()
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxHalfCpltCallback()
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     [..]
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           can't be useful.
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration  
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 680              		.loc 1 644 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/cc9wfwek.s 			page 24


 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684 0000 80B5     		push	{r7, lr}
 685              	.LCFI37:
 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 7, -8
 688              		.cfi_offset 14, -4
 689 0002 88B0     		sub	sp, sp, #32
 690              	.LCFI38:
 691              		.cfi_def_cfa_offset 40
 692 0004 02AF     		add	r7, sp, #8
 693              	.LCFI39:
 694              		.cfi_def_cfa 7, 32
 695 0006 F860     		str	r0, [r7, #12]
 696 0008 B960     		str	r1, [r7, #8]
 697 000a 3B60     		str	r3, [r7]
 698 000c 1346     		mov	r3, r2	@ movhi
 699 000e FB80     		strh	r3, [r7, #6]	@ movhi
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 700              		.loc 1 646 0
 701 0010 0023     		movs	r3, #0
 702 0012 7B61     		str	r3, [r7, #20]
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 703              		.loc 1 649 0
 704 0014 FB68     		ldr	r3, [r7, #12]
 705 0016 93F83930 		ldrb	r3, [r3, #57]
 706 001a DBB2     		uxtb	r3, r3
 707 001c 202B     		cmp	r3, #32
 708 001e 40F08280 		bne	.L23
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 709              		.loc 1 651 0
 710 0022 BB68     		ldr	r3, [r7, #8]
 711 0024 002B     		cmp	r3, #0
 712 0026 02D0     		beq	.L24
 713              		.loc 1 651 0 is_stmt 0 discriminator 1
 714 0028 FB88     		ldrh	r3, [r7, #6]
 715 002a 002B     		cmp	r3, #0
 716 002c 01D1     		bne	.L25
 717              	.L24:
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 718              		.loc 1 653 0 is_stmt 1
 719 002e 0123     		movs	r3, #1
 720 0030 7AE0     		b	.L26
 721              	.L25:
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 722              		.loc 1 657 0
 723 0032 FB68     		ldr	r3, [r7, #12]
 724 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 725 0038 012B     		cmp	r3, #1
 726 003a 01D1     		bne	.L27
ARM GAS  /tmp/cc9wfwek.s 			page 25


 727              		.loc 1 657 0 is_stmt 0 discriminator 1
 728 003c 0223     		movs	r3, #2
 729 003e 73E0     		b	.L26
 730              	.L27:
 731              		.loc 1 657 0 discriminator 2
 732 0040 FB68     		ldr	r3, [r7, #12]
 733 0042 0122     		movs	r2, #1
 734 0044 83F83820 		strb	r2, [r3, #56]
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 735              		.loc 1 659 0 is_stmt 1 discriminator 2
 736 0048 FB68     		ldr	r3, [r7, #12]
 737 004a 0022     		movs	r2, #0
 738 004c DA63     		str	r2, [r3, #60]
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 739              		.loc 1 660 0 discriminator 2
 740 004e FB68     		ldr	r3, [r7, #12]
 741 0050 2122     		movs	r2, #33
 742 0052 83F83920 		strb	r2, [r3, #57]
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 743              		.loc 1 663 0 discriminator 2
 744 0056 FFF7FEFF 		bl	HAL_GetTick
 745 005a 7861     		str	r0, [r7, #20]
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 746              		.loc 1 665 0 discriminator 2
 747 005c FB68     		ldr	r3, [r7, #12]
 748 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 749 0060 9A84     		strh	r2, [r3, #36]	@ movhi
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 750              		.loc 1 666 0 discriminator 2
 751 0062 FB68     		ldr	r3, [r7, #12]
 752 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 753 0066 DA84     		strh	r2, [r3, #38]	@ movhi
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 754              		.loc 1 667 0 discriminator 2
 755 0068 41E0     		b	.L28
 756              	.L34:
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount--;
 757              		.loc 1 669 0
 758 006a FB68     		ldr	r3, [r7, #12]
 759 006c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 760 006e 9BB2     		uxth	r3, r3
 761 0070 013B     		subs	r3, r3, #1
 762 0072 9AB2     		uxth	r2, r3
 763 0074 FB68     		ldr	r3, [r7, #12]
 764 0076 DA84     		strh	r2, [r3, #38]	@ movhi
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 765              		.loc 1 670 0
 766 0078 FB68     		ldr	r3, [r7, #12]
 767 007a 9B68     		ldr	r3, [r3, #8]
 768 007c B3F5805F 		cmp	r3, #4096
 769 0080 21D1     		bne	.L29
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
ARM GAS  /tmp/cc9wfwek.s 			page 26


 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 770              		.loc 1 672 0
 771 0082 3B68     		ldr	r3, [r7]
 772 0084 0093     		str	r3, [sp]
 773 0086 F868     		ldr	r0, [r7, #12]
 774 0088 8021     		movs	r1, #128
 775 008a 0022     		movs	r2, #0
 776 008c 7B69     		ldr	r3, [r7, #20]
 777 008e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 778 0092 0346     		mov	r3, r0
 779 0094 002B     		cmp	r3, #0
 780 0096 01D0     		beq	.L30
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 781              		.loc 1 674 0
 782 0098 0323     		movs	r3, #3
 783 009a 45E0     		b	.L26
 784              	.L30:
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 785              		.loc 1 676 0
 786 009c BB68     		ldr	r3, [r7, #8]
 787 009e 3B61     		str	r3, [r7, #16]
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 788              		.loc 1 677 0
 789 00a0 FB68     		ldr	r3, [r7, #12]
 790 00a2 1B68     		ldr	r3, [r3]
 791 00a4 3A69     		ldr	r2, [r7, #16]
 792 00a6 1288     		ldrh	r2, [r2]
 793 00a8 C2F30802 		ubfx	r2, r2, #0, #9
 794 00ac 5A60     		str	r2, [r3, #4]
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 795              		.loc 1 678 0
 796 00ae FB68     		ldr	r3, [r7, #12]
 797 00b0 1B69     		ldr	r3, [r3, #16]
 798 00b2 002B     		cmp	r3, #0
 799 00b4 03D1     		bne	.L31
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 800              		.loc 1 680 0
 801 00b6 BB68     		ldr	r3, [r7, #8]
 802 00b8 0233     		adds	r3, r3, #2
 803 00ba BB60     		str	r3, [r7, #8]
 804 00bc 17E0     		b	.L28
 805              	.L31:
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 806              		.loc 1 684 0
 807 00be BB68     		ldr	r3, [r7, #8]
 808 00c0 0133     		adds	r3, r3, #1
 809 00c2 BB60     		str	r3, [r7, #8]
 810 00c4 13E0     		b	.L28
 811              	.L29:
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
ARM GAS  /tmp/cc9wfwek.s 			page 27


 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 812              		.loc 1 689 0
 813 00c6 3B68     		ldr	r3, [r7]
 814 00c8 0093     		str	r3, [sp]
 815 00ca F868     		ldr	r0, [r7, #12]
 816 00cc 8021     		movs	r1, #128
 817 00ce 0022     		movs	r2, #0
 818 00d0 7B69     		ldr	r3, [r7, #20]
 819 00d2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 820 00d6 0346     		mov	r3, r0
 821 00d8 002B     		cmp	r3, #0
 822 00da 01D0     		beq	.L33
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 823              		.loc 1 691 0
 824 00dc 0323     		movs	r3, #3
 825 00de 23E0     		b	.L26
 826              	.L33:
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 827              		.loc 1 693 0
 828 00e0 FB68     		ldr	r3, [r7, #12]
 829 00e2 1A68     		ldr	r2, [r3]
 830 00e4 BB68     		ldr	r3, [r7, #8]
 831 00e6 591C     		adds	r1, r3, #1
 832 00e8 B960     		str	r1, [r7, #8]
 833 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 834 00ec 5360     		str	r3, [r2, #4]
 835              	.L28:
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 836              		.loc 1 667 0
 837 00ee FB68     		ldr	r3, [r7, #12]
 838 00f0 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 839 00f2 9BB2     		uxth	r3, r3
 840 00f4 002B     		cmp	r3, #0
 841 00f6 B8D1     		bne	.L34
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 842              		.loc 1 697 0
 843 00f8 3B68     		ldr	r3, [r7]
 844 00fa 0093     		str	r3, [sp]
 845 00fc F868     		ldr	r0, [r7, #12]
 846 00fe 4021     		movs	r1, #64
 847 0100 0022     		movs	r2, #0
 848 0102 7B69     		ldr	r3, [r7, #20]
 849 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 850 0108 0346     		mov	r3, r0
 851 010a 002B     		cmp	r3, #0
 852 010c 01D0     		beq	.L35
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_TIMEOUT;
 853              		.loc 1 699 0
 854 010e 0323     		movs	r3, #3
ARM GAS  /tmp/cc9wfwek.s 			page 28


 855 0110 0AE0     		b	.L26
 856              	.L35:
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 857              		.loc 1 703 0
 858 0112 FB68     		ldr	r3, [r7, #12]
 859 0114 2022     		movs	r2, #32
 860 0116 83F83920 		strb	r2, [r3, #57]
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 861              		.loc 1 706 0
 862 011a FB68     		ldr	r3, [r7, #12]
 863 011c 0022     		movs	r2, #0
 864 011e 83F83820 		strb	r2, [r3, #56]
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 865              		.loc 1 708 0
 866 0122 0023     		movs	r3, #0
 867 0124 00E0     		b	.L26
 868              	.L23:
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 869              		.loc 1 712 0
 870 0126 0223     		movs	r3, #2
 871              	.L26:
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 872              		.loc 1 714 0
 873 0128 1846     		mov	r0, r3
 874 012a 1837     		adds	r7, r7, #24
 875              	.LCFI40:
 876              		.cfi_def_cfa_offset 8
 877 012c BD46     		mov	sp, r7
 878              	.LCFI41:
 879              		.cfi_def_cfa_register 13
 880              		@ sp needed
 881 012e 80BD     		pop	{r7, pc}
 882              		.cfi_endproc
 883              	.LFE70:
 885              		.section	.text.HAL_UART_Receive,"ax",%progbits
 886              		.align	2
 887              		.global	HAL_UART_Receive
 888              		.thumb
 889              		.thumb_func
 891              	HAL_UART_Receive:
 892              	.LFB71:
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receive an amount of data in blocking mode. 
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
ARM GAS  /tmp/cc9wfwek.s 			page 29


 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 893              		.loc 1 726 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 24
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              	.LCFI42:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 88B0     		sub	sp, sp, #32
 903              	.LCFI43:
 904              		.cfi_def_cfa_offset 40
 905 0004 02AF     		add	r7, sp, #8
 906              	.LCFI44:
 907              		.cfi_def_cfa 7, 32
 908 0006 F860     		str	r0, [r7, #12]
 909 0008 B960     		str	r1, [r7, #8]
 910 000a 3B60     		str	r3, [r7]
 911 000c 1346     		mov	r3, r2	@ movhi
 912 000e FB80     		strh	r3, [r7, #6]	@ movhi
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tickstart = 0U;
 913              		.loc 1 728 0
 914 0010 0023     		movs	r3, #0
 915 0012 7B61     		str	r3, [r7, #20]
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 916              		.loc 1 731 0
 917 0014 FB68     		ldr	r3, [r7, #12]
 918 0016 93F83A30 		ldrb	r3, [r3, #58]
 919 001a DBB2     		uxtb	r3, r3
 920 001c 202B     		cmp	r3, #32
 921 001e 40F09080 		bne	.L37
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 922              		.loc 1 733 0
 923 0022 BB68     		ldr	r3, [r7, #8]
 924 0024 002B     		cmp	r3, #0
 925 0026 02D0     		beq	.L38
 926              		.loc 1 733 0 is_stmt 0 discriminator 1
 927 0028 FB88     		ldrh	r3, [r7, #6]
 928 002a 002B     		cmp	r3, #0
 929 002c 01D1     		bne	.L39
 930              	.L38:
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return  HAL_ERROR;
 931              		.loc 1 735 0 is_stmt 1
 932 002e 0123     		movs	r3, #1
 933 0030 88E0     		b	.L40
 934              	.L39:
ARM GAS  /tmp/cc9wfwek.s 			page 30


 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 935              		.loc 1 739 0
 936 0032 FB68     		ldr	r3, [r7, #12]
 937 0034 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 938 0038 012B     		cmp	r3, #1
 939 003a 01D1     		bne	.L41
 940              		.loc 1 739 0 is_stmt 0 discriminator 1
 941 003c 0223     		movs	r3, #2
 942 003e 81E0     		b	.L40
 943              	.L41:
 944              		.loc 1 739 0 discriminator 2
 945 0040 FB68     		ldr	r3, [r7, #12]
 946 0042 0122     		movs	r2, #1
 947 0044 83F83820 		strb	r2, [r3, #56]
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 948              		.loc 1 741 0 is_stmt 1 discriminator 2
 949 0048 FB68     		ldr	r3, [r7, #12]
 950 004a 0022     		movs	r2, #0
 951 004c DA63     		str	r2, [r3, #60]
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 952              		.loc 1 742 0 discriminator 2
 953 004e FB68     		ldr	r3, [r7, #12]
 954 0050 2222     		movs	r2, #34
 955 0052 83F83A20 		strb	r2, [r3, #58]
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tickstart = HAL_GetTick();
 956              		.loc 1 745 0 discriminator 2
 957 0056 FFF7FEFF 		bl	HAL_GetTick
 958 005a 7861     		str	r0, [r7, #20]
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 959              		.loc 1 747 0 discriminator 2
 960 005c FB68     		ldr	r3, [r7, #12]
 961 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 962 0060 9A85     		strh	r2, [r3, #44]	@ movhi
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 963              		.loc 1 748 0 discriminator 2
 964 0062 FB68     		ldr	r3, [r7, #12]
 965 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 966 0066 DA85     		strh	r2, [r3, #46]	@ movhi
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check the remain data to be received */
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 967              		.loc 1 751 0 discriminator 2
 968 0068 5CE0     		b	.L42
 969              	.L49:
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount--;
 970              		.loc 1 753 0
 971 006a FB68     		ldr	r3, [r7, #12]
 972 006c DB8D     		ldrh	r3, [r3, #46]	@ movhi
 973 006e 9BB2     		uxth	r3, r3
ARM GAS  /tmp/cc9wfwek.s 			page 31


 974 0070 013B     		subs	r3, r3, #1
 975 0072 9AB2     		uxth	r2, r3
 976 0074 FB68     		ldr	r3, [r7, #12]
 977 0076 DA85     		strh	r2, [r3, #46]	@ movhi
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 978              		.loc 1 754 0
 979 0078 FB68     		ldr	r3, [r7, #12]
 980 007a 9B68     		ldr	r3, [r3, #8]
 981 007c B3F5805F 		cmp	r3, #4096
 982 0080 2BD1     		bne	.L43
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 983              		.loc 1 756 0
 984 0082 3B68     		ldr	r3, [r7]
 985 0084 0093     		str	r3, [sp]
 986 0086 F868     		ldr	r0, [r7, #12]
 987 0088 2021     		movs	r1, #32
 988 008a 0022     		movs	r2, #0
 989 008c 7B69     		ldr	r3, [r7, #20]
 990 008e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 991 0092 0346     		mov	r3, r0
 992 0094 002B     		cmp	r3, #0
 993 0096 01D0     		beq	.L44
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 994              		.loc 1 758 0
 995 0098 0323     		movs	r3, #3
 996 009a 53E0     		b	.L40
 997              	.L44:
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         tmp = (uint16_t*)pData;
 998              		.loc 1 760 0
 999 009c BB68     		ldr	r3, [r7, #8]
 1000 009e 3B61     		str	r3, [r7, #16]
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1001              		.loc 1 761 0
 1002 00a0 FB68     		ldr	r3, [r7, #12]
 1003 00a2 1B69     		ldr	r3, [r3, #16]
 1004 00a4 002B     		cmp	r3, #0
 1005 00a6 0CD1     		bne	.L45
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 1006              		.loc 1 763 0
 1007 00a8 FB68     		ldr	r3, [r7, #12]
 1008 00aa 1B68     		ldr	r3, [r3]
 1009 00ac 5B68     		ldr	r3, [r3, #4]
 1010 00ae 9BB2     		uxth	r3, r3
 1011 00b0 C3F30803 		ubfx	r3, r3, #0, #9
 1012 00b4 9AB2     		uxth	r2, r3
 1013 00b6 3B69     		ldr	r3, [r7, #16]
 1014 00b8 1A80     		strh	r2, [r3]	@ movhi
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=2U;
 1015              		.loc 1 764 0
 1016 00ba BB68     		ldr	r3, [r7, #8]
 1017 00bc 0233     		adds	r3, r3, #2
 1018 00be BB60     		str	r3, [r7, #8]
 1019 00c0 30E0     		b	.L42
ARM GAS  /tmp/cc9wfwek.s 			page 32


 1020              	.L45:
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 1021              		.loc 1 768 0
 1022 00c2 FB68     		ldr	r3, [r7, #12]
 1023 00c4 1B68     		ldr	r3, [r3]
 1024 00c6 5B68     		ldr	r3, [r3, #4]
 1025 00c8 9BB2     		uxth	r3, r3
 1026 00ca DBB2     		uxtb	r3, r3
 1027 00cc 9AB2     		uxth	r2, r3
 1028 00ce 3B69     		ldr	r3, [r7, #16]
 1029 00d0 1A80     		strh	r2, [r3]	@ movhi
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           pData +=1U;
 1030              		.loc 1 769 0
 1031 00d2 BB68     		ldr	r3, [r7, #8]
 1032 00d4 0133     		adds	r3, r3, #1
 1033 00d6 BB60     		str	r3, [r7, #8]
 1034 00d8 24E0     		b	.L42
 1035              	.L43:
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       } 
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1036              		.loc 1 775 0
 1037 00da 3B68     		ldr	r3, [r7]
 1038 00dc 0093     		str	r3, [sp]
 1039 00de F868     		ldr	r0, [r7, #12]
 1040 00e0 2021     		movs	r1, #32
 1041 00e2 0022     		movs	r2, #0
 1042 00e4 7B69     		ldr	r3, [r7, #20]
 1043 00e6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1044 00ea 0346     		mov	r3, r0
 1045 00ec 002B     		cmp	r3, #0
 1046 00ee 01D0     		beq	.L47
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           return HAL_TIMEOUT;
 1047              		.loc 1 777 0
 1048 00f0 0323     		movs	r3, #3
 1049 00f2 27E0     		b	.L40
 1050              	.L47:
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1051              		.loc 1 779 0
 1052 00f4 FB68     		ldr	r3, [r7, #12]
 1053 00f6 1B69     		ldr	r3, [r3, #16]
 1054 00f8 002B     		cmp	r3, #0
 1055 00fa 08D1     		bne	.L48
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1056              		.loc 1 781 0
 1057 00fc BB68     		ldr	r3, [r7, #8]
 1058 00fe 5A1C     		adds	r2, r3, #1
 1059 0100 BA60     		str	r2, [r7, #8]
ARM GAS  /tmp/cc9wfwek.s 			page 33


 1060 0102 FA68     		ldr	r2, [r7, #12]
 1061 0104 1268     		ldr	r2, [r2]
 1062 0106 5268     		ldr	r2, [r2, #4]
 1063 0108 D2B2     		uxtb	r2, r2
 1064 010a 1A70     		strb	r2, [r3]
 1065 010c 0AE0     		b	.L42
 1066              	.L48:
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1067              		.loc 1 785 0
 1068 010e BB68     		ldr	r3, [r7, #8]
 1069 0110 5A1C     		adds	r2, r3, #1
 1070 0112 BA60     		str	r2, [r7, #8]
 1071 0114 FA68     		ldr	r2, [r7, #12]
 1072 0116 1268     		ldr	r2, [r2]
 1073 0118 5268     		ldr	r2, [r2, #4]
 1074 011a D2B2     		uxtb	r2, r2
 1075 011c 02F07F02 		and	r2, r2, #127
 1076 0120 D2B2     		uxtb	r2, r2
 1077 0122 1A70     		strb	r2, [r3]
 1078              	.L42:
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 1079              		.loc 1 751 0
 1080 0124 FB68     		ldr	r3, [r7, #12]
 1081 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1082 0128 9BB2     		uxth	r3, r3
 1083 012a 002B     		cmp	r3, #0
 1084 012c 9DD1     		bne	.L49
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1085              		.loc 1 792 0
 1086 012e FB68     		ldr	r3, [r7, #12]
 1087 0130 2022     		movs	r2, #32
 1088 0132 83F83A20 		strb	r2, [r3, #58]
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1089              		.loc 1 795 0
 1090 0136 FB68     		ldr	r3, [r7, #12]
 1091 0138 0022     		movs	r2, #0
 1092 013a 83F83820 		strb	r2, [r3, #56]
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1093              		.loc 1 797 0
 1094 013e 0023     		movs	r3, #0
 1095 0140 00E0     		b	.L40
 1096              	.L37:
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
ARM GAS  /tmp/cc9wfwek.s 			page 34


 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1097              		.loc 1 801 0
 1098 0142 0223     		movs	r3, #2
 1099              	.L40:
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1100              		.loc 1 803 0
 1101 0144 1846     		mov	r0, r3
 1102 0146 1837     		adds	r7, r7, #24
 1103              	.LCFI45:
 1104              		.cfi_def_cfa_offset 8
 1105 0148 BD46     		mov	sp, r7
 1106              	.LCFI46:
 1107              		.cfi_def_cfa_register 13
 1108              		@ sp needed
 1109 014a 80BD     		pop	{r7, pc}
 1110              		.cfi_endproc
 1111              	.LFE71:
 1113              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1114              		.align	2
 1115              		.global	HAL_UART_Transmit_IT
 1116              		.thumb
 1117              		.thumb_func
 1119              	HAL_UART_Transmit_IT:
 1120              	.LFB72:
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1121              		.loc 1 814 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 16
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125              		@ link register save eliminated.
 1126 0000 80B4     		push	{r7}
 1127              	.LCFI47:
 1128              		.cfi_def_cfa_offset 4
 1129              		.cfi_offset 7, -4
 1130 0002 85B0     		sub	sp, sp, #20
 1131              	.LCFI48:
 1132              		.cfi_def_cfa_offset 24
 1133 0004 00AF     		add	r7, sp, #0
 1134              	.LCFI49:
 1135              		.cfi_def_cfa_register 7
 1136 0006 F860     		str	r0, [r7, #12]
 1137 0008 B960     		str	r1, [r7, #8]
 1138 000a 1346     		mov	r3, r2
 1139 000c FB80     		strh	r3, [r7, #6]	@ movhi
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
ARM GAS  /tmp/cc9wfwek.s 			page 35


 1140              		.loc 1 816 0
 1141 000e FB68     		ldr	r3, [r7, #12]
 1142 0010 93F83930 		ldrb	r3, [r3, #57]
 1143 0014 DBB2     		uxtb	r3, r3
 1144 0016 202B     		cmp	r3, #32
 1145 0018 30D1     		bne	.L51
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U)) 
 1146              		.loc 1 818 0
 1147 001a BB68     		ldr	r3, [r7, #8]
 1148 001c 002B     		cmp	r3, #0
 1149 001e 02D0     		beq	.L52
 1150              		.loc 1 818 0 is_stmt 0 discriminator 1
 1151 0020 FB88     		ldrh	r3, [r7, #6]
 1152 0022 002B     		cmp	r3, #0
 1153 0024 01D1     		bne	.L53
 1154              	.L52:
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1155              		.loc 1 820 0 is_stmt 1
 1156 0026 0123     		movs	r3, #1
 1157 0028 29E0     		b	.L54
 1158              	.L53:
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1159              		.loc 1 823 0
 1160 002a FB68     		ldr	r3, [r7, #12]
 1161 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1162 0030 012B     		cmp	r3, #1
 1163 0032 01D1     		bne	.L55
 1164              		.loc 1 823 0 is_stmt 0 discriminator 1
 1165 0034 0223     		movs	r3, #2
 1166 0036 22E0     		b	.L54
 1167              	.L55:
 1168              		.loc 1 823 0 discriminator 2
 1169 0038 FB68     		ldr	r3, [r7, #12]
 1170 003a 0122     		movs	r2, #1
 1171 003c 83F83820 		strb	r2, [r3, #56]
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1172              		.loc 1 825 0 is_stmt 1 discriminator 2
 1173 0040 FB68     		ldr	r3, [r7, #12]
 1174 0042 BA68     		ldr	r2, [r7, #8]
 1175 0044 1A62     		str	r2, [r3, #32]
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1176              		.loc 1 826 0 discriminator 2
 1177 0046 FB68     		ldr	r3, [r7, #12]
 1178 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1179 004a 9A84     		strh	r2, [r3, #36]	@ movhi
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1180              		.loc 1 827 0 discriminator 2
 1181 004c FB68     		ldr	r3, [r7, #12]
 1182 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1183 0050 DA84     		strh	r2, [r3, #38]	@ movhi
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/cc9wfwek.s 			page 36


 1184              		.loc 1 829 0 discriminator 2
 1185 0052 FB68     		ldr	r3, [r7, #12]
 1186 0054 0022     		movs	r2, #0
 1187 0056 DA63     		str	r2, [r3, #60]
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1188              		.loc 1 830 0 discriminator 2
 1189 0058 FB68     		ldr	r3, [r7, #12]
 1190 005a 2122     		movs	r2, #33
 1191 005c 83F83920 		strb	r2, [r3, #57]
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1192              		.loc 1 833 0 discriminator 2
 1193 0060 FB68     		ldr	r3, [r7, #12]
 1194 0062 0022     		movs	r2, #0
 1195 0064 83F83820 		strb	r2, [r3, #56]
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1196              		.loc 1 836 0 discriminator 2
 1197 0068 FB68     		ldr	r3, [r7, #12]
 1198 006a 1B68     		ldr	r3, [r3]
 1199 006c FA68     		ldr	r2, [r7, #12]
 1200 006e 1268     		ldr	r2, [r2]
 1201 0070 D268     		ldr	r2, [r2, #12]
 1202 0072 42F08002 		orr	r2, r2, #128
 1203 0076 DA60     		str	r2, [r3, #12]
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1204              		.loc 1 838 0 discriminator 2
 1205 0078 0023     		movs	r3, #0
 1206 007a 00E0     		b	.L54
 1207              	.L51:
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1208              		.loc 1 842 0
 1209 007c 0223     		movs	r3, #2
 1210              	.L54:
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1211              		.loc 1 844 0
 1212 007e 1846     		mov	r0, r3
 1213 0080 1437     		adds	r7, r7, #20
 1214              	.LCFI50:
 1215              		.cfi_def_cfa_offset 4
 1216 0082 BD46     		mov	sp, r7
 1217              	.LCFI51:
 1218              		.cfi_def_cfa_register 13
 1219              		@ sp needed
 1220 0084 5DF8047B 		ldr	r7, [sp], #4
 1221              	.LCFI52:
 1222              		.cfi_restore 7
 1223              		.cfi_def_cfa_offset 0
 1224 0088 7047     		bx	lr
 1225              		.cfi_endproc
ARM GAS  /tmp/cc9wfwek.s 			page 37


 1226              	.LFE72:
 1228 008a 00BF     		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1229              		.align	2
 1230              		.global	HAL_UART_Receive_IT
 1231              		.thumb
 1232              		.thumb_func
 1234              	HAL_UART_Receive_IT:
 1235              	.LFB73:
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1236              		.loc 1 855 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 16
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
 1241 0000 80B4     		push	{r7}
 1242              	.LCFI53:
 1243              		.cfi_def_cfa_offset 4
 1244              		.cfi_offset 7, -4
 1245 0002 85B0     		sub	sp, sp, #20
 1246              	.LCFI54:
 1247              		.cfi_def_cfa_offset 24
 1248 0004 00AF     		add	r7, sp, #0
 1249              	.LCFI55:
 1250              		.cfi_def_cfa_register 7
 1251 0006 F860     		str	r0, [r7, #12]
 1252 0008 B960     		str	r1, [r7, #8]
 1253 000a 1346     		mov	r3, r2
 1254 000c FB80     		strh	r3, [r7, #6]	@ movhi
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1255              		.loc 1 857 0
 1256 000e FB68     		ldr	r3, [r7, #12]
 1257 0010 93F83A30 		ldrb	r3, [r3, #58]
 1258 0014 DBB2     		uxtb	r3, r3
 1259 0016 202B     		cmp	r3, #32
 1260 0018 40D1     		bne	.L57
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 1261              		.loc 1 859 0
 1262 001a BB68     		ldr	r3, [r7, #8]
 1263 001c 002B     		cmp	r3, #0
 1264 001e 02D0     		beq	.L58
 1265              		.loc 1 859 0 is_stmt 0 discriminator 1
 1266 0020 FB88     		ldrh	r3, [r7, #6]
 1267 0022 002B     		cmp	r3, #0
 1268 0024 01D1     		bne	.L59
 1269              	.L58:
ARM GAS  /tmp/cc9wfwek.s 			page 38


 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1270              		.loc 1 861 0 is_stmt 1
 1271 0026 0123     		movs	r3, #1
 1272 0028 39E0     		b	.L60
 1273              	.L59:
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1274              		.loc 1 865 0
 1275 002a FB68     		ldr	r3, [r7, #12]
 1276 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1277 0030 012B     		cmp	r3, #1
 1278 0032 01D1     		bne	.L61
 1279              		.loc 1 865 0 is_stmt 0 discriminator 1
 1280 0034 0223     		movs	r3, #2
 1281 0036 32E0     		b	.L60
 1282              	.L61:
 1283              		.loc 1 865 0 discriminator 2
 1284 0038 FB68     		ldr	r3, [r7, #12]
 1285 003a 0122     		movs	r2, #1
 1286 003c 83F83820 		strb	r2, [r3, #56]
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1287              		.loc 1 867 0 is_stmt 1 discriminator 2
 1288 0040 FB68     		ldr	r3, [r7, #12]
 1289 0042 BA68     		ldr	r2, [r7, #8]
 1290 0044 9A62     		str	r2, [r3, #40]
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1291              		.loc 1 868 0 discriminator 2
 1292 0046 FB68     		ldr	r3, [r7, #12]
 1293 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1294 004a 9A85     		strh	r2, [r3, #44]	@ movhi
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = Size;
 1295              		.loc 1 869 0 discriminator 2
 1296 004c FB68     		ldr	r3, [r7, #12]
 1297 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1298 0050 DA85     		strh	r2, [r3, #46]	@ movhi
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1299              		.loc 1 871 0 discriminator 2
 1300 0052 FB68     		ldr	r3, [r7, #12]
 1301 0054 0022     		movs	r2, #0
 1302 0056 DA63     		str	r2, [r3, #60]
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1303              		.loc 1 872 0 discriminator 2
 1304 0058 FB68     		ldr	r3, [r7, #12]
 1305 005a 2222     		movs	r2, #34
 1306 005c 83F83A20 		strb	r2, [r3, #58]
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1307              		.loc 1 875 0 discriminator 2
 1308 0060 FB68     		ldr	r3, [r7, #12]
 1309 0062 0022     		movs	r2, #0
 1310 0064 83F83820 		strb	r2, [r3, #56]
ARM GAS  /tmp/cc9wfwek.s 			page 39


 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 1311              		.loc 1 878 0 discriminator 2
 1312 0068 FB68     		ldr	r3, [r7, #12]
 1313 006a 1B68     		ldr	r3, [r3]
 1314 006c FA68     		ldr	r2, [r7, #12]
 1315 006e 1268     		ldr	r2, [r2]
 1316 0070 D268     		ldr	r2, [r2, #12]
 1317 0072 42F48072 		orr	r2, r2, #256
 1318 0076 DA60     		str	r2, [r3, #12]
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 1319              		.loc 1 881 0 discriminator 2
 1320 0078 FB68     		ldr	r3, [r7, #12]
 1321 007a 1B68     		ldr	r3, [r3]
 1322 007c FA68     		ldr	r2, [r7, #12]
 1323 007e 1268     		ldr	r2, [r2]
 1324 0080 5269     		ldr	r2, [r2, #20]
 1325 0082 42F00102 		orr	r2, r2, #1
 1326 0086 5A61     		str	r2, [r3, #20]
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Data Register not empty Interrupt */
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 1327              		.loc 1 884 0 discriminator 2
 1328 0088 FB68     		ldr	r3, [r7, #12]
 1329 008a 1B68     		ldr	r3, [r3]
 1330 008c FA68     		ldr	r2, [r7, #12]
 1331 008e 1268     		ldr	r2, [r2]
 1332 0090 D268     		ldr	r2, [r2, #12]
 1333 0092 42F02002 		orr	r2, r2, #32
 1334 0096 DA60     		str	r2, [r3, #12]
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1335              		.loc 1 886 0 discriminator 2
 1336 0098 0023     		movs	r3, #0
 1337 009a 00E0     		b	.L60
 1338              	.L57:
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1339              		.loc 1 890 0
 1340 009c 0223     		movs	r3, #2
 1341              	.L60:
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1342              		.loc 1 892 0
 1343 009e 1846     		mov	r0, r3
 1344 00a0 1437     		adds	r7, r7, #20
 1345              	.LCFI56:
 1346              		.cfi_def_cfa_offset 4
 1347 00a2 BD46     		mov	sp, r7
 1348              	.LCFI57:
 1349              		.cfi_def_cfa_register 13
 1350              		@ sp needed
ARM GAS  /tmp/cc9wfwek.s 			page 40


 1351 00a4 5DF8047B 		ldr	r7, [sp], #4
 1352              	.LCFI58:
 1353              		.cfi_restore 7
 1354              		.cfi_def_cfa_offset 0
 1355 00a8 7047     		bx	lr
 1356              		.cfi_endproc
 1357              	.LFE73:
 1359 00aa 00BF     		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1360              		.align	2
 1361              		.global	HAL_UART_Transmit_DMA
 1362              		.thumb
 1363              		.thumb_func
 1365              	HAL_UART_Transmit_DMA:
 1366              	.LFB74:
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be sent
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1367              		.loc 1 903 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 24
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371 0000 90B5     		push	{r4, r7, lr}
 1372              	.LCFI59:
 1373              		.cfi_def_cfa_offset 12
 1374              		.cfi_offset 4, -12
 1375              		.cfi_offset 7, -8
 1376              		.cfi_offset 14, -4
 1377 0002 87B0     		sub	sp, sp, #28
 1378              	.LCFI60:
 1379              		.cfi_def_cfa_offset 40
 1380 0004 00AF     		add	r7, sp, #0
 1381              	.LCFI61:
 1382              		.cfi_def_cfa_register 7
 1383 0006 F860     		str	r0, [r7, #12]
 1384 0008 B960     		str	r1, [r7, #8]
 1385 000a 1346     		mov	r3, r2
 1386 000c FB80     		strh	r3, [r7, #6]	@ movhi
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1387              		.loc 1 907 0
 1388 000e FB68     		ldr	r3, [r7, #12]
 1389 0010 93F83930 		ldrb	r3, [r3, #57]
 1390 0014 DBB2     		uxtb	r3, r3
 1391 0016 202B     		cmp	r3, #32
 1392 0018 56D1     		bne	.L63
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
ARM GAS  /tmp/cc9wfwek.s 			page 41


 1393              		.loc 1 909 0
 1394 001a BB68     		ldr	r3, [r7, #8]
 1395 001c 002B     		cmp	r3, #0
 1396 001e 02D0     		beq	.L64
 1397              		.loc 1 909 0 is_stmt 0 discriminator 1
 1398 0020 FB88     		ldrh	r3, [r7, #6]
 1399 0022 002B     		cmp	r3, #0
 1400 0024 01D1     		bne	.L65
 1401              	.L64:
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1402              		.loc 1 911 0 is_stmt 1
 1403 0026 0123     		movs	r3, #1
 1404 0028 4FE0     		b	.L66
 1405              	.L65:
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1406              		.loc 1 915 0
 1407 002a FB68     		ldr	r3, [r7, #12]
 1408 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1409 0030 012B     		cmp	r3, #1
 1410 0032 01D1     		bne	.L67
 1411              		.loc 1 915 0 is_stmt 0 discriminator 1
 1412 0034 0223     		movs	r3, #2
 1413 0036 48E0     		b	.L66
 1414              	.L67:
 1415              		.loc 1 915 0 discriminator 2
 1416 0038 FB68     		ldr	r3, [r7, #12]
 1417 003a 0122     		movs	r2, #1
 1418 003c 83F83820 		strb	r2, [r3, #56]
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1419              		.loc 1 917 0 is_stmt 1 discriminator 2
 1420 0040 BA68     		ldr	r2, [r7, #8]
 1421 0042 FB68     		ldr	r3, [r7, #12]
 1422 0044 1A62     		str	r2, [r3, #32]
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferSize = Size;
 1423              		.loc 1 918 0 discriminator 2
 1424 0046 FB68     		ldr	r3, [r7, #12]
 1425 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1426 004a 9A84     		strh	r2, [r3, #36]	@ movhi
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = Size;
 1427              		.loc 1 919 0 discriminator 2
 1428 004c FB68     		ldr	r3, [r7, #12]
 1429 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1430 0050 DA84     		strh	r2, [r3, #38]	@ movhi
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1431              		.loc 1 921 0 discriminator 2
 1432 0052 FB68     		ldr	r3, [r7, #12]
 1433 0054 0022     		movs	r2, #0
 1434 0056 DA63     		str	r2, [r3, #60]
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1435              		.loc 1 922 0 discriminator 2
 1436 0058 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc9wfwek.s 			page 42


 1437 005a 2122     		movs	r2, #33
 1438 005c 83F83920 		strb	r2, [r3, #57]
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1439              		.loc 1 925 0 discriminator 2
 1440 0060 FB68     		ldr	r3, [r7, #12]
 1441 0062 1B6B     		ldr	r3, [r3, #48]
 1442 0064 1B4A     		ldr	r2, .L68
 1443 0066 9A62     		str	r2, [r3, #40]
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1444              		.loc 1 928 0 discriminator 2
 1445 0068 FB68     		ldr	r3, [r7, #12]
 1446 006a 1B6B     		ldr	r3, [r3, #48]
 1447 006c 1A4A     		ldr	r2, .L68+4
 1448 006e DA62     		str	r2, [r3, #44]
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1449              		.loc 1 931 0 discriminator 2
 1450 0070 FB68     		ldr	r3, [r7, #12]
 1451 0072 1B6B     		ldr	r3, [r3, #48]
 1452 0074 194A     		ldr	r2, .L68+8
 1453 0076 1A63     		str	r2, [r3, #48]
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1454              		.loc 1 934 0 discriminator 2
 1455 0078 FB68     		ldr	r3, [r7, #12]
 1456 007a 1B6B     		ldr	r3, [r3, #48]
 1457 007c 0022     		movs	r2, #0
 1458 007e 5A63     		str	r2, [r3, #52]
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1459              		.loc 1 937 0 discriminator 2
 1460 0080 07F10803 		add	r3, r7, #8
 1461 0084 7B61     		str	r3, [r7, #20]
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 1462              		.loc 1 938 0 discriminator 2
 1463 0086 FB68     		ldr	r3, [r7, #12]
 1464 0088 196B     		ldr	r1, [r3, #48]
 1465 008a 7B69     		ldr	r3, [r7, #20]
 1466 008c 1A68     		ldr	r2, [r3]
 1467 008e FB68     		ldr	r3, [r7, #12]
 1468 0090 1B68     		ldr	r3, [r3]
 1469 0092 0433     		adds	r3, r3, #4
 1470 0094 1C46     		mov	r4, r3
 1471 0096 FB88     		ldrh	r3, [r7, #6]
 1472 0098 0846     		mov	r0, r1
 1473 009a 1146     		mov	r1, r2
 1474 009c 2246     		mov	r2, r4
 1475 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
ARM GAS  /tmp/cc9wfwek.s 			page 43


 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1476              		.loc 1 941 0 discriminator 2
 1477 00a2 FB68     		ldr	r3, [r7, #12]
 1478 00a4 1B68     		ldr	r3, [r3]
 1479 00a6 6FF04002 		mvn	r2, #64
 1480 00aa 1A60     		str	r2, [r3]
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1481              		.loc 1 944 0 discriminator 2
 1482 00ac FB68     		ldr	r3, [r7, #12]
 1483 00ae 0022     		movs	r2, #0
 1484 00b0 83F83820 		strb	r2, [r3, #56]
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1485              		.loc 1 948 0 discriminator 2
 1486 00b4 FB68     		ldr	r3, [r7, #12]
 1487 00b6 1B68     		ldr	r3, [r3]
 1488 00b8 FA68     		ldr	r2, [r7, #12]
 1489 00ba 1268     		ldr	r2, [r2]
 1490 00bc 5269     		ldr	r2, [r2, #20]
 1491 00be 42F08002 		orr	r2, r2, #128
 1492 00c2 5A61     		str	r2, [r3, #20]
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1493              		.loc 1 950 0 discriminator 2
 1494 00c4 0023     		movs	r3, #0
 1495 00c6 00E0     		b	.L66
 1496              	.L63:
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1497              		.loc 1 954 0
 1498 00c8 0223     		movs	r3, #2
 1499              	.L66:
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1500              		.loc 1 956 0
 1501 00ca 1846     		mov	r0, r3
 1502 00cc 1C37     		adds	r7, r7, #28
 1503              	.LCFI62:
 1504              		.cfi_def_cfa_offset 12
 1505 00ce BD46     		mov	sp, r7
 1506              	.LCFI63:
 1507              		.cfi_def_cfa_register 13
 1508              		@ sp needed
 1509 00d0 90BD     		pop	{r4, r7, pc}
 1510              	.L69:
 1511 00d2 00BF     		.align	2
 1512              	.L68:
 1513 00d4 00000000 		.word	UART_DMATransmitCplt
 1514 00d8 00000000 		.word	UART_DMATxHalfCplt
 1515 00dc 00000000 		.word	UART_DMAError
 1516              		.cfi_endproc
ARM GAS  /tmp/cc9wfwek.s 			page 44


 1517              	.LFE74:
 1519              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1520              		.align	2
 1521              		.global	HAL_UART_Receive_DMA
 1522              		.thumb
 1523              		.thumb_func
 1525              	HAL_UART_Receive_DMA:
 1526              	.LFB75:
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  pData: Pointer to data buffer
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Size: Amount of data to be received
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1527              		.loc 1 968 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 24
 1530              		@ frame_needed = 1, uses_anonymous_args = 0
 1531 0000 90B5     		push	{r4, r7, lr}
 1532              	.LCFI64:
 1533              		.cfi_def_cfa_offset 12
 1534              		.cfi_offset 4, -12
 1535              		.cfi_offset 7, -8
 1536              		.cfi_offset 14, -4
 1537 0002 87B0     		sub	sp, sp, #28
 1538              	.LCFI65:
 1539              		.cfi_def_cfa_offset 40
 1540 0004 00AF     		add	r7, sp, #0
 1541              	.LCFI66:
 1542              		.cfi_def_cfa_register 7
 1543 0006 F860     		str	r0, [r7, #12]
 1544 0008 B960     		str	r1, [r7, #8]
 1545 000a 1346     		mov	r3, r2
 1546 000c FB80     		strh	r3, [r7, #6]	@ movhi
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t *tmp;
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 1547              		.loc 1 972 0
 1548 000e FB68     		ldr	r3, [r7, #12]
 1549 0010 93F83A30 		ldrb	r3, [r3, #58]
 1550 0014 DBB2     		uxtb	r3, r3
 1551 0016 202B     		cmp	r3, #32
 1552 0018 68D1     		bne	.L71
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if((pData == NULL) || (Size == 0U))
 1553              		.loc 1 974 0
 1554 001a BB68     		ldr	r3, [r7, #8]
 1555 001c 002B     		cmp	r3, #0
 1556 001e 02D0     		beq	.L72
 1557              		.loc 1 974 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc9wfwek.s 			page 45


 1558 0020 FB88     		ldrh	r3, [r7, #6]
 1559 0022 002B     		cmp	r3, #0
 1560 0024 01D1     		bne	.L73
 1561              	.L72:
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_ERROR;
 1562              		.loc 1 976 0 is_stmt 1
 1563 0026 0123     		movs	r3, #1
 1564 0028 61E0     		b	.L74
 1565              	.L73:
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Locked */
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_LOCK(huart);
 1566              		.loc 1 980 0
 1567 002a FB68     		ldr	r3, [r7, #12]
 1568 002c 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1569 0030 012B     		cmp	r3, #1
 1570 0032 01D1     		bne	.L75
 1571              		.loc 1 980 0 is_stmt 0 discriminator 1
 1572 0034 0223     		movs	r3, #2
 1573 0036 5AE0     		b	.L74
 1574              	.L75:
 1575              		.loc 1 980 0 discriminator 2
 1576 0038 FB68     		ldr	r3, [r7, #12]
 1577 003a 0122     		movs	r2, #1
 1578 003c 83F83820 		strb	r2, [r3, #56]
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1579              		.loc 1 982 0 is_stmt 1 discriminator 2
 1580 0040 BA68     		ldr	r2, [r7, #8]
 1581 0042 FB68     		ldr	r3, [r7, #12]
 1582 0044 9A62     		str	r2, [r3, #40]
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferSize = Size;
 1583              		.loc 1 983 0 discriminator 2
 1584 0046 FB68     		ldr	r3, [r7, #12]
 1585 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1586 004a 9A85     		strh	r2, [r3, #44]	@ movhi
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1587              		.loc 1 985 0 discriminator 2
 1588 004c FB68     		ldr	r3, [r7, #12]
 1589 004e 0022     		movs	r2, #0
 1590 0050 DA63     		str	r2, [r3, #60]
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1591              		.loc 1 986 0 discriminator 2
 1592 0052 FB68     		ldr	r3, [r7, #12]
 1593 0054 2222     		movs	r2, #34
 1594 0056 83F83A20 		strb	r2, [r3, #58]
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1595              		.loc 1 989 0 discriminator 2
 1596 005a FB68     		ldr	r3, [r7, #12]
 1597 005c 5B6B     		ldr	r3, [r3, #52]
 1598 005e 264A     		ldr	r2, .L76
 1599 0060 9A62     		str	r2, [r3, #40]
ARM GAS  /tmp/cc9wfwek.s 			page 46


 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1600              		.loc 1 992 0 discriminator 2
 1601 0062 FB68     		ldr	r3, [r7, #12]
 1602 0064 5B6B     		ldr	r3, [r3, #52]
 1603 0066 254A     		ldr	r2, .L76+4
 1604 0068 DA62     		str	r2, [r3, #44]
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA error callback */
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1605              		.loc 1 995 0 discriminator 2
 1606 006a FB68     		ldr	r3, [r7, #12]
 1607 006c 5B6B     		ldr	r3, [r3, #52]
 1608 006e 244A     		ldr	r2, .L76+8
 1609 0070 1A63     		str	r2, [r3, #48]
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set the DMA abort callback */
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1610              		.loc 1 998 0 discriminator 2
 1611 0072 FB68     		ldr	r3, [r7, #12]
 1612 0074 5B6B     		ldr	r3, [r3, #52]
 1613 0076 0022     		movs	r2, #0
 1614 0078 5A63     		str	r2, [r3, #52]
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA channel */
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 1615              		.loc 1 1001 0 discriminator 2
 1616 007a 07F10803 		add	r3, r7, #8
 1617 007e 7B61     		str	r3, [r7, #20]
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 1618              		.loc 1 1002 0 discriminator 2
 1619 0080 FB68     		ldr	r3, [r7, #12]
 1620 0082 596B     		ldr	r1, [r3, #52]
 1621 0084 FB68     		ldr	r3, [r7, #12]
 1622 0086 1B68     		ldr	r3, [r3]
 1623 0088 0433     		adds	r3, r3, #4
 1624 008a 1C46     		mov	r4, r3
 1625 008c 7B69     		ldr	r3, [r7, #20]
 1626 008e 1A68     		ldr	r2, [r3]
 1627 0090 FB88     		ldrh	r3, [r7, #6]
 1628 0092 0846     		mov	r0, r1
 1629 0094 2146     		mov	r1, r4
 1630 0096 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1631              	.LBB2:
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1632              		.loc 1 1005 0 discriminator 2
 1633 009a 0023     		movs	r3, #0
 1634 009c 3B61     		str	r3, [r7, #16]
 1635 009e FB68     		ldr	r3, [r7, #12]
 1636 00a0 1B68     		ldr	r3, [r3]
 1637 00a2 1B68     		ldr	r3, [r3]
 1638 00a4 3B61     		str	r3, [r7, #16]
 1639 00a6 FB68     		ldr	r3, [r7, #12]
 1640 00a8 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9wfwek.s 			page 47


 1641 00aa 5B68     		ldr	r3, [r3, #4]
 1642 00ac 3B61     		str	r3, [r7, #16]
 1643 00ae 3B69     		ldr	r3, [r7, #16]
 1644              	.LBE2:
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Process Unlocked */
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1645              		.loc 1 1008 0 discriminator 2
 1646 00b0 FB68     		ldr	r3, [r7, #12]
 1647 00b2 0022     		movs	r2, #0
 1648 00b4 83F83820 		strb	r2, [r3, #56]
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1649              		.loc 1 1011 0 discriminator 2
 1650 00b8 FB68     		ldr	r3, [r7, #12]
 1651 00ba 1B68     		ldr	r3, [r3]
 1652 00bc FA68     		ldr	r2, [r7, #12]
 1653 00be 1268     		ldr	r2, [r2]
 1654 00c0 D268     		ldr	r2, [r2, #12]
 1655 00c2 42F48072 		orr	r2, r2, #256
 1656 00c6 DA60     		str	r2, [r3, #12]
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1657              		.loc 1 1014 0 discriminator 2
 1658 00c8 FB68     		ldr	r3, [r7, #12]
 1659 00ca 1B68     		ldr	r3, [r3]
 1660 00cc FA68     		ldr	r2, [r7, #12]
 1661 00ce 1268     		ldr	r2, [r2]
 1662 00d0 5269     		ldr	r2, [r2, #20]
 1663 00d2 42F00102 		orr	r2, r2, #1
 1664 00d6 5A61     		str	r2, [r3, #20]
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     in the UART CR3 register */
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1665              		.loc 1 1018 0 discriminator 2
 1666 00d8 FB68     		ldr	r3, [r7, #12]
 1667 00da 1B68     		ldr	r3, [r3]
 1668 00dc FA68     		ldr	r2, [r7, #12]
 1669 00de 1268     		ldr	r2, [r2]
 1670 00e0 5269     		ldr	r2, [r2, #20]
 1671 00e2 42F04002 		orr	r2, r2, #64
 1672 00e6 5A61     		str	r2, [r3, #20]
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 1673              		.loc 1 1020 0 discriminator 2
 1674 00e8 0023     		movs	r3, #0
 1675 00ea 00E0     		b	.L74
 1676              	.L71:
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 1677              		.loc 1 1024 0
 1678 00ec 0223     		movs	r3, #2
ARM GAS  /tmp/cc9wfwek.s 			page 48


 1679              	.L74:
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1680              		.loc 1 1026 0
 1681 00ee 1846     		mov	r0, r3
 1682 00f0 1C37     		adds	r7, r7, #28
 1683              	.LCFI67:
 1684              		.cfi_def_cfa_offset 12
 1685 00f2 BD46     		mov	sp, r7
 1686              	.LCFI68:
 1687              		.cfi_def_cfa_register 13
 1688              		@ sp needed
 1689 00f4 90BD     		pop	{r4, r7, pc}
 1690              	.L77:
 1691 00f6 00BF     		.align	2
 1692              	.L76:
 1693 00f8 00000000 		.word	UART_DMAReceiveCplt
 1694 00fc 00000000 		.word	UART_DMARxHalfCplt
 1695 0100 00000000 		.word	UART_DMAError
 1696              		.cfi_endproc
 1697              	.LFE75:
 1699              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1700              		.align	2
 1701              		.global	HAL_UART_DMAPause
 1702              		.thumb
 1703              		.thumb_func
 1705              	HAL_UART_DMAPause:
 1706              	.LFB76:
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1707              		.loc 1 1035 0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 16
 1710              		@ frame_needed = 1, uses_anonymous_args = 0
 1711              		@ link register save eliminated.
 1712 0000 80B4     		push	{r7}
 1713              	.LCFI69:
 1714              		.cfi_def_cfa_offset 4
 1715              		.cfi_offset 7, -4
 1716 0002 85B0     		sub	sp, sp, #20
 1717              	.LCFI70:
 1718              		.cfi_def_cfa_offset 24
 1719 0004 00AF     		add	r7, sp, #0
 1720              	.LCFI71:
 1721              		.cfi_def_cfa_register 7
 1722 0006 7860     		str	r0, [r7, #4]
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1723              		.loc 1 1036 0
 1724 0008 0023     		movs	r3, #0
 1725 000a FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/cc9wfwek.s 			page 49


1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1726              		.loc 1 1039 0
 1727 000c 7B68     		ldr	r3, [r7, #4]
 1728 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1729 0012 012B     		cmp	r3, #1
 1730 0014 01D1     		bne	.L79
 1731              		.loc 1 1039 0 is_stmt 0 discriminator 1
 1732 0016 0223     		movs	r3, #2
 1733 0018 50E0     		b	.L80
 1734              	.L79:
 1735              		.loc 1 1039 0 discriminator 2
 1736 001a 7B68     		ldr	r3, [r7, #4]
 1737 001c 0122     		movs	r2, #1
 1738 001e 83F83820 		strb	r2, [r3, #56]
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1739              		.loc 1 1041 0 is_stmt 1 discriminator 2
 1740 0022 7B68     		ldr	r3, [r7, #4]
 1741 0024 1B68     		ldr	r3, [r3]
 1742 0026 5B69     		ldr	r3, [r3, #20]
 1743 0028 03F08003 		and	r3, r3, #128
 1744 002c 002B     		cmp	r3, #0
 1745 002e 14BF     		ite	ne
 1746 0030 0123     		movne	r3, #1
 1747 0032 0023     		moveq	r3, #0
 1748 0034 DBB2     		uxtb	r3, r3
 1749 0036 FB60     		str	r3, [r7, #12]
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1750              		.loc 1 1042 0 discriminator 2
 1751 0038 7B68     		ldr	r3, [r7, #4]
 1752 003a 93F83930 		ldrb	r3, [r3, #57]
 1753 003e DBB2     		uxtb	r3, r3
 1754 0040 212B     		cmp	r3, #33
 1755 0042 0AD1     		bne	.L81
 1756              		.loc 1 1042 0 is_stmt 0 discriminator 1
 1757 0044 FB68     		ldr	r3, [r7, #12]
 1758 0046 002B     		cmp	r3, #0
 1759 0048 07D0     		beq	.L81
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1760              		.loc 1 1045 0 is_stmt 1
 1761 004a 7B68     		ldr	r3, [r7, #4]
 1762 004c 1B68     		ldr	r3, [r3]
 1763 004e 7A68     		ldr	r2, [r7, #4]
 1764 0050 1268     		ldr	r2, [r2]
 1765 0052 5269     		ldr	r2, [r2, #20]
 1766 0054 22F08002 		bic	r2, r2, #128
 1767 0058 5A61     		str	r2, [r3, #20]
 1768              	.L81:
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1769              		.loc 1 1048 0
 1770 005a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 50


 1771 005c 1B68     		ldr	r3, [r3]
 1772 005e 5B69     		ldr	r3, [r3, #20]
 1773 0060 03F04003 		and	r3, r3, #64
 1774 0064 002B     		cmp	r3, #0
 1775 0066 14BF     		ite	ne
 1776 0068 0123     		movne	r3, #1
 1777 006a 0023     		moveq	r3, #0
 1778 006c DBB2     		uxtb	r3, r3
 1779 006e FB60     		str	r3, [r7, #12]
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1780              		.loc 1 1049 0
 1781 0070 7B68     		ldr	r3, [r7, #4]
 1782 0072 93F83A30 		ldrb	r3, [r3, #58]
 1783 0076 DBB2     		uxtb	r3, r3
 1784 0078 222B     		cmp	r3, #34
 1785 007a 1AD1     		bne	.L82
 1786              		.loc 1 1049 0 is_stmt 0 discriminator 1
 1787 007c FB68     		ldr	r3, [r7, #12]
 1788 007e 002B     		cmp	r3, #0
 1789 0080 17D0     		beq	.L82
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1790              		.loc 1 1052 0 is_stmt 1
 1791 0082 7B68     		ldr	r3, [r7, #4]
 1792 0084 1B68     		ldr	r3, [r3]
 1793 0086 7A68     		ldr	r2, [r7, #4]
 1794 0088 1268     		ldr	r2, [r2]
 1795 008a D268     		ldr	r2, [r2, #12]
 1796 008c 22F48072 		bic	r2, r2, #256
 1797 0090 DA60     		str	r2, [r3, #12]
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1798              		.loc 1 1053 0
 1799 0092 7B68     		ldr	r3, [r7, #4]
 1800 0094 1B68     		ldr	r3, [r3]
 1801 0096 7A68     		ldr	r2, [r7, #4]
 1802 0098 1268     		ldr	r2, [r2]
 1803 009a 5269     		ldr	r2, [r2, #20]
 1804 009c 22F00102 		bic	r2, r2, #1
 1805 00a0 5A61     		str	r2, [r3, #20]
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1806              		.loc 1 1056 0
 1807 00a2 7B68     		ldr	r3, [r7, #4]
 1808 00a4 1B68     		ldr	r3, [r3]
 1809 00a6 7A68     		ldr	r2, [r7, #4]
 1810 00a8 1268     		ldr	r2, [r2]
 1811 00aa 5269     		ldr	r2, [r2, #20]
 1812 00ac 22F04002 		bic	r2, r2, #64
 1813 00b0 5A61     		str	r2, [r3, #20]
 1814              	.L82:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1815              		.loc 1 1060 0
ARM GAS  /tmp/cc9wfwek.s 			page 51


 1816 00b2 7B68     		ldr	r3, [r7, #4]
 1817 00b4 0022     		movs	r2, #0
 1818 00b6 83F83820 		strb	r2, [r3, #56]
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 1819              		.loc 1 1062 0
 1820 00ba 0023     		movs	r3, #0
 1821              	.L80:
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1822              		.loc 1 1063 0
 1823 00bc 1846     		mov	r0, r3
 1824 00be 1437     		adds	r7, r7, #20
 1825              	.LCFI72:
 1826              		.cfi_def_cfa_offset 4
 1827 00c0 BD46     		mov	sp, r7
 1828              	.LCFI73:
 1829              		.cfi_def_cfa_register 13
 1830              		@ sp needed
 1831 00c2 5DF8047B 		ldr	r7, [sp], #4
 1832              	.LCFI74:
 1833              		.cfi_restore 7
 1834              		.cfi_def_cfa_offset 0
 1835 00c6 7047     		bx	lr
 1836              		.cfi_endproc
 1837              	.LFE76:
 1839              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1840              		.align	2
 1841              		.global	HAL_UART_DMAResume
 1842              		.thumb
 1843              		.thumb_func
 1845              	HAL_UART_DMAResume:
 1846              	.LFB77:
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1847              		.loc 1 1072 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 16
 1850              		@ frame_needed = 1, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
 1852 0000 80B4     		push	{r7}
 1853              	.LCFI75:
 1854              		.cfi_def_cfa_offset 4
 1855              		.cfi_offset 7, -4
 1856 0002 85B0     		sub	sp, sp, #20
 1857              	.LCFI76:
 1858              		.cfi_def_cfa_offset 24
 1859 0004 00AF     		add	r7, sp, #0
 1860              	.LCFI77:
 1861              		.cfi_def_cfa_register 7
 1862 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 52


1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 1863              		.loc 1 1074 0
 1864 0008 7B68     		ldr	r3, [r7, #4]
 1865 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 1866 000e 012B     		cmp	r3, #1
 1867 0010 01D1     		bne	.L84
 1868              		.loc 1 1074 0 is_stmt 0 discriminator 1
 1869 0012 0223     		movs	r3, #2
 1870 0014 3FE0     		b	.L85
 1871              	.L84:
 1872              		.loc 1 1074 0 discriminator 2
 1873 0016 7B68     		ldr	r3, [r7, #4]
 1874 0018 0122     		movs	r2, #1
 1875 001a 83F83820 		strb	r2, [r3, #56]
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 1876              		.loc 1 1076 0 is_stmt 1 discriminator 2
 1877 001e 7B68     		ldr	r3, [r7, #4]
 1878 0020 93F83930 		ldrb	r3, [r3, #57]
 1879 0024 DBB2     		uxtb	r3, r3
 1880 0026 212B     		cmp	r3, #33
 1881 0028 07D1     		bne	.L86
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1882              		.loc 1 1079 0
 1883 002a 7B68     		ldr	r3, [r7, #4]
 1884 002c 1B68     		ldr	r3, [r3]
 1885 002e 7A68     		ldr	r2, [r7, #4]
 1886 0030 1268     		ldr	r2, [r2]
 1887 0032 5269     		ldr	r2, [r2, #20]
 1888 0034 42F08002 		orr	r2, r2, #128
 1889 0038 5A61     		str	r2, [r3, #20]
 1890              	.L86:
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 1891              		.loc 1 1082 0
 1892 003a 7B68     		ldr	r3, [r7, #4]
 1893 003c 93F83A30 		ldrb	r3, [r3, #58]
 1894 0040 DBB2     		uxtb	r3, r3
 1895 0042 222B     		cmp	r3, #34
 1896 0044 22D1     		bne	.L87
 1897              	.LBB3:
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 1898              		.loc 1 1085 0
 1899 0046 0023     		movs	r3, #0
 1900 0048 FB60     		str	r3, [r7, #12]
 1901 004a 7B68     		ldr	r3, [r7, #4]
 1902 004c 1B68     		ldr	r3, [r3]
 1903 004e 1B68     		ldr	r3, [r3]
 1904 0050 FB60     		str	r3, [r7, #12]
 1905 0052 7B68     		ldr	r3, [r7, #4]
 1906 0054 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9wfwek.s 			page 53


 1907 0056 5B68     		ldr	r3, [r3, #4]
 1908 0058 FB60     		str	r3, [r7, #12]
 1909 005a FB68     		ldr	r3, [r7, #12]
 1910              	.LBE3:
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1911              		.loc 1 1088 0
 1912 005c 7B68     		ldr	r3, [r7, #4]
 1913 005e 1B68     		ldr	r3, [r3]
 1914 0060 7A68     		ldr	r2, [r7, #4]
 1915 0062 1268     		ldr	r2, [r2]
 1916 0064 D268     		ldr	r2, [r2, #12]
 1917 0066 42F48072 		orr	r2, r2, #256
 1918 006a DA60     		str	r2, [r3, #12]
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1919              		.loc 1 1089 0
 1920 006c 7B68     		ldr	r3, [r7, #4]
 1921 006e 1B68     		ldr	r3, [r3]
 1922 0070 7A68     		ldr	r2, [r7, #4]
 1923 0072 1268     		ldr	r2, [r2]
 1924 0074 5269     		ldr	r2, [r2, #20]
 1925 0076 42F00102 		orr	r2, r2, #1
 1926 007a 5A61     		str	r2, [r3, #20]
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1927              		.loc 1 1092 0
 1928 007c 7B68     		ldr	r3, [r7, #4]
 1929 007e 1B68     		ldr	r3, [r3]
 1930 0080 7A68     		ldr	r2, [r7, #4]
 1931 0082 1268     		ldr	r2, [r2]
 1932 0084 5269     		ldr	r2, [r2, #20]
 1933 0086 42F04002 		orr	r2, r2, #64
 1934 008a 5A61     		str	r2, [r3, #20]
 1935              	.L87:
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1936              		.loc 1 1096 0
 1937 008c 7B68     		ldr	r3, [r7, #4]
 1938 008e 0022     		movs	r2, #0
 1939 0090 83F83820 		strb	r2, [r3, #56]
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 1940              		.loc 1 1098 0
 1941 0094 0023     		movs	r3, #0
 1942              	.L85:
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 1943              		.loc 1 1099 0
 1944 0096 1846     		mov	r0, r3
 1945 0098 1437     		adds	r7, r7, #20
 1946              	.LCFI78:
 1947              		.cfi_def_cfa_offset 4
 1948 009a BD46     		mov	sp, r7
 1949              	.LCFI79:
ARM GAS  /tmp/cc9wfwek.s 			page 54


 1950              		.cfi_def_cfa_register 13
 1951              		@ sp needed
 1952 009c 5DF8047B 		ldr	r7, [sp], #4
 1953              	.LCFI80:
 1954              		.cfi_restore 7
 1955              		.cfi_def_cfa_offset 0
 1956 00a0 7047     		bx	lr
 1957              		.cfi_endproc
 1958              	.LFE77:
 1960 00a2 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1961              		.align	2
 1962              		.global	HAL_UART_DMAStop
 1963              		.thumb
 1964              		.thumb_func
 1966              	HAL_UART_DMAStop:
 1967              	.LFB78:
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 1968              		.loc 1 1108 0
 1969              		.cfi_startproc
 1970              		@ args = 0, pretend = 0, frame = 16
 1971              		@ frame_needed = 1, uses_anonymous_args = 0
 1972 0000 80B5     		push	{r7, lr}
 1973              	.LCFI81:
 1974              		.cfi_def_cfa_offset 8
 1975              		.cfi_offset 7, -8
 1976              		.cfi_offset 14, -4
 1977 0002 84B0     		sub	sp, sp, #16
 1978              	.LCFI82:
 1979              		.cfi_def_cfa_offset 24
 1980 0004 00AF     		add	r7, sp, #0
 1981              	.LCFI83:
 1982              		.cfi_def_cfa_register 7
 1983 0006 7860     		str	r0, [r7, #4]
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1984              		.loc 1 1109 0
 1985 0008 0023     		movs	r3, #0
 1986 000a FB60     		str	r3, [r7, #12]
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1987              		.loc 1 1117 0
 1988 000c 7B68     		ldr	r3, [r7, #4]
 1989 000e 1B68     		ldr	r3, [r3]
 1990 0010 5B69     		ldr	r3, [r3, #20]
ARM GAS  /tmp/cc9wfwek.s 			page 55


 1991 0012 03F08003 		and	r3, r3, #128
 1992 0016 002B     		cmp	r3, #0
 1993 0018 14BF     		ite	ne
 1994 001a 0123     		movne	r3, #1
 1995 001c 0023     		moveq	r3, #0
 1996 001e DBB2     		uxtb	r3, r3
 1997 0020 FB60     		str	r3, [r7, #12]
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1998              		.loc 1 1118 0
 1999 0022 7B68     		ldr	r3, [r7, #4]
 2000 0024 93F83930 		ldrb	r3, [r3, #57]
 2001 0028 DBB2     		uxtb	r3, r3
 2002 002a 212B     		cmp	r3, #33
 2003 002c 16D1     		bne	.L89
 2004              		.loc 1 1118 0 is_stmt 0 discriminator 1
 2005 002e FB68     		ldr	r3, [r7, #12]
 2006 0030 002B     		cmp	r3, #0
 2007 0032 13D0     		beq	.L89
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2008              		.loc 1 1120 0 is_stmt 1
 2009 0034 7B68     		ldr	r3, [r7, #4]
 2010 0036 1B68     		ldr	r3, [r3]
 2011 0038 7A68     		ldr	r2, [r7, #4]
 2012 003a 1268     		ldr	r2, [r2]
 2013 003c 5269     		ldr	r2, [r2, #20]
 2014 003e 22F08002 		bic	r2, r2, #128
 2015 0042 5A61     		str	r2, [r3, #20]
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2016              		.loc 1 1123 0
 2017 0044 7B68     		ldr	r3, [r7, #4]
 2018 0046 1B6B     		ldr	r3, [r3, #48]
 2019 0048 002B     		cmp	r3, #0
 2020 004a 04D0     		beq	.L90
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2021              		.loc 1 1125 0
 2022 004c 7B68     		ldr	r3, [r7, #4]
 2023 004e 1B6B     		ldr	r3, [r3, #48]
 2024 0050 1846     		mov	r0, r3
 2025 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 2026              	.L90:
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2027              		.loc 1 1127 0
 2028 0056 7868     		ldr	r0, [r7, #4]
 2029 0058 FFF7FEFF 		bl	UART_EndTxTransfer
 2030              	.L89:
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2031              		.loc 1 1131 0
 2032 005c 7B68     		ldr	r3, [r7, #4]
 2033 005e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc9wfwek.s 			page 56


 2034 0060 5B69     		ldr	r3, [r3, #20]
 2035 0062 03F04003 		and	r3, r3, #64
 2036 0066 002B     		cmp	r3, #0
 2037 0068 14BF     		ite	ne
 2038 006a 0123     		movne	r3, #1
 2039 006c 0023     		moveq	r3, #0
 2040 006e DBB2     		uxtb	r3, r3
 2041 0070 FB60     		str	r3, [r7, #12]
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2042              		.loc 1 1132 0
 2043 0072 7B68     		ldr	r3, [r7, #4]
 2044 0074 93F83A30 		ldrb	r3, [r3, #58]
 2045 0078 DBB2     		uxtb	r3, r3
 2046 007a 222B     		cmp	r3, #34
 2047 007c 16D1     		bne	.L91
 2048              		.loc 1 1132 0 is_stmt 0 discriminator 1
 2049 007e FB68     		ldr	r3, [r7, #12]
 2050 0080 002B     		cmp	r3, #0
 2051 0082 13D0     		beq	.L91
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2052              		.loc 1 1134 0 is_stmt 1
 2053 0084 7B68     		ldr	r3, [r7, #4]
 2054 0086 1B68     		ldr	r3, [r3]
 2055 0088 7A68     		ldr	r2, [r7, #4]
 2056 008a 1268     		ldr	r2, [r2]
 2057 008c 5269     		ldr	r2, [r2, #20]
 2058 008e 22F04002 		bic	r2, r2, #64
 2059 0092 5A61     		str	r2, [r3, #20]
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2060              		.loc 1 1137 0
 2061 0094 7B68     		ldr	r3, [r7, #4]
 2062 0096 5B6B     		ldr	r3, [r3, #52]
 2063 0098 002B     		cmp	r3, #0
 2064 009a 04D0     		beq	.L92
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2065              		.loc 1 1139 0
 2066 009c 7B68     		ldr	r3, [r7, #4]
 2067 009e 5B6B     		ldr	r3, [r3, #52]
 2068 00a0 1846     		mov	r0, r3
 2069 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2070              	.L92:
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2071              		.loc 1 1141 0
 2072 00a6 7868     		ldr	r0, [r7, #4]
 2073 00a8 FFF7FEFF 		bl	UART_EndRxTransfer
 2074              	.L91:
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2075              		.loc 1 1144 0
 2076 00ac 0023     		movs	r3, #0
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
ARM GAS  /tmp/cc9wfwek.s 			page 57


 2077              		.loc 1 1145 0
 2078 00ae 1846     		mov	r0, r3
 2079 00b0 1037     		adds	r7, r7, #16
 2080              	.LCFI84:
 2081              		.cfi_def_cfa_offset 8
 2082 00b2 BD46     		mov	sp, r7
 2083              	.LCFI85:
 2084              		.cfi_def_cfa_register 13
 2085              		@ sp needed
 2086 00b4 80BD     		pop	{r7, pc}
 2087              		.cfi_endproc
 2088              	.LFE78:
 2090 00b6 00BF     		.section	.text.HAL_UART_Abort,"ax",%progbits
 2091              		.align	2
 2092              		.global	HAL_UART_Abort
 2093              		.thumb
 2094              		.thumb_func
 2096              	HAL_UART_Abort:
 2097              	.LFB79:
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2098              		.loc 1 1160 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 8
 2101              		@ frame_needed = 1, uses_anonymous_args = 0
 2102 0000 80B5     		push	{r7, lr}
 2103              	.LCFI86:
 2104              		.cfi_def_cfa_offset 8
 2105              		.cfi_offset 7, -8
 2106              		.cfi_offset 14, -4
 2107 0002 82B0     		sub	sp, sp, #8
 2108              	.LCFI87:
 2109              		.cfi_def_cfa_offset 16
 2110 0004 00AF     		add	r7, sp, #0
 2111              	.LCFI88:
 2112              		.cfi_def_cfa_register 7
 2113 0006 7860     		str	r0, [r7, #4]
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2114              		.loc 1 1162 0
 2115 0008 7B68     		ldr	r3, [r7, #4]
 2116 000a 1B68     		ldr	r3, [r3]
 2117 000c 7A68     		ldr	r2, [r7, #4]
 2118 000e 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cc9wfwek.s 			page 58


 2119 0010 D268     		ldr	r2, [r2, #12]
 2120 0012 22F4F072 		bic	r2, r2, #480
 2121 0016 DA60     		str	r2, [r3, #12]
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2122              		.loc 1 1163 0
 2123 0018 7B68     		ldr	r3, [r7, #4]
 2124 001a 1B68     		ldr	r3, [r3]
 2125 001c 7A68     		ldr	r2, [r7, #4]
 2126 001e 1268     		ldr	r2, [r2]
 2127 0020 5269     		ldr	r2, [r2, #20]
 2128 0022 22F00102 		bic	r2, r2, #1
 2129 0026 5A61     		str	r2, [r3, #20]
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2130              		.loc 1 1166 0
 2131 0028 7B68     		ldr	r3, [r7, #4]
 2132 002a 1B68     		ldr	r3, [r3]
 2133 002c 5B69     		ldr	r3, [r3, #20]
 2134 002e 03F08003 		and	r3, r3, #128
 2135 0032 002B     		cmp	r3, #0
 2136 0034 14D0     		beq	.L95
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2137              		.loc 1 1168 0
 2138 0036 7B68     		ldr	r3, [r7, #4]
 2139 0038 1B68     		ldr	r3, [r3]
 2140 003a 7A68     		ldr	r2, [r7, #4]
 2141 003c 1268     		ldr	r2, [r2]
 2142 003e 5269     		ldr	r2, [r2, #20]
 2143 0040 22F08002 		bic	r2, r2, #128
 2144 0044 5A61     		str	r2, [r3, #20]
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2145              		.loc 1 1171 0
 2146 0046 7B68     		ldr	r3, [r7, #4]
 2147 0048 1B6B     		ldr	r3, [r3, #48]
 2148 004a 002B     		cmp	r3, #0
 2149 004c 08D0     		beq	.L95
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2150              		.loc 1 1175 0
 2151 004e 7B68     		ldr	r3, [r7, #4]
 2152 0050 1B6B     		ldr	r3, [r3, #48]
 2153 0052 0022     		movs	r2, #0
 2154 0054 5A63     		str	r2, [r3, #52]
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2155              		.loc 1 1177 0
 2156 0056 7B68     		ldr	r3, [r7, #4]
 2157 0058 1B6B     		ldr	r3, [r3, #48]
 2158 005a 1846     		mov	r0, r3
 2159 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2160              	.L95:
ARM GAS  /tmp/cc9wfwek.s 			page 59


1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2161              		.loc 1 1182 0
 2162 0060 7B68     		ldr	r3, [r7, #4]
 2163 0062 1B68     		ldr	r3, [r3]
 2164 0064 5B69     		ldr	r3, [r3, #20]
 2165 0066 03F04003 		and	r3, r3, #64
 2166 006a 002B     		cmp	r3, #0
 2167 006c 14D0     		beq	.L96
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2168              		.loc 1 1184 0
 2169 006e 7B68     		ldr	r3, [r7, #4]
 2170 0070 1B68     		ldr	r3, [r3]
 2171 0072 7A68     		ldr	r2, [r7, #4]
 2172 0074 1268     		ldr	r2, [r2]
 2173 0076 5269     		ldr	r2, [r2, #20]
 2174 0078 22F04002 		bic	r2, r2, #64
 2175 007c 5A61     		str	r2, [r3, #20]
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2176              		.loc 1 1187 0
 2177 007e 7B68     		ldr	r3, [r7, #4]
 2178 0080 5B6B     		ldr	r3, [r3, #52]
 2179 0082 002B     		cmp	r3, #0
 2180 0084 08D0     		beq	.L96
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2181              		.loc 1 1191 0
 2182 0086 7B68     		ldr	r3, [r7, #4]
 2183 0088 5B6B     		ldr	r3, [r3, #52]
 2184 008a 0022     		movs	r2, #0
 2185 008c 5A63     		str	r2, [r3, #52]
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2186              		.loc 1 1193 0
 2187 008e 7B68     		ldr	r3, [r7, #4]
 2188 0090 5B6B     		ldr	r3, [r3, #52]
 2189 0092 1846     		mov	r0, r3
 2190 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 2191              	.L96:
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2192              		.loc 1 1198 0
 2193 0098 7B68     		ldr	r3, [r7, #4]
 2194 009a 0022     		movs	r2, #0
 2195 009c DA84     		strh	r2, [r3, #38]	@ movhi
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
ARM GAS  /tmp/cc9wfwek.s 			page 60


 2196              		.loc 1 1199 0
 2197 009e 7B68     		ldr	r3, [r7, #4]
 2198 00a0 0022     		movs	r2, #0
 2199 00a2 DA85     		strh	r2, [r3, #46]	@ movhi
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2200              		.loc 1 1202 0
 2201 00a4 7B68     		ldr	r3, [r7, #4]
 2202 00a6 0022     		movs	r2, #0
 2203 00a8 DA63     		str	r2, [r3, #60]
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2204              		.loc 1 1205 0
 2205 00aa 7B68     		ldr	r3, [r7, #4]
 2206 00ac 2022     		movs	r2, #32
 2207 00ae 83F83A20 		strb	r2, [r3, #58]
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2208              		.loc 1 1206 0
 2209 00b2 7B68     		ldr	r3, [r7, #4]
 2210 00b4 2022     		movs	r2, #32
 2211 00b6 83F83920 		strb	r2, [r3, #57]
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2212              		.loc 1 1208 0
 2213 00ba 0023     		movs	r3, #0
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2214              		.loc 1 1209 0
 2215 00bc 1846     		mov	r0, r3
 2216 00be 0837     		adds	r7, r7, #8
 2217              	.LCFI89:
 2218              		.cfi_def_cfa_offset 8
 2219 00c0 BD46     		mov	sp, r7
 2220              	.LCFI90:
 2221              		.cfi_def_cfa_register 13
 2222              		@ sp needed
 2223 00c2 80BD     		pop	{r7, pc}
 2224              		.cfi_endproc
 2225              	.LFE79:
 2227              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2228              		.align	2
 2229              		.global	HAL_UART_AbortTransmit
 2230              		.thumb
 2231              		.thumb_func
 2233              	HAL_UART_AbortTransmit:
 2234              	.LFB80:
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/cc9wfwek.s 			page 61


1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2235              		.loc 1 1224 0
 2236              		.cfi_startproc
 2237              		@ args = 0, pretend = 0, frame = 8
 2238              		@ frame_needed = 1, uses_anonymous_args = 0
 2239 0000 80B5     		push	{r7, lr}
 2240              	.LCFI91:
 2241              		.cfi_def_cfa_offset 8
 2242              		.cfi_offset 7, -8
 2243              		.cfi_offset 14, -4
 2244 0002 82B0     		sub	sp, sp, #8
 2245              	.LCFI92:
 2246              		.cfi_def_cfa_offset 16
 2247 0004 00AF     		add	r7, sp, #0
 2248              	.LCFI93:
 2249              		.cfi_def_cfa_register 7
 2250 0006 7860     		str	r0, [r7, #4]
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2251              		.loc 1 1226 0
 2252 0008 7B68     		ldr	r3, [r7, #4]
 2253 000a 1B68     		ldr	r3, [r3]
 2254 000c 7A68     		ldr	r2, [r7, #4]
 2255 000e 1268     		ldr	r2, [r2]
 2256 0010 D268     		ldr	r2, [r2, #12]
 2257 0012 22F0C002 		bic	r2, r2, #192
 2258 0016 DA60     		str	r2, [r3, #12]
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2259              		.loc 1 1229 0
 2260 0018 7B68     		ldr	r3, [r7, #4]
 2261 001a 1B68     		ldr	r3, [r3]
 2262 001c 5B69     		ldr	r3, [r3, #20]
 2263 001e 03F08003 		and	r3, r3, #128
 2264 0022 002B     		cmp	r3, #0
 2265 0024 14D0     		beq	.L99
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2266              		.loc 1 1231 0
 2267 0026 7B68     		ldr	r3, [r7, #4]
 2268 0028 1B68     		ldr	r3, [r3]
 2269 002a 7A68     		ldr	r2, [r7, #4]
 2270 002c 1268     		ldr	r2, [r2]
 2271 002e 5269     		ldr	r2, [r2, #20]
 2272 0030 22F08002 		bic	r2, r2, #128
 2273 0034 5A61     		str	r2, [r3, #20]
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2274              		.loc 1 1234 0
 2275 0036 7B68     		ldr	r3, [r7, #4]
 2276 0038 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/cc9wfwek.s 			page 62


 2277 003a 002B     		cmp	r3, #0
 2278 003c 08D0     		beq	.L99
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2279              		.loc 1 1238 0
 2280 003e 7B68     		ldr	r3, [r7, #4]
 2281 0040 1B6B     		ldr	r3, [r3, #48]
 2282 0042 0022     		movs	r2, #0
 2283 0044 5A63     		str	r2, [r3, #52]
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2284              		.loc 1 1240 0
 2285 0046 7B68     		ldr	r3, [r7, #4]
 2286 0048 1B6B     		ldr	r3, [r3, #48]
 2287 004a 1846     		mov	r0, r3
 2288 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2289              	.L99:
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Tx transfer counter */
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 2290              		.loc 1 1245 0
 2291 0050 7B68     		ldr	r3, [r7, #4]
 2292 0052 0022     		movs	r2, #0
 2293 0054 DA84     		strh	r2, [r3, #38]	@ movhi
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2294              		.loc 1 1248 0
 2295 0056 7B68     		ldr	r3, [r7, #4]
 2296 0058 2022     		movs	r2, #32
 2297 005a 83F83920 		strb	r2, [r3, #57]
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2298              		.loc 1 1250 0
 2299 005e 0023     		movs	r3, #0
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2300              		.loc 1 1251 0
 2301 0060 1846     		mov	r0, r3
 2302 0062 0837     		adds	r7, r7, #8
 2303              	.LCFI94:
 2304              		.cfi_def_cfa_offset 8
 2305 0064 BD46     		mov	sp, r7
 2306              	.LCFI95:
 2307              		.cfi_def_cfa_register 13
 2308              		@ sp needed
 2309 0066 80BD     		pop	{r7, pc}
 2310              		.cfi_endproc
 2311              	.LFE80:
 2313              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2314              		.align	2
 2315              		.global	HAL_UART_AbortReceive
 2316              		.thumb
 2317              		.thumb_func
ARM GAS  /tmp/cc9wfwek.s 			page 63


 2319              	HAL_UART_AbortReceive:
 2320              	.LFB81:
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2321              		.loc 1 1266 0
 2322              		.cfi_startproc
 2323              		@ args = 0, pretend = 0, frame = 8
 2324              		@ frame_needed = 1, uses_anonymous_args = 0
 2325 0000 80B5     		push	{r7, lr}
 2326              	.LCFI96:
 2327              		.cfi_def_cfa_offset 8
 2328              		.cfi_offset 7, -8
 2329              		.cfi_offset 14, -4
 2330 0002 82B0     		sub	sp, sp, #8
 2331              	.LCFI97:
 2332              		.cfi_def_cfa_offset 16
 2333 0004 00AF     		add	r7, sp, #0
 2334              	.LCFI98:
 2335              		.cfi_def_cfa_register 7
 2336 0006 7860     		str	r0, [r7, #4]
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2337              		.loc 1 1268 0
 2338 0008 7B68     		ldr	r3, [r7, #4]
 2339 000a 1B68     		ldr	r3, [r3]
 2340 000c 7A68     		ldr	r2, [r7, #4]
 2341 000e 1268     		ldr	r2, [r2]
 2342 0010 D268     		ldr	r2, [r2, #12]
 2343 0012 22F49072 		bic	r2, r2, #288
 2344 0016 DA60     		str	r2, [r3, #12]
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2345              		.loc 1 1269 0
 2346 0018 7B68     		ldr	r3, [r7, #4]
 2347 001a 1B68     		ldr	r3, [r3]
 2348 001c 7A68     		ldr	r2, [r7, #4]
 2349 001e 1268     		ldr	r2, [r2]
 2350 0020 5269     		ldr	r2, [r2, #20]
 2351 0022 22F00102 		bic	r2, r2, #1
 2352 0026 5A61     		str	r2, [r3, #20]
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2353              		.loc 1 1272 0
 2354 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 64


 2355 002a 1B68     		ldr	r3, [r3]
 2356 002c 5B69     		ldr	r3, [r3, #20]
 2357 002e 03F04003 		and	r3, r3, #64
 2358 0032 002B     		cmp	r3, #0
 2359 0034 14D0     		beq	.L102
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2360              		.loc 1 1274 0
 2361 0036 7B68     		ldr	r3, [r7, #4]
 2362 0038 1B68     		ldr	r3, [r3]
 2363 003a 7A68     		ldr	r2, [r7, #4]
 2364 003c 1268     		ldr	r2, [r2]
 2365 003e 5269     		ldr	r2, [r2, #20]
 2366 0040 22F04002 		bic	r2, r2, #64
 2367 0044 5A61     		str	r2, [r3, #20]
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2368              		.loc 1 1277 0
 2369 0046 7B68     		ldr	r3, [r7, #4]
 2370 0048 5B6B     		ldr	r3, [r3, #52]
 2371 004a 002B     		cmp	r3, #0
 2372 004c 08D0     		beq	.L102
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2373              		.loc 1 1281 0
 2374 004e 7B68     		ldr	r3, [r7, #4]
 2375 0050 5B6B     		ldr	r3, [r3, #52]
 2376 0052 0022     		movs	r2, #0
 2377 0054 5A63     		str	r2, [r3, #52]
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2378              		.loc 1 1283 0
 2379 0056 7B68     		ldr	r3, [r7, #4]
 2380 0058 5B6B     		ldr	r3, [r3, #52]
 2381 005a 1846     		mov	r0, r3
 2382 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2383              	.L102:
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset Rx transfer counter */
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2384              		.loc 1 1288 0
 2385 0060 7B68     		ldr	r3, [r7, #4]
 2386 0062 0022     		movs	r2, #0
 2387 0064 DA85     		strh	r2, [r3, #46]	@ movhi
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2388              		.loc 1 1291 0
 2389 0066 7B68     		ldr	r3, [r7, #4]
 2390 0068 2022     		movs	r2, #32
 2391 006a 83F83A20 		strb	r2, [r3, #58]
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc9wfwek.s 			page 65


1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2392              		.loc 1 1293 0
 2393 006e 0023     		movs	r3, #0
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2394              		.loc 1 1294 0
 2395 0070 1846     		mov	r0, r3
 2396 0072 0837     		adds	r7, r7, #8
 2397              	.LCFI99:
 2398              		.cfi_def_cfa_offset 8
 2399 0074 BD46     		mov	sp, r7
 2400              	.LCFI100:
 2401              		.cfi_def_cfa_register 13
 2402              		@ sp needed
 2403 0076 80BD     		pop	{r7, pc}
 2404              		.cfi_endproc
 2405              	.LFE81:
 2407              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2408              		.align	2
 2409              		.global	HAL_UART_Abort_IT
 2410              		.thumb
 2411              		.thumb_func
 2413              	HAL_UART_Abort_IT:
 2414              	.LFB82:
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2415              		.loc 1 1311 0
 2416              		.cfi_startproc
 2417              		@ args = 0, pretend = 0, frame = 16
 2418              		@ frame_needed = 1, uses_anonymous_args = 0
 2419 0000 80B5     		push	{r7, lr}
 2420              	.LCFI101:
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 7, -8
 2423              		.cfi_offset 14, -4
 2424 0002 84B0     		sub	sp, sp, #16
 2425              	.LCFI102:
 2426              		.cfi_def_cfa_offset 24
 2427 0004 00AF     		add	r7, sp, #0
 2428              	.LCFI103:
 2429              		.cfi_def_cfa_register 7
 2430 0006 7860     		str	r0, [r7, #4]
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
ARM GAS  /tmp/cc9wfwek.s 			page 66


 2431              		.loc 1 1312 0
 2432 0008 0123     		movs	r3, #1
 2433 000a FB60     		str	r3, [r7, #12]
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2434              		.loc 1 1315 0
 2435 000c 7B68     		ldr	r3, [r7, #4]
 2436 000e 1B68     		ldr	r3, [r3]
 2437 0010 7A68     		ldr	r2, [r7, #4]
 2438 0012 1268     		ldr	r2, [r2]
 2439 0014 D268     		ldr	r2, [r2, #12]
 2440 0016 22F4F072 		bic	r2, r2, #480
 2441 001a DA60     		str	r2, [r3, #12]
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2442              		.loc 1 1316 0
 2443 001c 7B68     		ldr	r3, [r7, #4]
 2444 001e 1B68     		ldr	r3, [r3]
 2445 0020 7A68     		ldr	r2, [r7, #4]
 2446 0022 1268     		ldr	r2, [r2]
 2447 0024 5269     		ldr	r2, [r2, #20]
 2448 0026 22F00102 		bic	r2, r2, #1
 2449 002a 5A61     		str	r2, [r3, #20]
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      before any call to DMA Abort functions */
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2450              		.loc 1 1321 0
 2451 002c 7B68     		ldr	r3, [r7, #4]
 2452 002e 1B6B     		ldr	r3, [r3, #48]
 2453 0030 002B     		cmp	r3, #0
 2454 0032 0FD0     		beq	.L105
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2455              		.loc 1 1325 0
 2456 0034 7B68     		ldr	r3, [r7, #4]
 2457 0036 1B68     		ldr	r3, [r3]
 2458 0038 5B69     		ldr	r3, [r3, #20]
 2459 003a 03F08003 		and	r3, r3, #128
 2460 003e 002B     		cmp	r3, #0
 2461 0040 04D0     		beq	.L106
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2462              		.loc 1 1327 0
 2463 0042 7B68     		ldr	r3, [r7, #4]
 2464 0044 1B6B     		ldr	r3, [r3, #48]
 2465 0046 3E4A     		ldr	r2, .L115
 2466 0048 5A63     		str	r2, [r3, #52]
 2467 004a 03E0     		b	.L105
 2468              	.L106:
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  /tmp/cc9wfwek.s 			page 67


 2469              		.loc 1 1331 0
 2470 004c 7B68     		ldr	r3, [r7, #4]
 2471 004e 1B6B     		ldr	r3, [r3, #48]
 2472 0050 0022     		movs	r2, #0
 2473 0052 5A63     		str	r2, [r3, #52]
 2474              	.L105:
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2475              		.loc 1 1335 0
 2476 0054 7B68     		ldr	r3, [r7, #4]
 2477 0056 5B6B     		ldr	r3, [r3, #52]
 2478 0058 002B     		cmp	r3, #0
 2479 005a 0FD0     		beq	.L107
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        Otherwise, set it to NULL */
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2480              		.loc 1 1339 0
 2481 005c 7B68     		ldr	r3, [r7, #4]
 2482 005e 1B68     		ldr	r3, [r3]
 2483 0060 5B69     		ldr	r3, [r3, #20]
 2484 0062 03F04003 		and	r3, r3, #64
 2485 0066 002B     		cmp	r3, #0
 2486 0068 04D0     		beq	.L108
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2487              		.loc 1 1341 0
 2488 006a 7B68     		ldr	r3, [r7, #4]
 2489 006c 5B6B     		ldr	r3, [r3, #52]
 2490 006e 354A     		ldr	r2, .L115+4
 2491 0070 5A63     		str	r2, [r3, #52]
 2492 0072 03E0     		b	.L107
 2493              	.L108:
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2494              		.loc 1 1345 0
 2495 0074 7B68     		ldr	r3, [r7, #4]
 2496 0076 5B6B     		ldr	r3, [r3, #52]
 2497 0078 0022     		movs	r2, #0
 2498 007a 5A63     		str	r2, [r3, #52]
 2499              	.L107:
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2500              		.loc 1 1350 0
 2501 007c 7B68     		ldr	r3, [r7, #4]
 2502 007e 1B68     		ldr	r3, [r3]
 2503 0080 5B69     		ldr	r3, [r3, #20]
 2504 0082 03F08003 		and	r3, r3, #128
 2505 0086 002B     		cmp	r3, #0
 2506 0088 1AD0     		beq	.L109
ARM GAS  /tmp/cc9wfwek.s 			page 68


1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2507              		.loc 1 1353 0
 2508 008a 7B68     		ldr	r3, [r7, #4]
 2509 008c 1B68     		ldr	r3, [r3]
 2510 008e 7A68     		ldr	r2, [r7, #4]
 2511 0090 1268     		ldr	r2, [r2]
 2512 0092 5269     		ldr	r2, [r2, #20]
 2513 0094 22F08002 		bic	r2, r2, #128
 2514 0098 5A61     		str	r2, [r3, #20]
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2515              		.loc 1 1356 0
 2516 009a 7B68     		ldr	r3, [r7, #4]
 2517 009c 1B6B     		ldr	r3, [r3, #48]
 2518 009e 002B     		cmp	r3, #0
 2519 00a0 0ED0     		beq	.L109
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2520              		.loc 1 1362 0
 2521 00a2 7B68     		ldr	r3, [r7, #4]
 2522 00a4 1B6B     		ldr	r3, [r3, #48]
 2523 00a6 1846     		mov	r0, r3
 2524 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2525 00ac 0346     		mov	r3, r0
 2526 00ae 002B     		cmp	r3, #0
 2527 00b0 04D0     		beq	.L110
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2528              		.loc 1 1364 0
 2529 00b2 7B68     		ldr	r3, [r7, #4]
 2530 00b4 1B6B     		ldr	r3, [r3, #48]
 2531 00b6 0022     		movs	r2, #0
 2532 00b8 5A63     		str	r2, [r3, #52]
 2533 00ba 01E0     		b	.L109
 2534              	.L110:
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
 2535              		.loc 1 1368 0
 2536 00bc 0023     		movs	r3, #0
 2537 00be FB60     		str	r3, [r7, #12]
 2538              	.L109:
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2539              		.loc 1 1374 0
ARM GAS  /tmp/cc9wfwek.s 			page 69


 2540 00c0 7B68     		ldr	r3, [r7, #4]
 2541 00c2 1B68     		ldr	r3, [r3]
 2542 00c4 5B69     		ldr	r3, [r3, #20]
 2543 00c6 03F04003 		and	r3, r3, #64
 2544 00ca 002B     		cmp	r3, #0
 2545 00cc 1CD0     		beq	.L111
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2546              		.loc 1 1376 0
 2547 00ce 7B68     		ldr	r3, [r7, #4]
 2548 00d0 1B68     		ldr	r3, [r3]
 2549 00d2 7A68     		ldr	r2, [r7, #4]
 2550 00d4 1268     		ldr	r2, [r2]
 2551 00d6 5269     		ldr	r2, [r2, #20]
 2552 00d8 22F04002 		bic	r2, r2, #64
 2553 00dc 5A61     		str	r2, [r3, #20]
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2554              		.loc 1 1379 0
 2555 00de 7B68     		ldr	r3, [r7, #4]
 2556 00e0 5B6B     		ldr	r3, [r3, #52]
 2557 00e2 002B     		cmp	r3, #0
 2558 00e4 10D0     		beq	.L111
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2559              		.loc 1 1385 0
 2560 00e6 7B68     		ldr	r3, [r7, #4]
 2561 00e8 5B6B     		ldr	r3, [r3, #52]
 2562 00ea 1846     		mov	r0, r3
 2563 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2564 00f0 0346     		mov	r3, r0
 2565 00f2 002B     		cmp	r3, #0
 2566 00f4 06D0     		beq	.L112
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2567              		.loc 1 1387 0
 2568 00f6 7B68     		ldr	r3, [r7, #4]
 2569 00f8 5B6B     		ldr	r3, [r3, #52]
 2570 00fa 0022     		movs	r2, #0
 2571 00fc 5A63     		str	r2, [r3, #52]
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x01U;
 2572              		.loc 1 1388 0
 2573 00fe 0123     		movs	r3, #1
 2574 0100 FB60     		str	r3, [r7, #12]
 2575 0102 01E0     		b	.L111
 2576              	.L112:
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         AbortCplt = 0x00U;
 2577              		.loc 1 1392 0
 2578 0104 0023     		movs	r3, #0
ARM GAS  /tmp/cc9wfwek.s 			page 70


 2579 0106 FB60     		str	r3, [r7, #12]
 2580              	.L111:
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(AbortCplt == 0x01U)
 2581              		.loc 1 1398 0
 2582 0108 FB68     		ldr	r3, [r7, #12]
 2583 010a 012B     		cmp	r3, #1
 2584 010c 13D1     		bne	.L113
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
 2585              		.loc 1 1401 0
 2586 010e 7B68     		ldr	r3, [r7, #4]
 2587 0110 0022     		movs	r2, #0
 2588 0112 DA84     		strh	r2, [r3, #38]	@ movhi
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 2589              		.loc 1 1402 0
 2590 0114 7B68     		ldr	r3, [r7, #4]
 2591 0116 0022     		movs	r2, #0
 2592 0118 DA85     		strh	r2, [r3, #46]	@ movhi
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset ErrorCode */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2593              		.loc 1 1405 0
 2594 011a 7B68     		ldr	r3, [r7, #4]
 2595 011c 0022     		movs	r2, #0
 2596 011e DA63     		str	r2, [r3, #60]
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 2597              		.loc 1 1408 0
 2598 0120 7B68     		ldr	r3, [r7, #4]
 2599 0122 2022     		movs	r2, #32
 2600 0124 83F83920 		strb	r2, [r3, #57]
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2601              		.loc 1 1409 0
 2602 0128 7B68     		ldr	r3, [r7, #4]
 2603 012a 2022     		movs	r2, #32
 2604 012c 83F83A20 		strb	r2, [r3, #58]
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2605              		.loc 1 1412 0
 2606 0130 7868     		ldr	r0, [r7, #4]
 2607 0132 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2608              	.L113:
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2609              		.loc 1 1415 0
 2610 0136 0023     		movs	r3, #0
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2611              		.loc 1 1416 0
ARM GAS  /tmp/cc9wfwek.s 			page 71


 2612 0138 1846     		mov	r0, r3
 2613 013a 1037     		adds	r7, r7, #16
 2614              	.LCFI104:
 2615              		.cfi_def_cfa_offset 8
 2616 013c BD46     		mov	sp, r7
 2617              	.LCFI105:
 2618              		.cfi_def_cfa_register 13
 2619              		@ sp needed
 2620 013e 80BD     		pop	{r7, pc}
 2621              	.L116:
 2622              		.align	2
 2623              	.L115:
 2624 0140 00000000 		.word	UART_DMATxAbortCallback
 2625 0144 00000000 		.word	UART_DMARxAbortCallback
 2626              		.cfi_endproc
 2627              	.LFE82:
 2629              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2630              		.align	2
 2631              		.global	HAL_UART_AbortTransmit_IT
 2632              		.thumb
 2633              		.thumb_func
 2635              	HAL_UART_AbortTransmit_IT:
 2636              	.LFB83:
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2637              		.loc 1 1433 0
 2638              		.cfi_startproc
 2639              		@ args = 0, pretend = 0, frame = 8
 2640              		@ frame_needed = 1, uses_anonymous_args = 0
 2641 0000 80B5     		push	{r7, lr}
 2642              	.LCFI106:
 2643              		.cfi_def_cfa_offset 8
 2644              		.cfi_offset 7, -8
 2645              		.cfi_offset 14, -4
 2646 0002 82B0     		sub	sp, sp, #8
 2647              	.LCFI107:
 2648              		.cfi_def_cfa_offset 16
 2649 0004 00AF     		add	r7, sp, #0
 2650              	.LCFI108:
 2651              		.cfi_def_cfa_register 7
 2652 0006 7860     		str	r0, [r7, #4]
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
ARM GAS  /tmp/cc9wfwek.s 			page 72


1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2653              		.loc 1 1435 0
 2654 0008 7B68     		ldr	r3, [r7, #4]
 2655 000a 1B68     		ldr	r3, [r3]
 2656 000c 7A68     		ldr	r2, [r7, #4]
 2657 000e 1268     		ldr	r2, [r2]
 2658 0010 D268     		ldr	r2, [r2, #12]
 2659 0012 22F0C002 		bic	r2, r2, #192
 2660 0016 DA60     		str	r2, [r3, #12]
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2661              		.loc 1 1438 0
 2662 0018 7B68     		ldr	r3, [r7, #4]
 2663 001a 1B68     		ldr	r3, [r3]
 2664 001c 5B69     		ldr	r3, [r3, #20]
 2665 001e 03F08003 		and	r3, r3, #128
 2666 0022 002B     		cmp	r3, #0
 2667 0024 2AD0     		beq	.L118
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2668              		.loc 1 1440 0
 2669 0026 7B68     		ldr	r3, [r7, #4]
 2670 0028 1B68     		ldr	r3, [r3]
 2671 002a 7A68     		ldr	r2, [r7, #4]
 2672 002c 1268     		ldr	r2, [r2]
 2673 002e 5269     		ldr	r2, [r2, #20]
 2674 0030 22F08002 		bic	r2, r2, #128
 2675 0034 5A61     		str	r2, [r3, #20]
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2676              		.loc 1 1443 0
 2677 0036 7B68     		ldr	r3, [r7, #4]
 2678 0038 1B6B     		ldr	r3, [r3, #48]
 2679 003a 002B     		cmp	r3, #0
 2680 003c 13D0     		beq	.L119
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 2681              		.loc 1 1447 0
 2682 003e 7B68     		ldr	r3, [r7, #4]
 2683 0040 1B6B     		ldr	r3, [r3, #48]
 2684 0042 164A     		ldr	r2, .L124
 2685 0044 5A63     		str	r2, [r3, #52]
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA TX */
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2686              		.loc 1 1450 0
 2687 0046 7B68     		ldr	r3, [r7, #4]
 2688 0048 1B6B     		ldr	r3, [r3, #48]
 2689 004a 1846     		mov	r0, r3
 2690 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2691 0050 0346     		mov	r3, r0
 2692 0052 002B     		cmp	r3, #0
 2693 0054 1CD0     		beq	.L122
ARM GAS  /tmp/cc9wfwek.s 			page 73


1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 2694              		.loc 1 1453 0
 2695 0056 7B68     		ldr	r3, [r7, #4]
 2696 0058 1B6B     		ldr	r3, [r3, #48]
 2697 005a 5B6B     		ldr	r3, [r3, #52]
 2698 005c 7A68     		ldr	r2, [r7, #4]
 2699 005e 126B     		ldr	r2, [r2, #48]
 2700 0060 1046     		mov	r0, r2
 2701 0062 9847     		blx	r3
 2702 0064 14E0     		b	.L122
 2703              	.L119:
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Tx transfer counter */
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 2704              		.loc 1 1459 0
 2705 0066 7B68     		ldr	r3, [r7, #4]
 2706 0068 0022     		movs	r2, #0
 2707 006a DA84     		strh	r2, [r3, #38]	@ movhi
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 2708              		.loc 1 1462 0
 2709 006c 7B68     		ldr	r3, [r7, #4]
 2710 006e 2022     		movs	r2, #32
 2711 0070 83F83920 		strb	r2, [r3, #57]
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 2712              		.loc 1 1465 0
 2713 0074 7868     		ldr	r0, [r7, #4]
 2714 0076 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2715 007a 09E0     		b	.L122
 2716              	.L118:
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Tx transfer counter */
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 2717              		.loc 1 1471 0
 2718 007c 7B68     		ldr	r3, [r7, #4]
 2719 007e 0022     		movs	r2, #0
 2720 0080 DA84     		strh	r2, [r3, #38]	@ movhi
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 2721              		.loc 1 1474 0
 2722 0082 7B68     		ldr	r3, [r7, #4]
 2723 0084 2022     		movs	r2, #32
 2724 0086 83F83920 		strb	r2, [r3, #57]
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
ARM GAS  /tmp/cc9wfwek.s 			page 74


1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 2725              		.loc 1 1477 0
 2726 008a 7868     		ldr	r0, [r7, #4]
 2727 008c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2728              	.L122:
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2729              		.loc 1 1480 0
 2730 0090 0023     		movs	r3, #0
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2731              		.loc 1 1481 0
 2732 0092 1846     		mov	r0, r3
 2733 0094 0837     		adds	r7, r7, #8
 2734              	.LCFI109:
 2735              		.cfi_def_cfa_offset 8
 2736 0096 BD46     		mov	sp, r7
 2737              	.LCFI110:
 2738              		.cfi_def_cfa_register 13
 2739              		@ sp needed
 2740 0098 80BD     		pop	{r7, pc}
 2741              	.L125:
 2742 009a 00BF     		.align	2
 2743              	.L124:
 2744 009c 00000000 		.word	UART_DMATxOnlyAbortCallback
 2745              		.cfi_endproc
 2746              	.LFE83:
 2748              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2749              		.align	2
 2750              		.global	HAL_UART_AbortReceive_IT
 2751              		.thumb
 2752              		.thumb_func
 2754              	HAL_UART_AbortReceive_IT:
 2755              	.LFB84:
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         This procedure performs following operations :
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable PPP Interrupts
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - Set handle State to READY
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** */
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2756              		.loc 1 1498 0
 2757              		.cfi_startproc
 2758              		@ args = 0, pretend = 0, frame = 8
 2759              		@ frame_needed = 1, uses_anonymous_args = 0
 2760 0000 80B5     		push	{r7, lr}
 2761              	.LCFI111:
ARM GAS  /tmp/cc9wfwek.s 			page 75


 2762              		.cfi_def_cfa_offset 8
 2763              		.cfi_offset 7, -8
 2764              		.cfi_offset 14, -4
 2765 0002 82B0     		sub	sp, sp, #8
 2766              	.LCFI112:
 2767              		.cfi_def_cfa_offset 16
 2768 0004 00AF     		add	r7, sp, #0
 2769              	.LCFI113:
 2770              		.cfi_def_cfa_register 7
 2771 0006 7860     		str	r0, [r7, #4]
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2772              		.loc 1 1500 0
 2773 0008 7B68     		ldr	r3, [r7, #4]
 2774 000a 1B68     		ldr	r3, [r3]
 2775 000c 7A68     		ldr	r2, [r7, #4]
 2776 000e 1268     		ldr	r2, [r2]
 2777 0010 D268     		ldr	r2, [r2, #12]
 2778 0012 22F49072 		bic	r2, r2, #288
 2779 0016 DA60     		str	r2, [r3, #12]
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2780              		.loc 1 1501 0
 2781 0018 7B68     		ldr	r3, [r7, #4]
 2782 001a 1B68     		ldr	r3, [r3]
 2783 001c 7A68     		ldr	r2, [r7, #4]
 2784 001e 1268     		ldr	r2, [r2]
 2785 0020 5269     		ldr	r2, [r2, #20]
 2786 0022 22F00102 		bic	r2, r2, #1
 2787 0026 5A61     		str	r2, [r3, #20]
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2788              		.loc 1 1504 0
 2789 0028 7B68     		ldr	r3, [r7, #4]
 2790 002a 1B68     		ldr	r3, [r3]
 2791 002c 5B69     		ldr	r3, [r3, #20]
 2792 002e 03F04003 		and	r3, r3, #64
 2793 0032 002B     		cmp	r3, #0
 2794 0034 2AD0     		beq	.L127
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2795              		.loc 1 1506 0
 2796 0036 7B68     		ldr	r3, [r7, #4]
 2797 0038 1B68     		ldr	r3, [r3]
 2798 003a 7A68     		ldr	r2, [r7, #4]
 2799 003c 1268     		ldr	r2, [r2]
 2800 003e 5269     		ldr	r2, [r2, #20]
 2801 0040 22F04002 		bic	r2, r2, #64
 2802 0044 5A61     		str	r2, [r3, #20]
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2803              		.loc 1 1509 0
 2804 0046 7B68     		ldr	r3, [r7, #4]
 2805 0048 5B6B     		ldr	r3, [r3, #52]
 2806 004a 002B     		cmp	r3, #0
 2807 004c 13D0     		beq	.L128
ARM GAS  /tmp/cc9wfwek.s 			page 76


1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 2808              		.loc 1 1513 0
 2809 004e 7B68     		ldr	r3, [r7, #4]
 2810 0050 5B6B     		ldr	r3, [r3, #52]
 2811 0052 164A     		ldr	r2, .L133
 2812 0054 5A63     		str	r2, [r3, #52]
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Abort DMA RX */
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2813              		.loc 1 1516 0
 2814 0056 7B68     		ldr	r3, [r7, #4]
 2815 0058 5B6B     		ldr	r3, [r3, #52]
 2816 005a 1846     		mov	r0, r3
 2817 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2818 0060 0346     		mov	r3, r0
 2819 0062 002B     		cmp	r3, #0
 2820 0064 1CD0     		beq	.L131
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2821              		.loc 1 1519 0
 2822 0066 7B68     		ldr	r3, [r7, #4]
 2823 0068 5B6B     		ldr	r3, [r3, #52]
 2824 006a 5B6B     		ldr	r3, [r3, #52]
 2825 006c 7A68     		ldr	r2, [r7, #4]
 2826 006e 526B     		ldr	r2, [r2, #52]
 2827 0070 1046     		mov	r0, r2
 2828 0072 9847     		blx	r3
 2829 0074 14E0     		b	.L131
 2830              	.L128:
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Reset Rx transfer counter */
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 2831              		.loc 1 1525 0
 2832 0076 7B68     		ldr	r3, [r7, #4]
 2833 0078 0022     		movs	r2, #0
 2834 007a DA85     		strh	r2, [r3, #46]	@ movhi
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 2835              		.loc 1 1528 0
 2836 007c 7B68     		ldr	r3, [r7, #4]
 2837 007e 2022     		movs	r2, #32
 2838 0080 83F83A20 		strb	r2, [r3, #58]
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 2839              		.loc 1 1531 0
 2840 0084 7868     		ldr	r0, [r7, #4]
 2841 0086 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2842 008a 09E0     		b	.L131
ARM GAS  /tmp/cc9wfwek.s 			page 77


 2843              	.L127:
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Reset Rx transfer counter */
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 2844              		.loc 1 1537 0
 2845 008c 7B68     		ldr	r3, [r7, #4]
 2846 008e 0022     		movs	r2, #0
 2847 0090 DA85     		strh	r2, [r3, #46]	@ movhi
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2848              		.loc 1 1540 0
 2849 0092 7B68     		ldr	r3, [r7, #4]
 2850 0094 2022     		movs	r2, #32
 2851 0096 83F83A20 		strb	r2, [r3, #58]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 2852              		.loc 1 1543 0
 2853 009a 7868     		ldr	r0, [r7, #4]
 2854 009c FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2855              	.L131:
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 2856              		.loc 1 1546 0
 2857 00a0 0023     		movs	r3, #0
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 2858              		.loc 1 1547 0
 2859 00a2 1846     		mov	r0, r3
 2860 00a4 0837     		adds	r7, r7, #8
 2861              	.LCFI114:
 2862              		.cfi_def_cfa_offset 8
 2863 00a6 BD46     		mov	sp, r7
 2864              	.LCFI115:
 2865              		.cfi_def_cfa_register 13
 2866              		@ sp needed
 2867 00a8 80BD     		pop	{r7, pc}
 2868              	.L134:
 2869 00aa 00BF     		.align	2
 2870              	.L133:
 2871 00ac 00000000 		.word	UART_DMARxOnlyAbortCallback
 2872              		.cfi_endproc
 2873              	.LFE84:
 2875              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2876              		.align	2
 2877              		.global	HAL_UART_IRQHandler
 2878              		.thumb
 2879              		.thumb_func
 2881              	HAL_UART_IRQHandler:
 2882              	.LFB85:
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
ARM GAS  /tmp/cc9wfwek.s 			page 78


1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 2883              		.loc 1 1556 0
 2884              		.cfi_startproc
 2885              		@ args = 0, pretend = 0, frame = 32
 2886              		@ frame_needed = 1, uses_anonymous_args = 0
 2887 0000 80B5     		push	{r7, lr}
 2888              	.LCFI116:
 2889              		.cfi_def_cfa_offset 8
 2890              		.cfi_offset 7, -8
 2891              		.cfi_offset 14, -4
 2892 0002 88B0     		sub	sp, sp, #32
 2893              	.LCFI117:
 2894              		.cfi_def_cfa_offset 40
 2895 0004 00AF     		add	r7, sp, #0
 2896              	.LCFI118:
 2897              		.cfi_def_cfa_register 7
 2898 0006 7860     		str	r0, [r7, #4]
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 2899              		.loc 1 1557 0
 2900 0008 7B68     		ldr	r3, [r7, #4]
 2901 000a 1B68     		ldr	r3, [r3]
 2902 000c 1B68     		ldr	r3, [r3]
 2903 000e FB61     		str	r3, [r7, #28]
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2904              		.loc 1 1558 0
 2905 0010 7B68     		ldr	r3, [r7, #4]
 2906 0012 1B68     		ldr	r3, [r3]
 2907 0014 DB68     		ldr	r3, [r3, #12]
 2908 0016 BB61     		str	r3, [r7, #24]
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2909              		.loc 1 1559 0
 2910 0018 7B68     		ldr	r3, [r7, #4]
 2911 001a 1B68     		ldr	r3, [r3]
 2912 001c 5B69     		ldr	r3, [r3, #20]
 2913 001e 7B61     		str	r3, [r7, #20]
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 2914              		.loc 1 1560 0
 2915 0020 0023     		movs	r3, #0
 2916 0022 3B61     		str	r3, [r7, #16]
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 2917              		.loc 1 1561 0
 2918 0024 0023     		movs	r3, #0
 2919 0026 FB60     		str	r3, [r7, #12]
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If no error occurs */
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 2920              		.loc 1 1564 0
 2921 0028 FB69     		ldr	r3, [r7, #28]
 2922 002a 03F00F03 		and	r3, r3, #15
 2923 002e 3B61     		str	r3, [r7, #16]
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(errorflags == RESET)
 2924              		.loc 1 1565 0
ARM GAS  /tmp/cc9wfwek.s 			page 79


 2925 0030 3B69     		ldr	r3, [r7, #16]
 2926 0032 002B     		cmp	r3, #0
 2927 0034 0DD1     		bne	.L136
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 2928              		.loc 1 1568 0
 2929 0036 FB69     		ldr	r3, [r7, #28]
 2930 0038 03F02003 		and	r3, r3, #32
 2931 003c 002B     		cmp	r3, #0
 2932 003e 08D0     		beq	.L136
 2933              		.loc 1 1568 0 is_stmt 0 discriminator 1
 2934 0040 BB69     		ldr	r3, [r7, #24]
 2935 0042 03F02003 		and	r3, r3, #32
 2936 0046 002B     		cmp	r3, #0
 2937 0048 03D0     		beq	.L136
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       UART_Receive_IT(huart);
 2938              		.loc 1 1570 0 is_stmt 1
 2939 004a 7868     		ldr	r0, [r7, #4]
 2940 004c FFF7FEFF 		bl	UART_Receive_IT
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 2941              		.loc 1 1571 0
 2942 0050 CAE0     		b	.L135
 2943              	.L136:
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* If some errors occur */
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
 2944              		.loc 1 1576 0
 2945 0052 3B69     		ldr	r3, [r7, #16]
 2946 0054 002B     		cmp	r3, #0
 2947 0056 00F0AB80 		beq	.L138
 2948              		.loc 1 1576 0 is_stmt 0 discriminator 1
 2949 005a 7B69     		ldr	r3, [r7, #20]
 2950 005c 03F00103 		and	r3, r3, #1
 2951 0060 002B     		cmp	r3, #0
 2952 0062 05D1     		bne	.L139
 2953              		.loc 1 1576 0 discriminator 2
 2954 0064 BB69     		ldr	r3, [r7, #24]
 2955 0066 03F49073 		and	r3, r3, #288
 2956 006a 002B     		cmp	r3, #0
 2957 006c 00F0A080 		beq	.L138
 2958              	.L139:
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 2959              		.loc 1 1579 0 is_stmt 1
 2960 0070 FB69     		ldr	r3, [r7, #28]
 2961 0072 03F00103 		and	r3, r3, #1
 2962 0076 002B     		cmp	r3, #0
 2963 0078 0AD0     		beq	.L140
 2964              		.loc 1 1579 0 is_stmt 0 discriminator 1
 2965 007a BB69     		ldr	r3, [r7, #24]
 2966 007c 03F48073 		and	r3, r3, #256
 2967 0080 002B     		cmp	r3, #0
ARM GAS  /tmp/cc9wfwek.s 			page 80


 2968 0082 05D0     		beq	.L140
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 2969              		.loc 1 1581 0 is_stmt 1
 2970 0084 7B68     		ldr	r3, [r7, #4]
 2971 0086 DB6B     		ldr	r3, [r3, #60]
 2972 0088 43F00102 		orr	r2, r3, #1
 2973 008c 7B68     		ldr	r3, [r7, #4]
 2974 008e DA63     		str	r2, [r3, #60]
 2975              	.L140:
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2976              		.loc 1 1585 0
 2977 0090 FB69     		ldr	r3, [r7, #28]
 2978 0092 03F00403 		and	r3, r3, #4
 2979 0096 002B     		cmp	r3, #0
 2980 0098 0AD0     		beq	.L141
 2981              		.loc 1 1585 0 is_stmt 0 discriminator 1
 2982 009a 7B69     		ldr	r3, [r7, #20]
 2983 009c 03F00103 		and	r3, r3, #1
 2984 00a0 002B     		cmp	r3, #0
 2985 00a2 05D0     		beq	.L141
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 2986              		.loc 1 1587 0 is_stmt 1
 2987 00a4 7B68     		ldr	r3, [r7, #4]
 2988 00a6 DB6B     		ldr	r3, [r3, #60]
 2989 00a8 43F00202 		orr	r2, r3, #2
 2990 00ac 7B68     		ldr	r3, [r7, #4]
 2991 00ae DA63     		str	r2, [r3, #60]
 2992              	.L141:
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 2993              		.loc 1 1591 0
 2994 00b0 FB69     		ldr	r3, [r7, #28]
 2995 00b2 03F00203 		and	r3, r3, #2
 2996 00b6 002B     		cmp	r3, #0
 2997 00b8 0AD0     		beq	.L142
 2998              		.loc 1 1591 0 is_stmt 0 discriminator 1
 2999 00ba 7B69     		ldr	r3, [r7, #20]
 3000 00bc 03F00103 		and	r3, r3, #1
 3001 00c0 002B     		cmp	r3, #0
 3002 00c2 05D0     		beq	.L142
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3003              		.loc 1 1593 0 is_stmt 1
 3004 00c4 7B68     		ldr	r3, [r7, #4]
 3005 00c6 DB6B     		ldr	r3, [r3, #60]
 3006 00c8 43F00402 		orr	r2, r3, #4
 3007 00cc 7B68     		ldr	r3, [r7, #4]
 3008 00ce DA63     		str	r2, [r3, #60]
 3009              	.L142:
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
ARM GAS  /tmp/cc9wfwek.s 			page 81


1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3010              		.loc 1 1597 0
 3011 00d0 FB69     		ldr	r3, [r7, #28]
 3012 00d2 03F00803 		and	r3, r3, #8
 3013 00d6 002B     		cmp	r3, #0
 3014 00d8 0AD0     		beq	.L143
 3015              		.loc 1 1597 0 is_stmt 0 discriminator 1
 3016 00da 7B69     		ldr	r3, [r7, #20]
 3017 00dc 03F00103 		and	r3, r3, #1
 3018 00e0 002B     		cmp	r3, #0
 3019 00e2 05D0     		beq	.L143
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     { 
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3020              		.loc 1 1599 0 is_stmt 1
 3021 00e4 7B68     		ldr	r3, [r7, #4]
 3022 00e6 DB6B     		ldr	r3, [r3, #60]
 3023 00e8 43F00802 		orr	r2, r3, #8
 3024 00ec 7B68     		ldr	r3, [r7, #4]
 3025 00ee DA63     		str	r2, [r3, #60]
 3026              	.L143:
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 3027              		.loc 1 1603 0
 3028 00f0 7B68     		ldr	r3, [r7, #4]
 3029 00f2 DB6B     		ldr	r3, [r3, #60]
 3030 00f4 002B     		cmp	r3, #0
 3031 00f6 5AD0     		beq	.L144
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3032              		.loc 1 1606 0
 3033 00f8 FB69     		ldr	r3, [r7, #28]
 3034 00fa 03F02003 		and	r3, r3, #32
 3035 00fe 002B     		cmp	r3, #0
 3036 0100 07D0     		beq	.L145
 3037              		.loc 1 1606 0 is_stmt 0 discriminator 1
 3038 0102 BB69     		ldr	r3, [r7, #24]
 3039 0104 03F02003 		and	r3, r3, #32
 3040 0108 002B     		cmp	r3, #0
 3041 010a 02D0     		beq	.L145
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_Receive_IT(huart);
 3042              		.loc 1 1608 0 is_stmt 1
 3043 010c 7868     		ldr	r0, [r7, #4]
 3044 010e FFF7FEFF 		bl	UART_Receive_IT
 3045              	.L145:
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****          consider error as blocking */
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 3046              		.loc 1 1613 0
 3047 0112 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 82


 3048 0114 1B68     		ldr	r3, [r3]
 3049 0116 5B69     		ldr	r3, [r3, #20]
 3050 0118 03F04003 		and	r3, r3, #64
 3051 011c 002B     		cmp	r3, #0
 3052 011e 14BF     		ite	ne
 3053 0120 0123     		movne	r3, #1
 3054 0122 0023     		moveq	r3, #0
 3055 0124 DBB2     		uxtb	r3, r3
 3056 0126 FB60     		str	r3, [r7, #12]
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3057              		.loc 1 1614 0
 3058 0128 7B68     		ldr	r3, [r7, #4]
 3059 012a DB6B     		ldr	r3, [r3, #60]
 3060 012c 03F00803 		and	r3, r3, #8
 3061 0130 002B     		cmp	r3, #0
 3062 0132 02D1     		bne	.L146
 3063              		.loc 1 1614 0 is_stmt 0 discriminator 1
 3064 0134 FB68     		ldr	r3, [r7, #12]
 3065 0136 002B     		cmp	r3, #0
 3066 0138 32D0     		beq	.L147
 3067              	.L146:
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3068              		.loc 1 1619 0 is_stmt 1
 3069 013a 7868     		ldr	r0, [r7, #4]
 3070 013c FFF7FEFF 		bl	UART_EndRxTransfer
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3071              		.loc 1 1622 0
 3072 0140 7B68     		ldr	r3, [r7, #4]
 3073 0142 1B68     		ldr	r3, [r3]
 3074 0144 5B69     		ldr	r3, [r3, #20]
 3075 0146 03F04003 		and	r3, r3, #64
 3076 014a 002B     		cmp	r3, #0
 3077 014c 23D0     		beq	.L148
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3078              		.loc 1 1624 0
 3079 014e 7B68     		ldr	r3, [r7, #4]
 3080 0150 1B68     		ldr	r3, [r3]
 3081 0152 7A68     		ldr	r2, [r7, #4]
 3082 0154 1268     		ldr	r2, [r2]
 3083 0156 5269     		ldr	r2, [r2, #20]
 3084 0158 22F04002 		bic	r2, r2, #64
 3085 015c 5A61     		str	r2, [r3, #20]
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 3086              		.loc 1 1627 0
 3087 015e 7B68     		ldr	r3, [r7, #4]
 3088 0160 5B6B     		ldr	r3, [r3, #52]
 3089 0162 002B     		cmp	r3, #0
 3090 0164 13D0     		beq	.L149
ARM GAS  /tmp/cc9wfwek.s 			page 83


1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3091              		.loc 1 1631 0
 3092 0166 7B68     		ldr	r3, [r7, #4]
 3093 0168 5B6B     		ldr	r3, [r3, #52]
 3094 016a 214A     		ldr	r2, .L154
 3095 016c 5A63     		str	r2, [r3, #52]
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3096              		.loc 1 1632 0
 3097 016e 7B68     		ldr	r3, [r7, #4]
 3098 0170 5B6B     		ldr	r3, [r3, #52]
 3099 0172 1846     		mov	r0, r3
 3100 0174 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3101 0178 0346     		mov	r3, r0
 3102 017a 002B     		cmp	r3, #0
 3103 017c 0FD0     		beq	.L152
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             {
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3104              		.loc 1 1635 0
 3105 017e 7B68     		ldr	r3, [r7, #4]
 3106 0180 5B6B     		ldr	r3, [r3, #52]
 3107 0182 5B6B     		ldr	r3, [r3, #52]
 3108 0184 7A68     		ldr	r2, [r7, #4]
 3109 0186 526B     		ldr	r2, [r2, #52]
 3110 0188 1046     		mov	r0, r2
 3111 018a 9847     		blx	r3
 3112 018c 07E0     		b	.L152
 3113              	.L149:
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             }
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           else
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           {
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             /* Call user error callback */
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3114              		.loc 1 1641 0
 3115 018e 7868     		ldr	r0, [r7, #4]
 3116 0190 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3117              		.loc 1 1622 0
 3118 0194 0BE0     		b	.L144
 3119              	.L148:
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           }
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         else
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           /* Call user error callback */
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3120              		.loc 1 1647 0
 3121 0196 7868     		ldr	r0, [r7, #4]
 3122 0198 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3123              		.loc 1 1622 0
 3124 019c 07E0     		b	.L144
 3125              	.L152:
ARM GAS  /tmp/cc9wfwek.s 			page 84


1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         {
 3126              		.loc 1 1622 0 is_stmt 0 discriminator 2
 3127 019e 06E0     		b	.L144
 3128              	.L147:
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         }
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            Error is notified to user through user error callback */
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3129              		.loc 1 1654 0 is_stmt 1
 3130 01a0 7868     		ldr	r0, [r7, #4]
 3131 01a2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3132              		.loc 1 1655 0
 3133 01a6 7B68     		ldr	r3, [r7, #4]
 3134 01a8 0022     		movs	r2, #0
 3135 01aa DA63     		str	r2, [r3, #60]
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 3136              		.loc 1 1658 0
 3137 01ac 1CE0     		b	.L135
 3138              	.L144:
 3139              		.loc 1 1658 0 is_stmt 0 discriminator 3
 3140 01ae 1BE0     		b	.L135
 3141              	.L138:
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   } /* End if some error occurs */
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3142              		.loc 1 1662 0 is_stmt 1
 3143 01b0 FB69     		ldr	r3, [r7, #28]
 3144 01b2 03F08003 		and	r3, r3, #128
 3145 01b6 002B     		cmp	r3, #0
 3146 01b8 08D0     		beq	.L153
 3147              		.loc 1 1662 0 is_stmt 0 discriminator 1
 3148 01ba BB69     		ldr	r3, [r7, #24]
 3149 01bc 03F08003 		and	r3, r3, #128
 3150 01c0 002B     		cmp	r3, #0
 3151 01c2 03D0     		beq	.L153
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3152              		.loc 1 1664 0 is_stmt 1
 3153 01c4 7868     		ldr	r0, [r7, #4]
 3154 01c6 FFF7FEFF 		bl	UART_Transmit_IT
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 3155              		.loc 1 1665 0
 3156 01ca 0DE0     		b	.L135
 3157              	.L153:
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3158              		.loc 1 1669 0
 3159 01cc FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/cc9wfwek.s 			page 85


 3160 01ce 03F04003 		and	r3, r3, #64
 3161 01d2 002B     		cmp	r3, #0
 3162 01d4 08D0     		beq	.L135
 3163              		.loc 1 1669 0 is_stmt 0 discriminator 1
 3164 01d6 BB69     		ldr	r3, [r7, #24]
 3165 01d8 03F04003 		and	r3, r3, #64
 3166 01dc 002B     		cmp	r3, #0
 3167 01de 03D0     		beq	.L135
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3168              		.loc 1 1671 0 is_stmt 1
 3169 01e0 7868     		ldr	r0, [r7, #4]
 3170 01e2 FFF7FEFF 		bl	UART_EndTransmit_IT
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return;
 3171              		.loc 1 1672 0
 3172 01e6 00BF     		nop
 3173              	.L135:
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3174              		.loc 1 1674 0
 3175 01e8 2037     		adds	r7, r7, #32
 3176              	.LCFI119:
 3177              		.cfi_def_cfa_offset 8
 3178 01ea BD46     		mov	sp, r7
 3179              	.LCFI120:
 3180              		.cfi_def_cfa_register 13
 3181              		@ sp needed
 3182 01ec 80BD     		pop	{r7, pc}
 3183              	.L155:
 3184 01ee 00BF     		.align	2
 3185              	.L154:
 3186 01f0 00000000 		.word	UART_DMAAbortOnError
 3187              		.cfi_endproc
 3188              	.LFE85:
 3190              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3191              		.align	2
 3192              		.weak	HAL_UART_TxCpltCallback
 3193              		.thumb
 3194              		.thumb_func
 3196              	HAL_UART_TxCpltCallback:
 3197              	.LFB86:
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3198              		.loc 1 1683 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 8
 3201              		@ frame_needed = 1, uses_anonymous_args = 0
 3202              		@ link register save eliminated.
 3203 0000 80B4     		push	{r7}
 3204              	.LCFI121:
ARM GAS  /tmp/cc9wfwek.s 			page 86


 3205              		.cfi_def_cfa_offset 4
 3206              		.cfi_offset 7, -4
 3207 0002 83B0     		sub	sp, sp, #12
 3208              	.LCFI122:
 3209              		.cfi_def_cfa_offset 16
 3210 0004 00AF     		add	r7, sp, #0
 3211              	.LCFI123:
 3212              		.cfi_def_cfa_register 7
 3213 0006 7860     		str	r0, [r7, #4]
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3214              		.loc 1 1689 0
 3215 0008 0C37     		adds	r7, r7, #12
 3216              	.LCFI124:
 3217              		.cfi_def_cfa_offset 4
 3218 000a BD46     		mov	sp, r7
 3219              	.LCFI125:
 3220              		.cfi_def_cfa_register 13
 3221              		@ sp needed
 3222 000c 5DF8047B 		ldr	r7, [sp], #4
 3223              	.LCFI126:
 3224              		.cfi_restore 7
 3225              		.cfi_def_cfa_offset 0
 3226 0010 7047     		bx	lr
 3227              		.cfi_endproc
 3228              	.LFE86:
 3230 0012 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3231              		.align	2
 3232              		.weak	HAL_UART_TxHalfCpltCallback
 3233              		.thumb
 3234              		.thumb_func
 3236              	HAL_UART_TxHalfCpltCallback:
 3237              	.LFB87:
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3238              		.loc 1 1698 0
 3239              		.cfi_startproc
 3240              		@ args = 0, pretend = 0, frame = 8
 3241              		@ frame_needed = 1, uses_anonymous_args = 0
 3242              		@ link register save eliminated.
 3243 0000 80B4     		push	{r7}
 3244              	.LCFI127:
 3245              		.cfi_def_cfa_offset 4
 3246              		.cfi_offset 7, -4
 3247 0002 83B0     		sub	sp, sp, #12
 3248              	.LCFI128:
ARM GAS  /tmp/cc9wfwek.s 			page 87


 3249              		.cfi_def_cfa_offset 16
 3250 0004 00AF     		add	r7, sp, #0
 3251              	.LCFI129:
 3252              		.cfi_def_cfa_register 7
 3253 0006 7860     		str	r0, [r7, #4]
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3254              		.loc 1 1704 0
 3255 0008 0C37     		adds	r7, r7, #12
 3256              	.LCFI130:
 3257              		.cfi_def_cfa_offset 4
 3258 000a BD46     		mov	sp, r7
 3259              	.LCFI131:
 3260              		.cfi_def_cfa_register 13
 3261              		@ sp needed
 3262 000c 5DF8047B 		ldr	r7, [sp], #4
 3263              	.LCFI132:
 3264              		.cfi_restore 7
 3265              		.cfi_def_cfa_offset 0
 3266 0010 7047     		bx	lr
 3267              		.cfi_endproc
 3268              	.LFE87:
 3270 0012 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3271              		.align	2
 3272              		.weak	HAL_UART_RxCpltCallback
 3273              		.thumb
 3274              		.thumb_func
 3276              	HAL_UART_RxCpltCallback:
 3277              	.LFB88:
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3278              		.loc 1 1713 0
 3279              		.cfi_startproc
 3280              		@ args = 0, pretend = 0, frame = 8
 3281              		@ frame_needed = 1, uses_anonymous_args = 0
 3282              		@ link register save eliminated.
 3283 0000 80B4     		push	{r7}
 3284              	.LCFI133:
 3285              		.cfi_def_cfa_offset 4
 3286              		.cfi_offset 7, -4
 3287 0002 83B0     		sub	sp, sp, #12
 3288              	.LCFI134:
 3289              		.cfi_def_cfa_offset 16
 3290 0004 00AF     		add	r7, sp, #0
 3291              	.LCFI135:
 3292              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc9wfwek.s 			page 88


 3293 0006 7860     		str	r0, [r7, #4]
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3294              		.loc 1 1719 0
 3295 0008 0C37     		adds	r7, r7, #12
 3296              	.LCFI136:
 3297              		.cfi_def_cfa_offset 4
 3298 000a BD46     		mov	sp, r7
 3299              	.LCFI137:
 3300              		.cfi_def_cfa_register 13
 3301              		@ sp needed
 3302 000c 5DF8047B 		ldr	r7, [sp], #4
 3303              	.LCFI138:
 3304              		.cfi_restore 7
 3305              		.cfi_def_cfa_offset 0
 3306 0010 7047     		bx	lr
 3307              		.cfi_endproc
 3308              	.LFE88:
 3310 0012 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3311              		.align	2
 3312              		.weak	HAL_UART_RxHalfCpltCallback
 3313              		.thumb
 3314              		.thumb_func
 3316              	HAL_UART_RxHalfCpltCallback:
 3317              	.LFB89:
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3318              		.loc 1 1728 0
 3319              		.cfi_startproc
 3320              		@ args = 0, pretend = 0, frame = 8
 3321              		@ frame_needed = 1, uses_anonymous_args = 0
 3322              		@ link register save eliminated.
 3323 0000 80B4     		push	{r7}
 3324              	.LCFI139:
 3325              		.cfi_def_cfa_offset 4
 3326              		.cfi_offset 7, -4
 3327 0002 83B0     		sub	sp, sp, #12
 3328              	.LCFI140:
 3329              		.cfi_def_cfa_offset 16
 3330 0004 00AF     		add	r7, sp, #0
 3331              	.LCFI141:
 3332              		.cfi_def_cfa_register 7
 3333 0006 7860     		str	r0, [r7, #4]
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
ARM GAS  /tmp/cc9wfwek.s 			page 89


1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3334              		.loc 1 1734 0
 3335 0008 0C37     		adds	r7, r7, #12
 3336              	.LCFI142:
 3337              		.cfi_def_cfa_offset 4
 3338 000a BD46     		mov	sp, r7
 3339              	.LCFI143:
 3340              		.cfi_def_cfa_register 13
 3341              		@ sp needed
 3342 000c 5DF8047B 		ldr	r7, [sp], #4
 3343              	.LCFI144:
 3344              		.cfi_restore 7
 3345              		.cfi_def_cfa_offset 0
 3346 0010 7047     		bx	lr
 3347              		.cfi_endproc
 3348              	.LFE89:
 3350 0012 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3351              		.align	2
 3352              		.weak	HAL_UART_ErrorCallback
 3353              		.thumb
 3354              		.thumb_func
 3356              	HAL_UART_ErrorCallback:
 3357              	.LFB90:
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART error callbacks.
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3358              		.loc 1 1743 0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 8
 3361              		@ frame_needed = 1, uses_anonymous_args = 0
 3362              		@ link register save eliminated.
 3363 0000 80B4     		push	{r7}
 3364              	.LCFI145:
 3365              		.cfi_def_cfa_offset 4
 3366              		.cfi_offset 7, -4
 3367 0002 83B0     		sub	sp, sp, #12
 3368              	.LCFI146:
 3369              		.cfi_def_cfa_offset 16
 3370 0004 00AF     		add	r7, sp, #0
 3371              	.LCFI147:
 3372              		.cfi_def_cfa_register 7
 3373 0006 7860     		str	r0, [r7, #4]
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart); 
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */ 
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3374              		.loc 1 1749 0
ARM GAS  /tmp/cc9wfwek.s 			page 90


 3375 0008 0C37     		adds	r7, r7, #12
 3376              	.LCFI148:
 3377              		.cfi_def_cfa_offset 4
 3378 000a BD46     		mov	sp, r7
 3379              	.LCFI149:
 3380              		.cfi_def_cfa_register 13
 3381              		@ sp needed
 3382 000c 5DF8047B 		ldr	r7, [sp], #4
 3383              	.LCFI150:
 3384              		.cfi_restore 7
 3385              		.cfi_def_cfa_offset 0
 3386 0010 7047     		bx	lr
 3387              		.cfi_endproc
 3388              	.LFE90:
 3390 0012 00BF     		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3391              		.align	2
 3392              		.weak	HAL_UART_AbortCpltCallback
 3393              		.thumb
 3394              		.thumb_func
 3396              	HAL_UART_AbortCpltCallback:
 3397              	.LFB91:
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3398              		.loc 1 1757 0
 3399              		.cfi_startproc
 3400              		@ args = 0, pretend = 0, frame = 8
 3401              		@ frame_needed = 1, uses_anonymous_args = 0
 3402              		@ link register save eliminated.
 3403 0000 80B4     		push	{r7}
 3404              	.LCFI151:
 3405              		.cfi_def_cfa_offset 4
 3406              		.cfi_offset 7, -4
 3407 0002 83B0     		sub	sp, sp, #12
 3408              	.LCFI152:
 3409              		.cfi_def_cfa_offset 16
 3410 0004 00AF     		add	r7, sp, #0
 3411              	.LCFI153:
 3412              		.cfi_def_cfa_register 7
 3413 0006 7860     		str	r0, [r7, #4]
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3414              		.loc 1 1764 0
 3415 0008 0C37     		adds	r7, r7, #12
 3416              	.LCFI154:
 3417              		.cfi_def_cfa_offset 4
 3418 000a BD46     		mov	sp, r7
ARM GAS  /tmp/cc9wfwek.s 			page 91


 3419              	.LCFI155:
 3420              		.cfi_def_cfa_register 13
 3421              		@ sp needed
 3422 000c 5DF8047B 		ldr	r7, [sp], #4
 3423              	.LCFI156:
 3424              		.cfi_restore 7
 3425              		.cfi_def_cfa_offset 0
 3426 0010 7047     		bx	lr
 3427              		.cfi_endproc
 3428              	.LFE91:
 3430 0012 00BF     		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3431              		.align	2
 3432              		.weak	HAL_UART_AbortTransmitCpltCallback
 3433              		.thumb
 3434              		.thumb_func
 3436              	HAL_UART_AbortTransmitCpltCallback:
 3437              	.LFB92:
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3438              		.loc 1 1771 0
 3439              		.cfi_startproc
 3440              		@ args = 0, pretend = 0, frame = 8
 3441              		@ frame_needed = 1, uses_anonymous_args = 0
 3442              		@ link register save eliminated.
 3443 0000 80B4     		push	{r7}
 3444              	.LCFI157:
 3445              		.cfi_def_cfa_offset 4
 3446              		.cfi_offset 7, -4
 3447 0002 83B0     		sub	sp, sp, #12
 3448              	.LCFI158:
 3449              		.cfi_def_cfa_offset 16
 3450 0004 00AF     		add	r7, sp, #0
 3451              	.LCFI159:
 3452              		.cfi_def_cfa_register 7
 3453 0006 7860     		str	r0, [r7, #4]
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3454              		.loc 1 1778 0
 3455 0008 0C37     		adds	r7, r7, #12
 3456              	.LCFI160:
 3457              		.cfi_def_cfa_offset 4
 3458 000a BD46     		mov	sp, r7
 3459              	.LCFI161:
 3460              		.cfi_def_cfa_register 13
 3461              		@ sp needed
 3462 000c 5DF8047B 		ldr	r7, [sp], #4
 3463              	.LCFI162:
ARM GAS  /tmp/cc9wfwek.s 			page 92


 3464              		.cfi_restore 7
 3465              		.cfi_def_cfa_offset 0
 3466 0010 7047     		bx	lr
 3467              		.cfi_endproc
 3468              	.LFE92:
 3470 0012 00BF     		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3471              		.align	2
 3472              		.weak	HAL_UART_AbortReceiveCpltCallback
 3473              		.thumb
 3474              		.thumb_func
 3476              	HAL_UART_AbortReceiveCpltCallback:
 3477              	.LFB93:
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart UART handle.
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3478              		.loc 1 1786 0
 3479              		.cfi_startproc
 3480              		@ args = 0, pretend = 0, frame = 8
 3481              		@ frame_needed = 1, uses_anonymous_args = 0
 3482              		@ link register save eliminated.
 3483 0000 80B4     		push	{r7}
 3484              	.LCFI163:
 3485              		.cfi_def_cfa_offset 4
 3486              		.cfi_offset 7, -4
 3487 0002 83B0     		sub	sp, sp, #12
 3488              	.LCFI164:
 3489              		.cfi_def_cfa_offset 16
 3490 0004 00AF     		add	r7, sp, #0
 3491              	.LCFI165:
 3492              		.cfi_def_cfa_register 7
 3493 0006 7860     		str	r0, [r7, #4]
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UNUSED(huart);
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    */
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3494              		.loc 1 1793 0
 3495 0008 0C37     		adds	r7, r7, #12
 3496              	.LCFI166:
 3497              		.cfi_def_cfa_offset 4
 3498 000a BD46     		mov	sp, r7
 3499              	.LCFI167:
 3500              		.cfi_def_cfa_register 13
 3501              		@ sp needed
 3502 000c 5DF8047B 		ldr	r7, [sp], #4
 3503              	.LCFI168:
 3504              		.cfi_restore 7
 3505              		.cfi_def_cfa_offset 0
 3506 0010 7047     		bx	lr
 3507              		.cfi_endproc
ARM GAS  /tmp/cc9wfwek.s 			page 93


 3508              	.LFE93:
 3510 0012 00BF     		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3511              		.align	2
 3512              		.global	HAL_LIN_SendBreak
 3513              		.thumb
 3514              		.thumb_func
 3516              	HAL_LIN_SendBreak:
 3517              	.LFB94:
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART control functions 
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   [..]
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Transmits break characters.
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3518              		.loc 1 1825 0
 3519              		.cfi_startproc
 3520              		@ args = 0, pretend = 0, frame = 8
 3521              		@ frame_needed = 1, uses_anonymous_args = 0
 3522              		@ link register save eliminated.
 3523 0000 80B4     		push	{r7}
 3524              	.LCFI169:
 3525              		.cfi_def_cfa_offset 4
 3526              		.cfi_offset 7, -4
 3527 0002 83B0     		sub	sp, sp, #12
 3528              	.LCFI170:
 3529              		.cfi_def_cfa_offset 16
 3530 0004 00AF     		add	r7, sp, #0
 3531              	.LCFI171:
 3532              		.cfi_def_cfa_register 7
 3533 0006 7860     		str	r0, [r7, #4]
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  /tmp/cc9wfwek.s 			page 94


1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 3534              		.loc 1 1830 0
 3535 0008 7B68     		ldr	r3, [r7, #4]
 3536 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3537 000e 012B     		cmp	r3, #1
 3538 0010 01D1     		bne	.L165
 3539              		.loc 1 1830 0 is_stmt 0 discriminator 1
 3540 0012 0223     		movs	r3, #2
 3541 0014 18E0     		b	.L166
 3542              	.L165:
 3543              		.loc 1 1830 0 discriminator 2
 3544 0016 7B68     		ldr	r3, [r7, #4]
 3545 0018 0122     		movs	r2, #1
 3546 001a 83F83820 		strb	r2, [r3, #56]
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3547              		.loc 1 1832 0 is_stmt 1 discriminator 2
 3548 001e 7B68     		ldr	r3, [r7, #4]
 3549 0020 2422     		movs	r2, #36
 3550 0022 83F83920 		strb	r2, [r3, #57]
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Send break characters */
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 3551              		.loc 1 1835 0 discriminator 2
 3552 0026 7B68     		ldr	r3, [r7, #4]
 3553 0028 1B68     		ldr	r3, [r3]
 3554 002a 7A68     		ldr	r2, [r7, #4]
 3555 002c 1268     		ldr	r2, [r2]
 3556 002e D268     		ldr	r2, [r2, #12]
 3557 0030 42F00102 		orr	r2, r2, #1
 3558 0034 DA60     		str	r2, [r3, #12]
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3559              		.loc 1 1837 0 discriminator 2
 3560 0036 7B68     		ldr	r3, [r7, #4]
 3561 0038 2022     		movs	r2, #32
 3562 003a 83F83920 		strb	r2, [r3, #57]
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3563              		.loc 1 1840 0 discriminator 2
 3564 003e 7B68     		ldr	r3, [r7, #4]
 3565 0040 0022     		movs	r2, #0
 3566 0042 83F83820 		strb	r2, [r3, #56]
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 3567              		.loc 1 1842 0 discriminator 2
 3568 0046 0023     		movs	r3, #0
 3569              	.L166:
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3570              		.loc 1 1843 0
 3571 0048 1846     		mov	r0, r3
 3572 004a 0C37     		adds	r7, r7, #12
 3573              	.LCFI172:
ARM GAS  /tmp/cc9wfwek.s 			page 95


 3574              		.cfi_def_cfa_offset 4
 3575 004c BD46     		mov	sp, r7
 3576              	.LCFI173:
 3577              		.cfi_def_cfa_register 13
 3578              		@ sp needed
 3579 004e 5DF8047B 		ldr	r7, [sp], #4
 3580              	.LCFI174:
 3581              		.cfi_restore 7
 3582              		.cfi_def_cfa_offset 0
 3583 0052 7047     		bx	lr
 3584              		.cfi_endproc
 3585              	.LFE94:
 3587              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3588              		.align	2
 3589              		.global	HAL_MultiProcessor_EnterMuteMode
 3590              		.thumb
 3591              		.thumb_func
 3593              	HAL_MultiProcessor_EnterMuteMode:
 3594              	.LFB95:
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3595              		.loc 1 1852 0
 3596              		.cfi_startproc
 3597              		@ args = 0, pretend = 0, frame = 8
 3598              		@ frame_needed = 1, uses_anonymous_args = 0
 3599              		@ link register save eliminated.
 3600 0000 80B4     		push	{r7}
 3601              	.LCFI175:
 3602              		.cfi_def_cfa_offset 4
 3603              		.cfi_offset 7, -4
 3604 0002 83B0     		sub	sp, sp, #12
 3605              	.LCFI176:
 3606              		.cfi_def_cfa_offset 16
 3607 0004 00AF     		add	r7, sp, #0
 3608              	.LCFI177:
 3609              		.cfi_def_cfa_register 7
 3610 0006 7860     		str	r0, [r7, #4]
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 3611              		.loc 1 1857 0
 3612 0008 7B68     		ldr	r3, [r7, #4]
 3613 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3614 000e 012B     		cmp	r3, #1
 3615 0010 01D1     		bne	.L168
 3616              		.loc 1 1857 0 is_stmt 0 discriminator 1
 3617 0012 0223     		movs	r3, #2
 3618 0014 18E0     		b	.L169
ARM GAS  /tmp/cc9wfwek.s 			page 96


 3619              	.L168:
 3620              		.loc 1 1857 0 discriminator 2
 3621 0016 7B68     		ldr	r3, [r7, #4]
 3622 0018 0122     		movs	r2, #1
 3623 001a 83F83820 		strb	r2, [r3, #56]
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3624              		.loc 1 1859 0 is_stmt 1 discriminator 2
 3625 001e 7B68     		ldr	r3, [r7, #4]
 3626 0020 2422     		movs	r2, #36
 3627 0022 83F83920 		strb	r2, [r3, #57]
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3628              		.loc 1 1862 0 discriminator 2
 3629 0026 7B68     		ldr	r3, [r7, #4]
 3630 0028 1B68     		ldr	r3, [r3]
 3631 002a 7A68     		ldr	r2, [r7, #4]
 3632 002c 1268     		ldr	r2, [r2]
 3633 002e D268     		ldr	r2, [r2, #12]
 3634 0030 42F00202 		orr	r2, r2, #2
 3635 0034 DA60     		str	r2, [r3, #12]
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3636              		.loc 1 1864 0 discriminator 2
 3637 0036 7B68     		ldr	r3, [r7, #4]
 3638 0038 2022     		movs	r2, #32
 3639 003a 83F83920 		strb	r2, [r3, #57]
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3640              		.loc 1 1867 0 discriminator 2
 3641 003e 7B68     		ldr	r3, [r7, #4]
 3642 0040 0022     		movs	r2, #0
 3643 0042 83F83820 		strb	r2, [r3, #56]
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 3644              		.loc 1 1869 0 discriminator 2
 3645 0046 0023     		movs	r3, #0
 3646              	.L169:
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3647              		.loc 1 1870 0
 3648 0048 1846     		mov	r0, r3
 3649 004a 0C37     		adds	r7, r7, #12
 3650              	.LCFI178:
 3651              		.cfi_def_cfa_offset 4
 3652 004c BD46     		mov	sp, r7
 3653              	.LCFI179:
 3654              		.cfi_def_cfa_register 13
 3655              		@ sp needed
 3656 004e 5DF8047B 		ldr	r7, [sp], #4
 3657              	.LCFI180:
 3658              		.cfi_restore 7
 3659              		.cfi_def_cfa_offset 0
 3660 0052 7047     		bx	lr
 3661              		.cfi_endproc
 3662              	.LFE95:
ARM GAS  /tmp/cc9wfwek.s 			page 97


 3664              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 3665              		.align	2
 3666              		.global	HAL_MultiProcessor_ExitMuteMode
 3667              		.thumb
 3668              		.thumb_func
 3670              	HAL_MultiProcessor_ExitMuteMode:
 3671              	.LFB96:
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3672              		.loc 1 1879 0
 3673              		.cfi_startproc
 3674              		@ args = 0, pretend = 0, frame = 8
 3675              		@ frame_needed = 1, uses_anonymous_args = 0
 3676              		@ link register save eliminated.
 3677 0000 80B4     		push	{r7}
 3678              	.LCFI181:
 3679              		.cfi_def_cfa_offset 4
 3680              		.cfi_offset 7, -4
 3681 0002 83B0     		sub	sp, sp, #12
 3682              	.LCFI182:
 3683              		.cfi_def_cfa_offset 16
 3684 0004 00AF     		add	r7, sp, #0
 3685              	.LCFI183:
 3686              		.cfi_def_cfa_register 7
 3687 0006 7860     		str	r0, [r7, #4]
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 3688              		.loc 1 1884 0
 3689 0008 7B68     		ldr	r3, [r7, #4]
 3690 000a 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3691 000e 012B     		cmp	r3, #1
 3692 0010 01D1     		bne	.L171
 3693              		.loc 1 1884 0 is_stmt 0 discriminator 1
 3694 0012 0223     		movs	r3, #2
 3695 0014 18E0     		b	.L172
 3696              	.L171:
 3697              		.loc 1 1884 0 discriminator 2
 3698 0016 7B68     		ldr	r3, [r7, #4]
 3699 0018 0122     		movs	r2, #1
 3700 001a 83F83820 		strb	r2, [r3, #56]
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3701              		.loc 1 1886 0 is_stmt 1 discriminator 2
 3702 001e 7B68     		ldr	r3, [r7, #4]
 3703 0020 2422     		movs	r2, #36
 3704 0022 83F83920 		strb	r2, [r3, #57]
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
ARM GAS  /tmp/cc9wfwek.s 			page 98


1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 3705              		.loc 1 1889 0 discriminator 2
 3706 0026 7B68     		ldr	r3, [r7, #4]
 3707 0028 1B68     		ldr	r3, [r3]
 3708 002a 7A68     		ldr	r2, [r7, #4]
 3709 002c 1268     		ldr	r2, [r2]
 3710 002e D268     		ldr	r2, [r2, #12]
 3711 0030 22F00202 		bic	r2, r2, #2
 3712 0034 DA60     		str	r2, [r3, #12]
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3713              		.loc 1 1891 0 discriminator 2
 3714 0036 7B68     		ldr	r3, [r7, #4]
 3715 0038 2022     		movs	r2, #32
 3716 003a 83F83920 		strb	r2, [r3, #57]
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3717              		.loc 1 1894 0 discriminator 2
 3718 003e 7B68     		ldr	r3, [r7, #4]
 3719 0040 0022     		movs	r2, #0
 3720 0042 83F83820 		strb	r2, [r3, #56]
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 3721              		.loc 1 1896 0 discriminator 2
 3722 0046 0023     		movs	r3, #0
 3723              	.L172:
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3724              		.loc 1 1897 0
 3725 0048 1846     		mov	r0, r3
 3726 004a 0C37     		adds	r7, r7, #12
 3727              	.LCFI184:
 3728              		.cfi_def_cfa_offset 4
 3729 004c BD46     		mov	sp, r7
 3730              	.LCFI185:
 3731              		.cfi_def_cfa_register 13
 3732              		@ sp needed
 3733 004e 5DF8047B 		ldr	r7, [sp], #4
 3734              	.LCFI186:
 3735              		.cfi_restore 7
 3736              		.cfi_def_cfa_offset 0
 3737 0052 7047     		bx	lr
 3738              		.cfi_endproc
 3739              	.LFE96:
 3741              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3742              		.align	2
 3743              		.global	HAL_HalfDuplex_EnableTransmitter
 3744              		.thumb
 3745              		.thumb_func
 3747              	HAL_HalfDuplex_EnableTransmitter:
 3748              	.LFB97:
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
ARM GAS  /tmp/cc9wfwek.s 			page 99


1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3749              		.loc 1 1906 0
 3750              		.cfi_startproc
 3751              		@ args = 0, pretend = 0, frame = 16
 3752              		@ frame_needed = 1, uses_anonymous_args = 0
 3753              		@ link register save eliminated.
 3754 0000 80B4     		push	{r7}
 3755              	.LCFI187:
 3756              		.cfi_def_cfa_offset 4
 3757              		.cfi_offset 7, -4
 3758 0002 85B0     		sub	sp, sp, #20
 3759              	.LCFI188:
 3760              		.cfi_def_cfa_offset 24
 3761 0004 00AF     		add	r7, sp, #0
 3762              	.LCFI189:
 3763              		.cfi_def_cfa_register 7
 3764 0006 7860     		str	r0, [r7, #4]
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3765              		.loc 1 1907 0
 3766 0008 0023     		movs	r3, #0
 3767 000a FB60     		str	r3, [r7, #12]
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 3768              		.loc 1 1910 0
 3769 000c 7B68     		ldr	r3, [r7, #4]
 3770 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3771 0012 012B     		cmp	r3, #1
 3772 0014 01D1     		bne	.L174
 3773              		.loc 1 1910 0 is_stmt 0 discriminator 1
 3774 0016 0223     		movs	r3, #2
 3775 0018 20E0     		b	.L175
 3776              	.L174:
 3777              		.loc 1 1910 0 discriminator 2
 3778 001a 7B68     		ldr	r3, [r7, #4]
 3779 001c 0122     		movs	r2, #1
 3780 001e 83F83820 		strb	r2, [r3, #56]
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3781              		.loc 1 1912 0 is_stmt 1 discriminator 2
 3782 0022 7B68     		ldr	r3, [r7, #4]
 3783 0024 2422     		movs	r2, #36
 3784 0026 83F83920 		strb	r2, [r3, #57]
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 3785              		.loc 1 1915 0 discriminator 2
 3786 002a 7B68     		ldr	r3, [r7, #4]
 3787 002c 1B68     		ldr	r3, [r3]
 3788 002e DB68     		ldr	r3, [r3, #12]
 3789 0030 FB60     		str	r3, [r7, #12]
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
ARM GAS  /tmp/cc9wfwek.s 			page 100


 3790              		.loc 1 1918 0 discriminator 2
 3791 0032 FB68     		ldr	r3, [r7, #12]
 3792 0034 23F00C03 		bic	r3, r3, #12
 3793 0038 FB60     		str	r3, [r7, #12]
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 3794              		.loc 1 1921 0 discriminator 2
 3795 003a FB68     		ldr	r3, [r7, #12]
 3796 003c 43F00803 		orr	r3, r3, #8
 3797 0040 FB60     		str	r3, [r7, #12]
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 3798              		.loc 1 1924 0 discriminator 2
 3799 0042 7B68     		ldr	r3, [r7, #4]
 3800 0044 1B68     		ldr	r3, [r3]
 3801 0046 FA68     		ldr	r2, [r7, #12]
 3802 0048 DA60     		str	r2, [r3, #12]
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3803              		.loc 1 1926 0 discriminator 2
 3804 004a 7B68     		ldr	r3, [r7, #4]
 3805 004c 2022     		movs	r2, #32
 3806 004e 83F83920 		strb	r2, [r3, #57]
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3807              		.loc 1 1929 0 discriminator 2
 3808 0052 7B68     		ldr	r3, [r7, #4]
 3809 0054 0022     		movs	r2, #0
 3810 0056 83F83820 		strb	r2, [r3, #56]
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 3811              		.loc 1 1931 0 discriminator 2
 3812 005a 0023     		movs	r3, #0
 3813              	.L175:
1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3814              		.loc 1 1932 0
 3815 005c 1846     		mov	r0, r3
 3816 005e 1437     		adds	r7, r7, #20
 3817              	.LCFI190:
 3818              		.cfi_def_cfa_offset 4
 3819 0060 BD46     		mov	sp, r7
 3820              	.LCFI191:
 3821              		.cfi_def_cfa_register 13
 3822              		@ sp needed
 3823 0062 5DF8047B 		ldr	r7, [sp], #4
 3824              	.LCFI192:
 3825              		.cfi_restore 7
 3826              		.cfi_def_cfa_offset 0
 3827 0066 7047     		bx	lr
 3828              		.cfi_endproc
 3829              	.LFE97:
 3831              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3832              		.align	2
 3833              		.global	HAL_HalfDuplex_EnableReceiver
ARM GAS  /tmp/cc9wfwek.s 			page 101


 3834              		.thumb
 3835              		.thumb_func
 3837              	HAL_HalfDuplex_EnableReceiver:
 3838              	.LFB98:
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3839              		.loc 1 1941 0
 3840              		.cfi_startproc
 3841              		@ args = 0, pretend = 0, frame = 16
 3842              		@ frame_needed = 1, uses_anonymous_args = 0
 3843              		@ link register save eliminated.
 3844 0000 80B4     		push	{r7}
 3845              	.LCFI193:
 3846              		.cfi_def_cfa_offset 4
 3847              		.cfi_offset 7, -4
 3848 0002 85B0     		sub	sp, sp, #20
 3849              	.LCFI194:
 3850              		.cfi_def_cfa_offset 24
 3851 0004 00AF     		add	r7, sp, #0
 3852              	.LCFI195:
 3853              		.cfi_def_cfa_register 7
 3854 0006 7860     		str	r0, [r7, #4]
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 3855              		.loc 1 1942 0
 3856 0008 0023     		movs	r3, #0
 3857 000a FB60     		str	r3, [r7, #12]
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Locked */
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_LOCK(huart);
 3858              		.loc 1 1945 0
 3859 000c 7B68     		ldr	r3, [r7, #4]
 3860 000e 93F83830 		ldrb	r3, [r3, #56]	@ zero_extendqisi2
 3861 0012 012B     		cmp	r3, #1
 3862 0014 01D1     		bne	.L177
 3863              		.loc 1 1945 0 is_stmt 0 discriminator 1
 3864 0016 0223     		movs	r3, #2
 3865 0018 20E0     		b	.L178
 3866              	.L177:
 3867              		.loc 1 1945 0 discriminator 2
 3868 001a 7B68     		ldr	r3, [r7, #4]
 3869 001c 0122     		movs	r2, #1
 3870 001e 83F83820 		strb	r2, [r3, #56]
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3871              		.loc 1 1947 0 is_stmt 1 discriminator 2
 3872 0022 7B68     		ldr	r3, [r7, #4]
 3873 0024 2422     		movs	r2, #36
 3874 0026 83F83920 		strb	r2, [r3, #57]
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
ARM GAS  /tmp/cc9wfwek.s 			page 102


1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 3875              		.loc 1 1950 0 discriminator 2
 3876 002a 7B68     		ldr	r3, [r7, #4]
 3877 002c 1B68     		ldr	r3, [r3]
 3878 002e DB68     		ldr	r3, [r3, #12]
 3879 0030 FB60     		str	r3, [r7, #12]
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Clear TE and RE bits */
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 3880              		.loc 1 1953 0 discriminator 2
 3881 0032 FB68     		ldr	r3, [r7, #12]
 3882 0034 23F00C03 		bic	r3, r3, #12
 3883 0038 FB60     		str	r3, [r7, #12]
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 3884              		.loc 1 1956 0 discriminator 2
 3885 003a FB68     		ldr	r3, [r7, #12]
 3886 003c 43F00403 		orr	r3, r3, #4
 3887 0040 FB60     		str	r3, [r7, #12]
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Write to USART CR1 */
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 3888              		.loc 1 1959 0 discriminator 2
 3889 0042 7B68     		ldr	r3, [r7, #4]
 3890 0044 1B68     		ldr	r3, [r3]
 3891 0046 FA68     		ldr	r2, [r7, #12]
 3892 0048 DA60     		str	r2, [r3, #12]
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3893              		.loc 1 1961 0 discriminator 2
 3894 004a 7B68     		ldr	r3, [r7, #4]
 3895 004c 2022     		movs	r2, #32
 3896 004e 83F83920 		strb	r2, [r3, #57]
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Process Unlocked */
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3897              		.loc 1 1964 0 discriminator 2
 3898 0052 7B68     		ldr	r3, [r7, #4]
 3899 0054 0022     		movs	r2, #0
 3900 0056 83F83820 		strb	r2, [r3, #56]
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK; 
 3901              		.loc 1 1966 0 discriminator 2
 3902 005a 0023     		movs	r3, #0
 3903              	.L178:
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3904              		.loc 1 1967 0
 3905 005c 1846     		mov	r0, r3
 3906 005e 1437     		adds	r7, r7, #20
 3907              	.LCFI196:
 3908              		.cfi_def_cfa_offset 4
 3909 0060 BD46     		mov	sp, r7
 3910              	.LCFI197:
 3911              		.cfi_def_cfa_register 13
 3912              		@ sp needed
 3913 0062 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cc9wfwek.s 			page 103


 3914              	.LCFI198:
 3915              		.cfi_restore 7
 3916              		.cfi_def_cfa_offset 0
 3917 0066 7047     		bx	lr
 3918              		.cfi_endproc
 3919              	.LFE98:
 3921              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3922              		.align	2
 3923              		.global	HAL_UART_GetState
 3924              		.thumb
 3925              		.thumb_func
 3927              	HAL_UART_GetState:
 3928              	.LFB99:
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @verbatim   
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   ==============================================================================  
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****  [..]
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    process
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** @endverbatim
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @{
1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Returns the UART state.
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL state
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3929              		.loc 1 1998 0
 3930              		.cfi_startproc
 3931              		@ args = 0, pretend = 0, frame = 16
 3932              		@ frame_needed = 1, uses_anonymous_args = 0
 3933              		@ link register save eliminated.
 3934 0000 80B4     		push	{r7}
 3935              	.LCFI199:
 3936              		.cfi_def_cfa_offset 4
 3937              		.cfi_offset 7, -4
 3938 0002 85B0     		sub	sp, sp, #20
 3939              	.LCFI200:
 3940              		.cfi_def_cfa_offset 24
 3941 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cc9wfwek.s 			page 104


 3942              	.LCFI201:
 3943              		.cfi_def_cfa_register 7
 3944 0006 7860     		str	r0, [r7, #4]
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 3945              		.loc 1 1999 0
 3946 0008 0023     		movs	r3, #0
 3947 000a FB60     		str	r3, [r7, #12]
 3948 000c 0023     		movs	r3, #0
 3949 000e BB60     		str	r3, [r7, #8]
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp1 = huart->gState;
 3950              		.loc 1 2000 0
 3951 0010 7B68     		ldr	r3, [r7, #4]
 3952 0012 93F83930 		ldrb	r3, [r3, #57]
 3953 0016 DBB2     		uxtb	r3, r3
 3954 0018 FB60     		str	r3, [r7, #12]
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   temp2 = huart->RxState;
 3955              		.loc 1 2001 0
 3956 001a 7B68     		ldr	r3, [r7, #4]
 3957 001c 93F83A30 		ldrb	r3, [r3, #58]
 3958 0020 DBB2     		uxtb	r3, r3
 3959 0022 BB60     		str	r3, [r7, #8]
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 3960              		.loc 1 2003 0
 3961 0024 FB68     		ldr	r3, [r7, #12]
 3962 0026 DAB2     		uxtb	r2, r3
 3963 0028 BB68     		ldr	r3, [r7, #8]
 3964 002a DBB2     		uxtb	r3, r3
 3965 002c 1343     		orrs	r3, r3, r2
 3966 002e DBB2     		uxtb	r3, r3
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 3967              		.loc 1 2004 0
 3968 0030 1846     		mov	r0, r3
 3969 0032 1437     		adds	r7, r7, #20
 3970              	.LCFI202:
 3971              		.cfi_def_cfa_offset 4
 3972 0034 BD46     		mov	sp, r7
 3973              	.LCFI203:
 3974              		.cfi_def_cfa_register 13
 3975              		@ sp needed
 3976 0036 5DF8047B 		ldr	r7, [sp], #4
 3977              	.LCFI204:
 3978              		.cfi_restore 7
 3979              		.cfi_def_cfa_offset 0
 3980 003a 7047     		bx	lr
 3981              		.cfi_endproc
 3982              	.LFE99:
 3984              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3985              		.align	2
 3986              		.global	HAL_UART_GetError
 3987              		.thumb
 3988              		.thumb_func
 3990              	HAL_UART_GetError:
 3991              	.LFB100:
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Return the UART error code
ARM GAS  /tmp/cc9wfwek.s 			page 105


2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart : pointer to a UART_HandleTypeDef structure that contains
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *              the configuration information for the specified UART.
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval UART Error Code
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 3992              		.loc 1 2013 0
 3993              		.cfi_startproc
 3994              		@ args = 0, pretend = 0, frame = 8
 3995              		@ frame_needed = 1, uses_anonymous_args = 0
 3996              		@ link register save eliminated.
 3997 0000 80B4     		push	{r7}
 3998              	.LCFI205:
 3999              		.cfi_def_cfa_offset 4
 4000              		.cfi_offset 7, -4
 4001 0002 83B0     		sub	sp, sp, #12
 4002              	.LCFI206:
 4003              		.cfi_def_cfa_offset 16
 4004 0004 00AF     		add	r7, sp, #0
 4005              	.LCFI207:
 4006              		.cfi_def_cfa_register 7
 4007 0006 7860     		str	r0, [r7, #4]
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return huart->ErrorCode;
 4008              		.loc 1 2014 0
 4009 0008 7B68     		ldr	r3, [r7, #4]
 4010 000a DB6B     		ldr	r3, [r3, #60]
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4011              		.loc 1 2015 0
 4012 000c 1846     		mov	r0, r3
 4013 000e 0C37     		adds	r7, r7, #12
 4014              	.LCFI208:
 4015              		.cfi_def_cfa_offset 4
 4016 0010 BD46     		mov	sp, r7
 4017              	.LCFI209:
 4018              		.cfi_def_cfa_register 13
 4019              		@ sp needed
 4020 0012 5DF8047B 		ldr	r7, [sp], #4
 4021              	.LCFI210:
 4022              		.cfi_restore 7
 4023              		.cfi_def_cfa_offset 0
 4024 0016 7047     		bx	lr
 4025              		.cfi_endproc
 4026              	.LFE100:
 4028              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 4029              		.align	2
 4030              		.thumb
 4031              		.thumb_func
 4033              	UART_DMATransmitCplt:
 4034              	.LFB101:
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @}
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
ARM GAS  /tmp/cc9wfwek.s 			page 106


2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4035              		.loc 1 2027 0
 4036              		.cfi_startproc
 4037              		@ args = 0, pretend = 0, frame = 16
 4038              		@ frame_needed = 1, uses_anonymous_args = 0
 4039 0000 80B5     		push	{r7, lr}
 4040              	.LCFI211:
 4041              		.cfi_def_cfa_offset 8
 4042              		.cfi_offset 7, -8
 4043              		.cfi_offset 14, -4
 4044 0002 84B0     		sub	sp, sp, #16
 4045              	.LCFI212:
 4046              		.cfi_def_cfa_offset 24
 4047 0004 00AF     		add	r7, sp, #0
 4048              	.LCFI213:
 4049              		.cfi_def_cfa_register 7
 4050 0006 7860     		str	r0, [r7, #4]
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4051              		.loc 1 2028 0
 4052 0008 7B68     		ldr	r3, [r7, #4]
 4053 000a 5B6A     		ldr	r3, [r3, #36]
 4054 000c FB60     		str	r3, [r7, #12]
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 4055              		.loc 1 2030 0
 4056 000e 7B68     		ldr	r3, [r7, #4]
 4057 0010 1B68     		ldr	r3, [r3]
 4058 0012 1B68     		ldr	r3, [r3]
 4059 0014 03F02003 		and	r3, r3, #32
 4060 0018 002B     		cmp	r3, #0
 4061 001a 13D1     		bne	.L184
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4062              		.loc 1 2032 0
 4063 001c FB68     		ldr	r3, [r7, #12]
 4064 001e 0022     		movs	r2, #0
 4065 0020 DA84     		strh	r2, [r3, #38]	@ movhi
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4066              		.loc 1 2036 0
 4067 0022 FB68     		ldr	r3, [r7, #12]
 4068 0024 1B68     		ldr	r3, [r3]
 4069 0026 FA68     		ldr	r2, [r7, #12]
 4070 0028 1268     		ldr	r2, [r2]
 4071 002a 5269     		ldr	r2, [r2, #20]
 4072 002c 22F08002 		bic	r2, r2, #128
 4073 0030 5A61     		str	r2, [r3, #20]
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 4074              		.loc 1 2039 0
 4075 0032 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc9wfwek.s 			page 107


 4076 0034 1B68     		ldr	r3, [r3]
 4077 0036 FA68     		ldr	r2, [r7, #12]
 4078 0038 1268     		ldr	r2, [r2]
 4079 003a D268     		ldr	r2, [r2, #12]
 4080 003c 42F04002 		orr	r2, r2, #64
 4081 0040 DA60     		str	r2, [r3, #12]
 4082 0042 02E0     		b	.L183
 4083              	.L184:
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Circular mode */
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
 4084              		.loc 1 2045 0
 4085 0044 F868     		ldr	r0, [r7, #12]
 4086 0046 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 4087              	.L183:
2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4088              		.loc 1 2047 0
 4089 004a 1037     		adds	r7, r7, #16
 4090              	.LCFI214:
 4091              		.cfi_def_cfa_offset 8
 4092 004c BD46     		mov	sp, r7
 4093              	.LCFI215:
 4094              		.cfi_def_cfa_register 13
 4095              		@ sp needed
 4096 004e 80BD     		pop	{r7, pc}
 4097              		.cfi_endproc
 4098              	.LFE101:
 4100              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 4101              		.align	2
 4102              		.thumb
 4103              		.thumb_func
 4105              	UART_DMATxHalfCplt:
 4106              	.LFB102:
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4107              		.loc 1 2056 0
 4108              		.cfi_startproc
 4109              		@ args = 0, pretend = 0, frame = 16
 4110              		@ frame_needed = 1, uses_anonymous_args = 0
 4111 0000 80B5     		push	{r7, lr}
 4112              	.LCFI216:
 4113              		.cfi_def_cfa_offset 8
 4114              		.cfi_offset 7, -8
 4115              		.cfi_offset 14, -4
 4116 0002 84B0     		sub	sp, sp, #16
 4117              	.LCFI217:
ARM GAS  /tmp/cc9wfwek.s 			page 108


 4118              		.cfi_def_cfa_offset 24
 4119 0004 00AF     		add	r7, sp, #0
 4120              	.LCFI218:
 4121              		.cfi_def_cfa_register 7
 4122 0006 7860     		str	r0, [r7, #4]
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4123              		.loc 1 2057 0
 4124 0008 7B68     		ldr	r3, [r7, #4]
 4125 000a 5B6A     		ldr	r3, [r3, #36]
 4126 000c FB60     		str	r3, [r7, #12]
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 4127              		.loc 1 2059 0
 4128 000e F868     		ldr	r0, [r7, #12]
 4129 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4130              		.loc 1 2060 0
 4131 0014 1037     		adds	r7, r7, #16
 4132              	.LCFI219:
 4133              		.cfi_def_cfa_offset 8
 4134 0016 BD46     		mov	sp, r7
 4135              	.LCFI220:
 4136              		.cfi_def_cfa_register 13
 4137              		@ sp needed
 4138 0018 80BD     		pop	{r7, pc}
 4139              		.cfi_endproc
 4140              	.LFE102:
 4142 001a 00BF     		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 4143              		.align	2
 4144              		.thumb
 4145              		.thumb_func
 4147              	UART_DMAReceiveCplt:
 4148              	.LFB103:
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4149              		.loc 1 2068 0
 4150              		.cfi_startproc
 4151              		@ args = 0, pretend = 0, frame = 16
 4152              		@ frame_needed = 1, uses_anonymous_args = 0
 4153 0000 80B5     		push	{r7, lr}
 4154              	.LCFI221:
 4155              		.cfi_def_cfa_offset 8
 4156              		.cfi_offset 7, -8
 4157              		.cfi_offset 14, -4
 4158 0002 84B0     		sub	sp, sp, #16
 4159              	.LCFI222:
 4160              		.cfi_def_cfa_offset 24
 4161 0004 00AF     		add	r7, sp, #0
 4162              	.LCFI223:
 4163              		.cfi_def_cfa_register 7
 4164 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 109


2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4165              		.loc 1 2069 0
 4166 0008 7B68     		ldr	r3, [r7, #4]
 4167 000a 5B6A     		ldr	r3, [r3, #36]
 4168 000c FB60     		str	r3, [r7, #12]
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* DMA Normal mode*/
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((hdma->Instance->CCR & DMA_CCR_CIRC) == 0U)
 4169              		.loc 1 2071 0
 4170 000e 7B68     		ldr	r3, [r7, #4]
 4171 0010 1B68     		ldr	r3, [r3]
 4172 0012 1B68     		ldr	r3, [r3]
 4173 0014 03F02003 		and	r3, r3, #32
 4174 0018 002B     		cmp	r3, #0
 4175 001a 1ED1     		bne	.L188
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4176              		.loc 1 2073 0
 4177 001c FB68     		ldr	r3, [r7, #12]
 4178 001e 0022     		movs	r2, #0
 4179 0020 DA85     		strh	r2, [r3, #46]	@ movhi
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 4180              		.loc 1 2076 0
 4181 0022 FB68     		ldr	r3, [r7, #12]
 4182 0024 1B68     		ldr	r3, [r3]
 4183 0026 FA68     		ldr	r2, [r7, #12]
 4184 0028 1268     		ldr	r2, [r2]
 4185 002a D268     		ldr	r2, [r2, #12]
 4186 002c 22F48072 		bic	r2, r2, #256
 4187 0030 DA60     		str	r2, [r3, #12]
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4188              		.loc 1 2077 0
 4189 0032 FB68     		ldr	r3, [r7, #12]
 4190 0034 1B68     		ldr	r3, [r3]
 4191 0036 FA68     		ldr	r2, [r7, #12]
 4192 0038 1268     		ldr	r2, [r2]
 4193 003a 5269     		ldr	r2, [r2, #20]
 4194 003c 22F00102 		bic	r2, r2, #1
 4195 0040 5A61     		str	r2, [r3, #20]
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****        in the UART CR3 register */
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4196              		.loc 1 2081 0
 4197 0042 FB68     		ldr	r3, [r7, #12]
 4198 0044 1B68     		ldr	r3, [r3]
 4199 0046 FA68     		ldr	r2, [r7, #12]
 4200 0048 1268     		ldr	r2, [r2]
 4201 004a 5269     		ldr	r2, [r2, #20]
 4202 004c 22F04002 		bic	r2, r2, #64
 4203 0050 5A61     		str	r2, [r3, #20]
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4204              		.loc 1 2084 0
 4205 0052 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc9wfwek.s 			page 110


 4206 0054 2022     		movs	r2, #32
 4207 0056 83F83A20 		strb	r2, [r3, #58]
 4208              	.L188:
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 4209              		.loc 1 2086 0
 4210 005a F868     		ldr	r0, [r7, #12]
 4211 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4212              		.loc 1 2087 0
 4213 0060 1037     		adds	r7, r7, #16
 4214              	.LCFI224:
 4215              		.cfi_def_cfa_offset 8
 4216 0062 BD46     		mov	sp, r7
 4217              	.LCFI225:
 4218              		.cfi_def_cfa_register 13
 4219              		@ sp needed
 4220 0064 80BD     		pop	{r7, pc}
 4221              		.cfi_endproc
 4222              	.LFE103:
 4224 0066 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 4225              		.align	2
 4226              		.thumb
 4227              		.thumb_func
 4229              	UART_DMARxHalfCplt:
 4230              	.LFB104:
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4231              		.loc 1 2096 0
 4232              		.cfi_startproc
 4233              		@ args = 0, pretend = 0, frame = 16
 4234              		@ frame_needed = 1, uses_anonymous_args = 0
 4235 0000 80B5     		push	{r7, lr}
 4236              	.LCFI226:
 4237              		.cfi_def_cfa_offset 8
 4238              		.cfi_offset 7, -8
 4239              		.cfi_offset 14, -4
 4240 0002 84B0     		sub	sp, sp, #16
 4241              	.LCFI227:
 4242              		.cfi_def_cfa_offset 24
 4243 0004 00AF     		add	r7, sp, #0
 4244              	.LCFI228:
 4245              		.cfi_def_cfa_register 7
 4246 0006 7860     		str	r0, [r7, #4]
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 4247              		.loc 1 2097 0
 4248 0008 7B68     		ldr	r3, [r7, #4]
 4249 000a 5B6A     		ldr	r3, [r3, #36]
 4250 000c FB60     		str	r3, [r7, #12]
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
ARM GAS  /tmp/cc9wfwek.s 			page 111


 4251              		.loc 1 2098 0
 4252 000e F868     		ldr	r0, [r7, #12]
 4253 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4254              		.loc 1 2099 0
 4255 0014 1037     		adds	r7, r7, #16
 4256              	.LCFI229:
 4257              		.cfi_def_cfa_offset 8
 4258 0016 BD46     		mov	sp, r7
 4259              	.LCFI230:
 4260              		.cfi_def_cfa_register 13
 4261              		@ sp needed
 4262 0018 80BD     		pop	{r7, pc}
 4263              		.cfi_endproc
 4264              	.LFE104:
 4266 001a 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 4267              		.align	2
 4268              		.thumb
 4269              		.thumb_func
 4271              	UART_DMAError:
 4272              	.LFB105:
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma: DMA handle
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4273              		.loc 1 2107 0
 4274              		.cfi_startproc
 4275              		@ args = 0, pretend = 0, frame = 16
 4276              		@ frame_needed = 1, uses_anonymous_args = 0
 4277 0000 80B5     		push	{r7, lr}
 4278              	.LCFI231:
 4279              		.cfi_def_cfa_offset 8
 4280              		.cfi_offset 7, -8
 4281              		.cfi_offset 14, -4
 4282 0002 84B0     		sub	sp, sp, #16
 4283              	.LCFI232:
 4284              		.cfi_def_cfa_offset 24
 4285 0004 00AF     		add	r7, sp, #0
 4286              	.LCFI233:
 4287              		.cfi_def_cfa_register 7
 4288 0006 7860     		str	r0, [r7, #4]
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 4289              		.loc 1 2108 0
 4290 0008 0023     		movs	r3, #0
 4291 000a FB60     		str	r3, [r7, #12]
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4292              		.loc 1 2109 0
 4293 000c 7B68     		ldr	r3, [r7, #4]
 4294 000e 5B6A     		ldr	r3, [r3, #36]
 4295 0010 BB60     		str	r3, [r7, #8]
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
ARM GAS  /tmp/cc9wfwek.s 			page 112


 4296              		.loc 1 2112 0
 4297 0012 BB68     		ldr	r3, [r7, #8]
 4298 0014 1B68     		ldr	r3, [r3]
 4299 0016 5B69     		ldr	r3, [r3, #20]
 4300 0018 03F08003 		and	r3, r3, #128
 4301 001c 002B     		cmp	r3, #0
 4302 001e 14BF     		ite	ne
 4303 0020 0123     		movne	r3, #1
 4304 0022 0023     		moveq	r3, #0
 4305 0024 DBB2     		uxtb	r3, r3
 4306 0026 FB60     		str	r3, [r7, #12]
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 4307              		.loc 1 2113 0
 4308 0028 BB68     		ldr	r3, [r7, #8]
 4309 002a 93F83930 		ldrb	r3, [r3, #57]
 4310 002e DBB2     		uxtb	r3, r3
 4311 0030 212B     		cmp	r3, #33
 4312 0032 08D1     		bne	.L191
 4313              		.loc 1 2113 0 is_stmt 0 discriminator 1
 4314 0034 FB68     		ldr	r3, [r7, #12]
 4315 0036 002B     		cmp	r3, #0
 4316 0038 05D0     		beq	.L191
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->TxXferCount = 0U;
 4317              		.loc 1 2115 0 is_stmt 1
 4318 003a BB68     		ldr	r3, [r7, #8]
 4319 003c 0022     		movs	r2, #0
 4320 003e DA84     		strh	r2, [r3, #38]	@ movhi
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 4321              		.loc 1 2116 0
 4322 0040 B868     		ldr	r0, [r7, #8]
 4323 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 4324              	.L191:
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
 4325              		.loc 1 2120 0
 4326 0046 BB68     		ldr	r3, [r7, #8]
 4327 0048 1B68     		ldr	r3, [r3]
 4328 004a 5B69     		ldr	r3, [r3, #20]
 4329 004c 03F04003 		and	r3, r3, #64
 4330 0050 002B     		cmp	r3, #0
 4331 0052 14BF     		ite	ne
 4332 0054 0123     		movne	r3, #1
 4333 0056 0023     		moveq	r3, #0
 4334 0058 DBB2     		uxtb	r3, r3
 4335 005a FB60     		str	r3, [r7, #12]
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 4336              		.loc 1 2121 0
 4337 005c BB68     		ldr	r3, [r7, #8]
 4338 005e 93F83A30 		ldrb	r3, [r3, #58]
 4339 0062 DBB2     		uxtb	r3, r3
 4340 0064 222B     		cmp	r3, #34
 4341 0066 08D1     		bne	.L192
 4342              		.loc 1 2121 0 is_stmt 0 discriminator 1
 4343 0068 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc9wfwek.s 			page 113


 4344 006a 002B     		cmp	r3, #0
 4345 006c 05D0     		beq	.L192
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->RxXferCount = 0U;
 4346              		.loc 1 2123 0 is_stmt 1
 4347 006e BB68     		ldr	r3, [r7, #8]
 4348 0070 0022     		movs	r2, #0
 4349 0072 DA85     		strh	r2, [r3, #46]	@ movhi
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 4350              		.loc 1 2124 0
 4351 0074 B868     		ldr	r0, [r7, #8]
 4352 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 4353              	.L192:
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 4354              		.loc 1 2127 0
 4355 007a BB68     		ldr	r3, [r7, #8]
 4356 007c DB6B     		ldr	r3, [r3, #60]
 4357 007e 43F01002 		orr	r2, r3, #16
 4358 0082 BB68     		ldr	r3, [r7, #8]
 4359 0084 DA63     		str	r2, [r3, #60]
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4360              		.loc 1 2128 0
 4361 0086 B868     		ldr	r0, [r7, #8]
 4362 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4363              		.loc 1 2129 0
 4364 008c 1037     		adds	r7, r7, #16
 4365              	.LCFI234:
 4366              		.cfi_def_cfa_offset 8
 4367 008e BD46     		mov	sp, r7
 4368              	.LCFI235:
 4369              		.cfi_def_cfa_register 13
 4370              		@ sp needed
 4371 0090 80BD     		pop	{r7, pc}
 4372              		.cfi_endproc
 4373              	.LFE105:
 4375 0092 00BF     		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4376              		.align	2
 4377              		.thumb
 4378              		.thumb_func
 4380              	UART_WaitOnFlagUntilTimeout:
 4381              	.LFB106:
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Flag: specifies the UART flag to check.
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Status: The new Flag status (SET or RESET).
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Tickstart Tick start value
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  Timeout: Timeout duration
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
ARM GAS  /tmp/cc9wfwek.s 			page 114


 4382              		.loc 1 2142 0
 4383              		.cfi_startproc
 4384              		@ args = 4, pretend = 0, frame = 16
 4385              		@ frame_needed = 1, uses_anonymous_args = 0
 4386 0000 80B5     		push	{r7, lr}
 4387              	.LCFI236:
 4388              		.cfi_def_cfa_offset 8
 4389              		.cfi_offset 7, -8
 4390              		.cfi_offset 14, -4
 4391 0002 84B0     		sub	sp, sp, #16
 4392              	.LCFI237:
 4393              		.cfi_def_cfa_offset 24
 4394 0004 00AF     		add	r7, sp, #0
 4395              	.LCFI238:
 4396              		.cfi_def_cfa_register 7
 4397 0006 F860     		str	r0, [r7, #12]
 4398 0008 B960     		str	r1, [r7, #8]
 4399 000a 3B60     		str	r3, [r7]
 4400 000c 1346     		mov	r3, r2
 4401 000e FB71     		strb	r3, [r7, #7]
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Wait until flag is set */
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
 4402              		.loc 1 2144 0
 4403 0010 2CE0     		b	.L194
 4404              	.L197:
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /* Check for the Timeout */
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 4405              		.loc 1 2147 0
 4406 0012 BB69     		ldr	r3, [r7, #24]
 4407 0014 B3F1FF3F 		cmp	r3, #-1
 4408 0018 28D0     		beq	.L194
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 4409              		.loc 1 2149 0
 4410 001a BB69     		ldr	r3, [r7, #24]
 4411 001c 002B     		cmp	r3, #0
 4412 001e 07D0     		beq	.L195
 4413              		.loc 1 2149 0 is_stmt 0 discriminator 1
 4414 0020 FFF7FEFF 		bl	HAL_GetTick
 4415 0024 0246     		mov	r2, r0
 4416 0026 3B68     		ldr	r3, [r7]
 4417 0028 D21A     		subs	r2, r2, r3
 4418 002a BB69     		ldr	r3, [r7, #24]
 4419 002c 9A42     		cmp	r2, r3
 4420 002e 1DD9     		bls	.L194
 4421              	.L195:
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 4422              		.loc 1 2152 0 is_stmt 1
 4423 0030 FB68     		ldr	r3, [r7, #12]
 4424 0032 1B68     		ldr	r3, [r3]
 4425 0034 FA68     		ldr	r2, [r7, #12]
 4426 0036 1268     		ldr	r2, [r2]
 4427 0038 D268     		ldr	r2, [r2, #12]
 4428 003a 22F4D072 		bic	r2, r2, #416
ARM GAS  /tmp/cc9wfwek.s 			page 115


 4429 003e DA60     		str	r2, [r3, #12]
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4430              		.loc 1 2153 0
 4431 0040 FB68     		ldr	r3, [r7, #12]
 4432 0042 1B68     		ldr	r3, [r3]
 4433 0044 FA68     		ldr	r2, [r7, #12]
 4434 0046 1268     		ldr	r2, [r2]
 4435 0048 5269     		ldr	r2, [r2, #20]
 4436 004a 22F00102 		bic	r2, r2, #1
 4437 004e 5A61     		str	r2, [r3, #20]
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 4438              		.loc 1 2155 0
 4439 0050 FB68     		ldr	r3, [r7, #12]
 4440 0052 2022     		movs	r2, #32
 4441 0054 83F83920 		strb	r2, [r3, #57]
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4442              		.loc 1 2156 0
 4443 0058 FB68     		ldr	r3, [r7, #12]
 4444 005a 2022     		movs	r2, #32
 4445 005c 83F83A20 		strb	r2, [r3, #58]
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Process Unlocked */
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 4446              		.loc 1 2159 0
 4447 0060 FB68     		ldr	r3, [r7, #12]
 4448 0062 0022     		movs	r2, #0
 4449 0064 83F83820 		strb	r2, [r3, #56]
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         return HAL_TIMEOUT;
 4450              		.loc 1 2161 0
 4451 0068 0323     		movs	r3, #3
 4452 006a 0FE0     		b	.L196
 4453              	.L194:
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
 4454              		.loc 1 2144 0
 4455 006c FB68     		ldr	r3, [r7, #12]
 4456 006e 1B68     		ldr	r3, [r3]
 4457 0070 1A68     		ldr	r2, [r3]
 4458 0072 BB68     		ldr	r3, [r7, #8]
 4459 0074 1A40     		ands	r2, r2, r3
 4460 0076 BB68     		ldr	r3, [r7, #8]
 4461 0078 9A42     		cmp	r2, r3
 4462 007a 0CBF     		ite	eq
 4463 007c 0123     		moveq	r3, #1
 4464 007e 0023     		movne	r3, #0
 4465 0080 DBB2     		uxtb	r3, r3
 4466 0082 1A46     		mov	r2, r3
 4467 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4468 0086 9A42     		cmp	r2, r3
 4469 0088 C3D0     		beq	.L197
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 4470              		.loc 1 2166 0
ARM GAS  /tmp/cc9wfwek.s 			page 116


 4471 008a 0023     		movs	r3, #0
 4472              	.L196:
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4473              		.loc 1 2167 0
 4474 008c 1846     		mov	r0, r3
 4475 008e 1037     		adds	r7, r7, #16
 4476              	.LCFI239:
 4477              		.cfi_def_cfa_offset 8
 4478 0090 BD46     		mov	sp, r7
 4479              	.LCFI240:
 4480              		.cfi_def_cfa_register 13
 4481              		@ sp needed
 4482 0092 80BD     		pop	{r7, pc}
 4483              		.cfi_endproc
 4484              	.LFE106:
 4486              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 4487              		.align	2
 4488              		.thumb
 4489              		.thumb_func
 4491              	UART_EndTxTransfer:
 4492              	.LFB107:
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4493              		.loc 1 2175 0
 4494              		.cfi_startproc
 4495              		@ args = 0, pretend = 0, frame = 8
 4496              		@ frame_needed = 1, uses_anonymous_args = 0
 4497              		@ link register save eliminated.
 4498 0000 80B4     		push	{r7}
 4499              	.LCFI241:
 4500              		.cfi_def_cfa_offset 4
 4501              		.cfi_offset 7, -4
 4502 0002 83B0     		sub	sp, sp, #12
 4503              	.LCFI242:
 4504              		.cfi_def_cfa_offset 16
 4505 0004 00AF     		add	r7, sp, #0
 4506              	.LCFI243:
 4507              		.cfi_def_cfa_register 7
 4508 0006 7860     		str	r0, [r7, #4]
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4509              		.loc 1 2177 0
 4510 0008 7B68     		ldr	r3, [r7, #4]
 4511 000a 1B68     		ldr	r3, [r3]
 4512 000c 7A68     		ldr	r2, [r7, #4]
 4513 000e 1268     		ldr	r2, [r2]
 4514 0010 D268     		ldr	r2, [r2, #12]
 4515 0012 22F0C002 		bic	r2, r2, #192
 4516 0016 DA60     		str	r2, [r3, #12]
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
ARM GAS  /tmp/cc9wfwek.s 			page 117


2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4517              		.loc 1 2180 0
 4518 0018 7B68     		ldr	r3, [r7, #4]
 4519 001a 2022     		movs	r2, #32
 4520 001c 83F83920 		strb	r2, [r3, #57]
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4521              		.loc 1 2181 0
 4522 0020 0C37     		adds	r7, r7, #12
 4523              	.LCFI244:
 4524              		.cfi_def_cfa_offset 4
 4525 0022 BD46     		mov	sp, r7
 4526              	.LCFI245:
 4527              		.cfi_def_cfa_register 13
 4528              		@ sp needed
 4529 0024 5DF8047B 		ldr	r7, [sp], #4
 4530              	.LCFI246:
 4531              		.cfi_restore 7
 4532              		.cfi_def_cfa_offset 0
 4533 0028 7047     		bx	lr
 4534              		.cfi_endproc
 4535              	.LFE107:
 4537 002a 00BF     		.section	.text.UART_EndRxTransfer,"ax",%progbits
 4538              		.align	2
 4539              		.thumb
 4540              		.thumb_func
 4542              	UART_EndRxTransfer:
 4543              	.LFB108:
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: UART handle.
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4544              		.loc 1 2189 0
 4545              		.cfi_startproc
 4546              		@ args = 0, pretend = 0, frame = 8
 4547              		@ frame_needed = 1, uses_anonymous_args = 0
 4548              		@ link register save eliminated.
 4549 0000 80B4     		push	{r7}
 4550              	.LCFI247:
 4551              		.cfi_def_cfa_offset 4
 4552              		.cfi_offset 7, -4
 4553 0002 83B0     		sub	sp, sp, #12
 4554              	.LCFI248:
 4555              		.cfi_def_cfa_offset 16
 4556 0004 00AF     		add	r7, sp, #0
 4557              	.LCFI249:
 4558              		.cfi_def_cfa_register 7
 4559 0006 7860     		str	r0, [r7, #4]
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4560              		.loc 1 2191 0
 4561 0008 7B68     		ldr	r3, [r7, #4]
 4562 000a 1B68     		ldr	r3, [r3]
 4563 000c 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 118


 4564 000e 1268     		ldr	r2, [r2]
 4565 0010 D268     		ldr	r2, [r2, #12]
 4566 0012 22F49072 		bic	r2, r2, #288
 4567 0016 DA60     		str	r2, [r3, #12]
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4568              		.loc 1 2192 0
 4569 0018 7B68     		ldr	r3, [r7, #4]
 4570 001a 1B68     		ldr	r3, [r3]
 4571 001c 7A68     		ldr	r2, [r7, #4]
 4572 001e 1268     		ldr	r2, [r2]
 4573 0020 5269     		ldr	r2, [r2, #20]
 4574 0022 22F00102 		bic	r2, r2, #1
 4575 0026 5A61     		str	r2, [r3, #20]
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4576              		.loc 1 2195 0
 4577 0028 7B68     		ldr	r3, [r7, #4]
 4578 002a 2022     		movs	r2, #32
 4579 002c 83F83A20 		strb	r2, [r3, #58]
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4580              		.loc 1 2196 0
 4581 0030 0C37     		adds	r7, r7, #12
 4582              	.LCFI250:
 4583              		.cfi_def_cfa_offset 4
 4584 0032 BD46     		mov	sp, r7
 4585              	.LCFI251:
 4586              		.cfi_def_cfa_register 13
 4587              		@ sp needed
 4588 0034 5DF8047B 		ldr	r7, [sp], #4
 4589              	.LCFI252:
 4590              		.cfi_restore 7
 4591              		.cfi_def_cfa_offset 0
 4592 0038 7047     		bx	lr
 4593              		.cfi_endproc
 4594              	.LFE108:
 4596 003a 00BF     		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 4597              		.align	2
 4598              		.thumb
 4599              		.thumb_func
 4601              	UART_DMAAbortOnError:
 4602              	.LFB109:
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4603              		.loc 1 2205 0
 4604              		.cfi_startproc
 4605              		@ args = 0, pretend = 0, frame = 16
 4606              		@ frame_needed = 1, uses_anonymous_args = 0
 4607 0000 80B5     		push	{r7, lr}
 4608              	.LCFI253:
ARM GAS  /tmp/cc9wfwek.s 			page 119


 4609              		.cfi_def_cfa_offset 8
 4610              		.cfi_offset 7, -8
 4611              		.cfi_offset 14, -4
 4612 0002 84B0     		sub	sp, sp, #16
 4613              	.LCFI254:
 4614              		.cfi_def_cfa_offset 24
 4615 0004 00AF     		add	r7, sp, #0
 4616              	.LCFI255:
 4617              		.cfi_def_cfa_register 7
 4618 0006 7860     		str	r0, [r7, #4]
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4619              		.loc 1 2206 0
 4620 0008 7B68     		ldr	r3, [r7, #4]
 4621 000a 5B6A     		ldr	r3, [r3, #36]
 4622 000c FB60     		str	r3, [r7, #12]
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4623              		.loc 1 2207 0
 4624 000e FB68     		ldr	r3, [r7, #12]
 4625 0010 0022     		movs	r2, #0
 4626 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4627              		.loc 1 2208 0
 4628 0014 FB68     		ldr	r3, [r7, #12]
 4629 0016 0022     		movs	r2, #0
 4630 0018 DA84     		strh	r2, [r3, #38]	@ movhi
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 4631              		.loc 1 2210 0
 4632 001a F868     		ldr	r0, [r7, #12]
 4633 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4634              		.loc 1 2211 0
 4635 0020 1037     		adds	r7, r7, #16
 4636              	.LCFI256:
 4637              		.cfi_def_cfa_offset 8
 4638 0022 BD46     		mov	sp, r7
 4639              	.LCFI257:
 4640              		.cfi_def_cfa_register 13
 4641              		@ sp needed
 4642 0024 80BD     		pop	{r7, pc}
 4643              		.cfi_endproc
 4644              	.LFE109:
 4646 0026 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 4647              		.align	2
 4648              		.thumb
 4649              		.thumb_func
 4651              	UART_DMATxAbortCallback:
 4652              	.LFB110:
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
ARM GAS  /tmp/cc9wfwek.s 			page 120


2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4653              		.loc 1 2222 0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 16
 4656              		@ frame_needed = 1, uses_anonymous_args = 0
 4657 0000 80B5     		push	{r7, lr}
 4658              	.LCFI258:
 4659              		.cfi_def_cfa_offset 8
 4660              		.cfi_offset 7, -8
 4661              		.cfi_offset 14, -4
 4662 0002 84B0     		sub	sp, sp, #16
 4663              	.LCFI259:
 4664              		.cfi_def_cfa_offset 24
 4665 0004 00AF     		add	r7, sp, #0
 4666              	.LCFI260:
 4667              		.cfi_def_cfa_register 7
 4668 0006 7860     		str	r0, [r7, #4]
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4669              		.loc 1 2223 0
 4670 0008 7B68     		ldr	r3, [r7, #4]
 4671 000a 5B6A     		ldr	r3, [r3, #36]
 4672 000c FB60     		str	r3, [r7, #12]
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 4673              		.loc 1 2225 0
 4674 000e FB68     		ldr	r3, [r7, #12]
 4675 0010 1B6B     		ldr	r3, [r3, #48]
 4676 0012 0022     		movs	r2, #0
 4677 0014 5A63     		str	r2, [r3, #52]
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 4678              		.loc 1 2228 0
 4679 0016 FB68     		ldr	r3, [r7, #12]
 4680 0018 5B6B     		ldr	r3, [r3, #52]
 4681 001a 002B     		cmp	r3, #0
 4682 001c 05D0     		beq	.L202
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
 4683              		.loc 1 2230 0
 4684 001e FB68     		ldr	r3, [r7, #12]
 4685 0020 5B6B     		ldr	r3, [r3, #52]
 4686 0022 5B6B     		ldr	r3, [r3, #52]
 4687 0024 002B     		cmp	r3, #0
 4688 0026 00D0     		beq	.L202
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 4689              		.loc 1 2232 0
 4690 0028 13E0     		b	.L201
 4691              	.L202:
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4692              		.loc 1 2237 0
ARM GAS  /tmp/cc9wfwek.s 			page 121


 4693 002a FB68     		ldr	r3, [r7, #12]
 4694 002c 0022     		movs	r2, #0
 4695 002e DA84     		strh	r2, [r3, #38]	@ movhi
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4696              		.loc 1 2238 0
 4697 0030 FB68     		ldr	r3, [r7, #12]
 4698 0032 0022     		movs	r2, #0
 4699 0034 DA85     		strh	r2, [r3, #46]	@ movhi
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 4700              		.loc 1 2241 0
 4701 0036 FB68     		ldr	r3, [r7, #12]
 4702 0038 0022     		movs	r2, #0
 4703 003a DA63     		str	r2, [r3, #60]
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 4704              		.loc 1 2244 0
 4705 003c FB68     		ldr	r3, [r7, #12]
 4706 003e 2022     		movs	r2, #32
 4707 0040 83F83920 		strb	r2, [r3, #57]
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4708              		.loc 1 2245 0
 4709 0044 FB68     		ldr	r3, [r7, #12]
 4710 0046 2022     		movs	r2, #32
 4711 0048 83F83A20 		strb	r2, [r3, #58]
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 4712              		.loc 1 2248 0
 4713 004c F868     		ldr	r0, [r7, #12]
 4714 004e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4715              	.L201:
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4716              		.loc 1 2249 0
 4717 0052 1037     		adds	r7, r7, #16
 4718              	.LCFI261:
 4719              		.cfi_def_cfa_offset 8
 4720 0054 BD46     		mov	sp, r7
 4721              	.LCFI262:
 4722              		.cfi_def_cfa_register 13
 4723              		@ sp needed
 4724 0056 80BD     		pop	{r7, pc}
 4725              		.cfi_endproc
 4726              	.LFE110:
 4728              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 4729              		.align	2
 4730              		.thumb
 4731              		.thumb_func
 4733              	UART_DMARxAbortCallback:
 4734              	.LFB111:
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
ARM GAS  /tmp/cc9wfwek.s 			page 122


2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4735              		.loc 1 2260 0
 4736              		.cfi_startproc
 4737              		@ args = 0, pretend = 0, frame = 16
 4738              		@ frame_needed = 1, uses_anonymous_args = 0
 4739 0000 80B5     		push	{r7, lr}
 4740              	.LCFI263:
 4741              		.cfi_def_cfa_offset 8
 4742              		.cfi_offset 7, -8
 4743              		.cfi_offset 14, -4
 4744 0002 84B0     		sub	sp, sp, #16
 4745              	.LCFI264:
 4746              		.cfi_def_cfa_offset 24
 4747 0004 00AF     		add	r7, sp, #0
 4748              	.LCFI265:
 4749              		.cfi_def_cfa_register 7
 4750 0006 7860     		str	r0, [r7, #4]
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4751              		.loc 1 2261 0
 4752 0008 7B68     		ldr	r3, [r7, #4]
 4753 000a 5B6A     		ldr	r3, [r3, #36]
 4754 000c FB60     		str	r3, [r7, #12]
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 4755              		.loc 1 2263 0
 4756 000e FB68     		ldr	r3, [r7, #12]
 4757 0010 5B6B     		ldr	r3, [r3, #52]
 4758 0012 0022     		movs	r2, #0
 4759 0014 5A63     		str	r2, [r3, #52]
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 4760              		.loc 1 2266 0
 4761 0016 FB68     		ldr	r3, [r7, #12]
 4762 0018 1B6B     		ldr	r3, [r3, #48]
 4763 001a 002B     		cmp	r3, #0
 4764 001c 05D0     		beq	.L205
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 4765              		.loc 1 2268 0
 4766 001e FB68     		ldr	r3, [r7, #12]
 4767 0020 1B6B     		ldr	r3, [r3, #48]
 4768 0022 5B6B     		ldr	r3, [r3, #52]
 4769 0024 002B     		cmp	r3, #0
 4770 0026 00D0     		beq	.L205
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return;
 4771              		.loc 1 2270 0
 4772 0028 13E0     		b	.L204
 4773              	.L205:
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
ARM GAS  /tmp/cc9wfwek.s 			page 123


2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4774              		.loc 1 2275 0
 4775 002a FB68     		ldr	r3, [r7, #12]
 4776 002c 0022     		movs	r2, #0
 4777 002e DA84     		strh	r2, [r3, #38]	@ movhi
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4778              		.loc 1 2276 0
 4779 0030 FB68     		ldr	r3, [r7, #12]
 4780 0032 0022     		movs	r2, #0
 4781 0034 DA85     		strh	r2, [r3, #46]	@ movhi
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Reset ErrorCode */
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 4782              		.loc 1 2279 0
 4783 0036 FB68     		ldr	r3, [r7, #12]
 4784 0038 0022     		movs	r2, #0
 4785 003a DA63     		str	r2, [r3, #60]
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 4786              		.loc 1 2282 0
 4787 003c FB68     		ldr	r3, [r7, #12]
 4788 003e 2022     		movs	r2, #32
 4789 0040 83F83920 		strb	r2, [r3, #57]
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4790              		.loc 1 2283 0
 4791 0044 FB68     		ldr	r3, [r7, #12]
 4792 0046 2022     		movs	r2, #32
 4793 0048 83F83A20 		strb	r2, [r3, #58]
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 4794              		.loc 1 2286 0
 4795 004c F868     		ldr	r0, [r7, #12]
 4796 004e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4797              	.L204:
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4798              		.loc 1 2287 0
 4799 0052 1037     		adds	r7, r7, #16
 4800              	.LCFI266:
 4801              		.cfi_def_cfa_offset 8
 4802 0054 BD46     		mov	sp, r7
 4803              	.LCFI267:
 4804              		.cfi_def_cfa_register 13
 4805              		@ sp needed
 4806 0056 80BD     		pop	{r7, pc}
 4807              		.cfi_endproc
 4808              	.LFE111:
 4810              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 4811              		.align	2
 4812              		.thumb
 4813              		.thumb_func
 4815              	UART_DMATxOnlyAbortCallback:
 4816              	.LFB112:
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc9wfwek.s 			page 124


2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4817              		.loc 1 2298 0
 4818              		.cfi_startproc
 4819              		@ args = 0, pretend = 0, frame = 16
 4820              		@ frame_needed = 1, uses_anonymous_args = 0
 4821 0000 80B5     		push	{r7, lr}
 4822              	.LCFI268:
 4823              		.cfi_def_cfa_offset 8
 4824              		.cfi_offset 7, -8
 4825              		.cfi_offset 14, -4
 4826 0002 84B0     		sub	sp, sp, #16
 4827              	.LCFI269:
 4828              		.cfi_def_cfa_offset 24
 4829 0004 00AF     		add	r7, sp, #0
 4830              	.LCFI270:
 4831              		.cfi_def_cfa_register 7
 4832 0006 7860     		str	r0, [r7, #4]
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4833              		.loc 1 2299 0
 4834 0008 7B68     		ldr	r3, [r7, #4]
 4835 000a 5B6A     		ldr	r3, [r3, #36]
 4836 000c FB60     		str	r3, [r7, #12]
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 4837              		.loc 1 2301 0
 4838 000e FB68     		ldr	r3, [r7, #12]
 4839 0010 0022     		movs	r2, #0
 4840 0012 DA84     		strh	r2, [r3, #38]	@ movhi
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4841              		.loc 1 2304 0
 4842 0014 FB68     		ldr	r3, [r7, #12]
 4843 0016 2022     		movs	r2, #32
 4844 0018 83F83920 		strb	r2, [r3, #57]
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 4845              		.loc 1 2307 0
 4846 001c F868     		ldr	r0, [r7, #12]
 4847 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4848              		.loc 1 2308 0
 4849 0022 1037     		adds	r7, r7, #16
 4850              	.LCFI271:
 4851              		.cfi_def_cfa_offset 8
 4852 0024 BD46     		mov	sp, r7
 4853              	.LCFI272:
ARM GAS  /tmp/cc9wfwek.s 			page 125


 4854              		.cfi_def_cfa_register 13
 4855              		@ sp needed
 4856 0026 80BD     		pop	{r7, pc}
 4857              		.cfi_endproc
 4858              	.LFE112:
 4860              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4861              		.align	2
 4862              		.thumb
 4863              		.thumb_func
 4865              	UART_DMARxOnlyAbortCallback:
 4866              	.LFB113:
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  hdma DMA handle.
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4867              		.loc 1 2319 0
 4868              		.cfi_startproc
 4869              		@ args = 0, pretend = 0, frame = 16
 4870              		@ frame_needed = 1, uses_anonymous_args = 0
 4871 0000 80B5     		push	{r7, lr}
 4872              	.LCFI273:
 4873              		.cfi_def_cfa_offset 8
 4874              		.cfi_offset 7, -8
 4875              		.cfi_offset 14, -4
 4876 0002 84B0     		sub	sp, sp, #16
 4877              	.LCFI274:
 4878              		.cfi_def_cfa_offset 24
 4879 0004 00AF     		add	r7, sp, #0
 4880              	.LCFI275:
 4881              		.cfi_def_cfa_register 7
 4882 0006 7860     		str	r0, [r7, #4]
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4883              		.loc 1 2320 0
 4884 0008 7B68     		ldr	r3, [r7, #4]
 4885 000a 5B6A     		ldr	r3, [r3, #36]
 4886 000c FB60     		str	r3, [r7, #12]
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4887              		.loc 1 2322 0
 4888 000e FB68     		ldr	r3, [r7, #12]
 4889 0010 0022     		movs	r2, #0
 4890 0012 DA85     		strh	r2, [r3, #46]	@ movhi
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4891              		.loc 1 2325 0
 4892 0014 FB68     		ldr	r3, [r7, #12]
 4893 0016 2022     		movs	r2, #32
 4894 0018 83F83A20 		strb	r2, [r3, #58]
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
ARM GAS  /tmp/cc9wfwek.s 			page 126


2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Call user Abort complete callback */
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 4895              		.loc 1 2328 0
 4896 001c F868     		ldr	r0, [r7, #12]
 4897 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 4898              		.loc 1 2329 0
 4899 0022 1037     		adds	r7, r7, #16
 4900              	.LCFI276:
 4901              		.cfi_def_cfa_offset 8
 4902 0024 BD46     		mov	sp, r7
 4903              	.LCFI277:
 4904              		.cfi_def_cfa_register 13
 4905              		@ sp needed
 4906 0026 80BD     		pop	{r7, pc}
 4907              		.cfi_endproc
 4908              	.LFE113:
 4910              		.section	.text.UART_Transmit_IT,"ax",%progbits
 4911              		.align	2
 4912              		.thumb
 4913              		.thumb_func
 4915              	UART_Transmit_IT:
 4916              	.LFB114:
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: Pointer to a UART_HandleTypeDef structure that contains
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 4917              		.loc 1 2338 0
 4918              		.cfi_startproc
 4919              		@ args = 0, pretend = 0, frame = 16
 4920              		@ frame_needed = 1, uses_anonymous_args = 0
 4921              		@ link register save eliminated.
 4922 0000 80B4     		push	{r7}
 4923              	.LCFI278:
 4924              		.cfi_def_cfa_offset 4
 4925              		.cfi_offset 7, -4
 4926 0002 85B0     		sub	sp, sp, #20
 4927              	.LCFI279:
 4928              		.cfi_def_cfa_offset 24
 4929 0004 00AF     		add	r7, sp, #0
 4930              	.LCFI280:
 4931              		.cfi_def_cfa_register 7
 4932 0006 7860     		str	r0, [r7, #4]
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 4933              		.loc 1 2342 0
 4934 0008 7B68     		ldr	r3, [r7, #4]
 4935 000a 93F83930 		ldrb	r3, [r3, #57]
 4936 000e DBB2     		uxtb	r3, r3
 4937 0010 212B     		cmp	r3, #33
ARM GAS  /tmp/cc9wfwek.s 			page 127


 4938 0012 43D1     		bne	.L210
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 4939              		.loc 1 2344 0
 4940 0014 7B68     		ldr	r3, [r7, #4]
 4941 0016 9B68     		ldr	r3, [r3, #8]
 4942 0018 B3F5805F 		cmp	r3, #4096
 4943 001c 19D1     		bne	.L211
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
 4944              		.loc 1 2346 0
 4945 001e 7B68     		ldr	r3, [r7, #4]
 4946 0020 1B6A     		ldr	r3, [r3, #32]
 4947 0022 FB60     		str	r3, [r7, #12]
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 4948              		.loc 1 2347 0
 4949 0024 7B68     		ldr	r3, [r7, #4]
 4950 0026 1B68     		ldr	r3, [r3]
 4951 0028 FA68     		ldr	r2, [r7, #12]
 4952 002a 1288     		ldrh	r2, [r2]
 4953 002c C2F30802 		ubfx	r2, r2, #0, #9
 4954 0030 5A60     		str	r2, [r3, #4]
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 4955              		.loc 1 2348 0
 4956 0032 7B68     		ldr	r3, [r7, #4]
 4957 0034 1B69     		ldr	r3, [r3, #16]
 4958 0036 002B     		cmp	r3, #0
 4959 0038 05D1     		bne	.L212
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
 4960              		.loc 1 2350 0
 4961 003a 7B68     		ldr	r3, [r7, #4]
 4962 003c 1B6A     		ldr	r3, [r3, #32]
 4963 003e 9A1C     		adds	r2, r3, #2
 4964 0040 7B68     		ldr	r3, [r7, #4]
 4965 0042 1A62     		str	r2, [r3, #32]
 4966 0044 0EE0     		b	.L214
 4967              	.L212:
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
 4968              		.loc 1 2354 0
 4969 0046 7B68     		ldr	r3, [r7, #4]
 4970 0048 1B6A     		ldr	r3, [r3, #32]
 4971 004a 5A1C     		adds	r2, r3, #1
 4972 004c 7B68     		ldr	r3, [r7, #4]
 4973 004e 1A62     		str	r2, [r3, #32]
 4974 0050 08E0     		b	.L214
 4975              	.L211:
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     } 
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 4976              		.loc 1 2359 0
 4977 0052 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 128


 4978 0054 1A68     		ldr	r2, [r3]
 4979 0056 7B68     		ldr	r3, [r7, #4]
 4980 0058 1B6A     		ldr	r3, [r3, #32]
 4981 005a 581C     		adds	r0, r3, #1
 4982 005c 7968     		ldr	r1, [r7, #4]
 4983 005e 0862     		str	r0, [r1, #32]
 4984 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4985 0062 5360     		str	r3, [r2, #4]
 4986              	.L214:
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
 4987              		.loc 1 2362 0
 4988 0064 7B68     		ldr	r3, [r7, #4]
 4989 0066 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 4990 0068 9BB2     		uxth	r3, r3
 4991 006a 013B     		subs	r3, r3, #1
 4992 006c 9BB2     		uxth	r3, r3
 4993 006e 7A68     		ldr	r2, [r7, #4]
 4994 0070 1946     		mov	r1, r3	@ movhi
 4995 0072 D184     		strh	r1, [r2, #38]	@ movhi
 4996 0074 002B     		cmp	r3, #0
 4997 0076 0FD1     		bne	.L215
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 4998              		.loc 1 2365 0
 4999 0078 7B68     		ldr	r3, [r7, #4]
 5000 007a 1B68     		ldr	r3, [r3]
 5001 007c 7A68     		ldr	r2, [r7, #4]
 5002 007e 1268     		ldr	r2, [r2]
 5003 0080 D268     		ldr	r2, [r2, #12]
 5004 0082 22F08002 		bic	r2, r2, #128
 5005 0086 DA60     		str	r2, [r3, #12]
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 5006              		.loc 1 2368 0
 5007 0088 7B68     		ldr	r3, [r7, #4]
 5008 008a 1B68     		ldr	r3, [r3]
 5009 008c 7A68     		ldr	r2, [r7, #4]
 5010 008e 1268     		ldr	r2, [r2]
 5011 0090 D268     		ldr	r2, [r2, #12]
 5012 0092 42F04002 		orr	r2, r2, #64
 5013 0096 DA60     		str	r2, [r3, #12]
 5014              	.L215:
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 5015              		.loc 1 2370 0
 5016 0098 0023     		movs	r3, #0
 5017 009a 00E0     		b	.L216
 5018              	.L210:
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 5019              		.loc 1 2374 0
ARM GAS  /tmp/cc9wfwek.s 			page 129


 5020 009c 0223     		movs	r3, #2
 5021              	.L216:
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5022              		.loc 1 2376 0
 5023 009e 1846     		mov	r0, r3
 5024 00a0 1437     		adds	r7, r7, #20
 5025              	.LCFI281:
 5026              		.cfi_def_cfa_offset 4
 5027 00a2 BD46     		mov	sp, r7
 5028              	.LCFI282:
 5029              		.cfi_def_cfa_register 13
 5030              		@ sp needed
 5031 00a4 5DF8047B 		ldr	r7, [sp], #4
 5032              	.LCFI283:
 5033              		.cfi_restore 7
 5034              		.cfi_def_cfa_offset 0
 5035 00a8 7047     		bx	lr
 5036              		.cfi_endproc
 5037              	.LFE114:
 5039 00aa 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 5040              		.align	2
 5041              		.thumb
 5042              		.thumb_func
 5044              	UART_EndTransmit_IT:
 5045              	.LFB115:
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5046              		.loc 1 2385 0
 5047              		.cfi_startproc
 5048              		@ args = 0, pretend = 0, frame = 8
 5049              		@ frame_needed = 1, uses_anonymous_args = 0
 5050 0000 80B5     		push	{r7, lr}
 5051              	.LCFI284:
 5052              		.cfi_def_cfa_offset 8
 5053              		.cfi_offset 7, -8
 5054              		.cfi_offset 14, -4
 5055 0002 82B0     		sub	sp, sp, #8
 5056              	.LCFI285:
 5057              		.cfi_def_cfa_offset 16
 5058 0004 00AF     		add	r7, sp, #0
 5059              	.LCFI286:
 5060              		.cfi_def_cfa_register 7
 5061 0006 7860     		str	r0, [r7, #4]
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 5062              		.loc 1 2387 0
 5063 0008 7B68     		ldr	r3, [r7, #4]
 5064 000a 1B68     		ldr	r3, [r3]
 5065 000c 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cc9wfwek.s 			page 130


 5066 000e 1268     		ldr	r2, [r2]
 5067 0010 D268     		ldr	r2, [r2, #12]
 5068 0012 22F04002 		bic	r2, r2, #64
 5069 0016 DA60     		str	r2, [r3, #12]
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5070              		.loc 1 2390 0
 5071 0018 7B68     		ldr	r3, [r7, #4]
 5072 001a 2022     		movs	r2, #32
 5073 001c 83F83920 		strb	r2, [r3, #57]
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 5074              		.loc 1 2391 0
 5075 0020 7868     		ldr	r0, [r7, #4]
 5076 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   return HAL_OK;
 5077              		.loc 1 2393 0
 5078 0026 0023     		movs	r3, #0
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5079              		.loc 1 2394 0
 5080 0028 1846     		mov	r0, r3
 5081 002a 0837     		adds	r7, r7, #8
 5082              	.LCFI287:
 5083              		.cfi_def_cfa_offset 8
 5084 002c BD46     		mov	sp, r7
 5085              	.LCFI288:
 5086              		.cfi_def_cfa_register 13
 5087              		@ sp needed
 5088 002e 80BD     		pop	{r7, pc}
 5089              		.cfi_endproc
 5090              	.LFE115:
 5092              		.section	.text.UART_Receive_IT,"ax",%progbits
 5093              		.align	2
 5094              		.thumb
 5095              		.thumb_func
 5097              	UART_Receive_IT:
 5098              	.LFB116:
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval HAL status
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5099              		.loc 1 2403 0
 5100              		.cfi_startproc
 5101              		@ args = 0, pretend = 0, frame = 16
 5102              		@ frame_needed = 1, uses_anonymous_args = 0
 5103 0000 80B5     		push	{r7, lr}
 5104              	.LCFI289:
 5105              		.cfi_def_cfa_offset 8
 5106              		.cfi_offset 7, -8
 5107              		.cfi_offset 14, -4
 5108 0002 84B0     		sub	sp, sp, #16
ARM GAS  /tmp/cc9wfwek.s 			page 131


 5109              	.LCFI290:
 5110              		.cfi_def_cfa_offset 24
 5111 0004 00AF     		add	r7, sp, #0
 5112              	.LCFI291:
 5113              		.cfi_def_cfa_register 7
 5114 0006 7860     		str	r0, [r7, #4]
2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint16_t* tmp;
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
 5115              		.loc 1 2407 0
 5116 0008 7B68     		ldr	r3, [r7, #4]
 5117 000a 93F83A30 		ldrb	r3, [r3, #58]
 5118 000e DBB2     		uxtb	r3, r3
 5119 0010 222B     		cmp	r3, #34
 5120 0012 71D1     		bne	.L220
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 5121              		.loc 1 2409 0
 5122 0014 7B68     		ldr	r3, [r7, #4]
 5123 0016 9B68     		ldr	r3, [r3, #8]
 5124 0018 B3F5805F 		cmp	r3, #4096
 5125 001c 23D1     		bne	.L221
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
 5126              		.loc 1 2411 0
 5127 001e 7B68     		ldr	r3, [r7, #4]
 5128 0020 9B6A     		ldr	r3, [r3, #40]
 5129 0022 FB60     		str	r3, [r7, #12]
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 5130              		.loc 1 2412 0
 5131 0024 7B68     		ldr	r3, [r7, #4]
 5132 0026 1B69     		ldr	r3, [r3, #16]
 5133 0028 002B     		cmp	r3, #0
 5134 002a 0ED1     		bne	.L222
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 5135              		.loc 1 2414 0
 5136 002c 7B68     		ldr	r3, [r7, #4]
 5137 002e 1B68     		ldr	r3, [r3]
 5138 0030 5B68     		ldr	r3, [r3, #4]
 5139 0032 9BB2     		uxth	r3, r3
 5140 0034 C3F30803 		ubfx	r3, r3, #0, #9
 5141 0038 9AB2     		uxth	r2, r3
 5142 003a FB68     		ldr	r3, [r7, #12]
 5143 003c 1A80     		strh	r2, [r3]	@ movhi
2415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 5144              		.loc 1 2415 0
 5145 003e 7B68     		ldr	r3, [r7, #4]
 5146 0040 9B6A     		ldr	r3, [r3, #40]
 5147 0042 9A1C     		adds	r2, r3, #2
 5148 0044 7B68     		ldr	r3, [r7, #4]
 5149 0046 9A62     		str	r2, [r3, #40]
 5150 0048 29E0     		b	.L224
 5151              	.L222:
2416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
ARM GAS  /tmp/cc9wfwek.s 			page 132


2418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 5152              		.loc 1 2419 0
 5153 004a 7B68     		ldr	r3, [r7, #4]
 5154 004c 1B68     		ldr	r3, [r3]
 5155 004e 5B68     		ldr	r3, [r3, #4]
 5156 0050 9BB2     		uxth	r3, r3
 5157 0052 DBB2     		uxtb	r3, r3
 5158 0054 9AB2     		uxth	r2, r3
 5159 0056 FB68     		ldr	r3, [r7, #12]
 5160 0058 1A80     		strh	r2, [r3]	@ movhi
2420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 5161              		.loc 1 2420 0
 5162 005a 7B68     		ldr	r3, [r7, #4]
 5163 005c 9B6A     		ldr	r3, [r3, #40]
 5164 005e 5A1C     		adds	r2, r3, #1
 5165 0060 7B68     		ldr	r3, [r7, #4]
 5166 0062 9A62     		str	r2, [r3, #40]
 5167 0064 1BE0     		b	.L224
 5168              	.L221:
2421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 5169              		.loc 1 2425 0
 5170 0066 7B68     		ldr	r3, [r7, #4]
 5171 0068 1B69     		ldr	r3, [r3, #16]
 5172 006a 002B     		cmp	r3, #0
 5173 006c 0AD1     		bne	.L225
2426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 5174              		.loc 1 2427 0
 5175 006e 7B68     		ldr	r3, [r7, #4]
 5176 0070 9B6A     		ldr	r3, [r3, #40]
 5177 0072 591C     		adds	r1, r3, #1
 5178 0074 7A68     		ldr	r2, [r7, #4]
 5179 0076 9162     		str	r1, [r2, #40]
 5180 0078 7A68     		ldr	r2, [r7, #4]
 5181 007a 1268     		ldr	r2, [r2]
 5182 007c 5268     		ldr	r2, [r2, #4]
 5183 007e D2B2     		uxtb	r2, r2
 5184 0080 1A70     		strb	r2, [r3]
 5185 0082 0CE0     		b	.L224
 5186              	.L225:
2428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       else
2430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       {
2431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 5187              		.loc 1 2431 0
 5188 0084 7B68     		ldr	r3, [r7, #4]
 5189 0086 9B6A     		ldr	r3, [r3, #40]
 5190 0088 591C     		adds	r1, r3, #1
 5191 008a 7A68     		ldr	r2, [r7, #4]
 5192 008c 9162     		str	r1, [r2, #40]
 5193 008e 7A68     		ldr	r2, [r7, #4]
 5194 0090 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cc9wfwek.s 			page 133


 5195 0092 5268     		ldr	r2, [r2, #4]
 5196 0094 D2B2     		uxtb	r2, r2
 5197 0096 02F07F02 		and	r2, r2, #127
 5198 009a D2B2     		uxtb	r2, r2
 5199 009c 1A70     		strb	r2, [r3]
 5200              	.L224:
2432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       }
2433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
 5201              		.loc 1 2435 0
 5202 009e 7B68     		ldr	r3, [r7, #4]
 5203 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5204 00a2 9BB2     		uxth	r3, r3
 5205 00a4 013B     		subs	r3, r3, #1
 5206 00a6 9BB2     		uxth	r3, r3
 5207 00a8 7A68     		ldr	r2, [r7, #4]
 5208 00aa 1946     		mov	r1, r3	@ movhi
 5209 00ac D185     		strh	r1, [r2, #46]	@ movhi
 5210 00ae 002B     		cmp	r3, #0
 5211 00b0 20D1     		bne	.L226
2436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the IRDA Data Register not empty Interrupt */
2438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 5212              		.loc 1 2438 0
 5213 00b2 7B68     		ldr	r3, [r7, #4]
 5214 00b4 1B68     		ldr	r3, [r3]
 5215 00b6 7A68     		ldr	r2, [r7, #4]
 5216 00b8 1268     		ldr	r2, [r2]
 5217 00ba D268     		ldr	r2, [r2, #12]
 5218 00bc 22F02002 		bic	r2, r2, #32
 5219 00c0 DA60     		str	r2, [r3, #12]
2439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
2441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 5220              		.loc 1 2441 0
 5221 00c2 7B68     		ldr	r3, [r7, #4]
 5222 00c4 1B68     		ldr	r3, [r3]
 5223 00c6 7A68     		ldr	r2, [r7, #4]
 5224 00c8 1268     		ldr	r2, [r2]
 5225 00ca D268     		ldr	r2, [r2, #12]
 5226 00cc 22F48072 		bic	r2, r2, #256
 5227 00d0 DA60     		str	r2, [r3, #12]
2442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****         __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 5228              		.loc 1 2443 0
 5229 00d2 7B68     		ldr	r3, [r7, #4]
 5230 00d4 1B68     		ldr	r3, [r3]
 5231 00d6 7A68     		ldr	r2, [r7, #4]
 5232 00d8 1268     		ldr	r2, [r2]
 5233 00da 5269     		ldr	r2, [r2, #20]
 5234 00dc 22F00102 		bic	r2, r2, #1
 5235 00e0 5A61     		str	r2, [r3, #20]
2444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5236              		.loc 1 2446 0
ARM GAS  /tmp/cc9wfwek.s 			page 134


 5237 00e2 7B68     		ldr	r3, [r7, #4]
 5238 00e4 2022     		movs	r2, #32
 5239 00e6 83F83A20 		strb	r2, [r3, #58]
2447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 5240              		.loc 1 2448 0
 5241 00ea 7868     		ldr	r0, [r7, #4]
 5242 00ec FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       return HAL_OK;
 5243              		.loc 1 2450 0
 5244 00f0 0023     		movs	r3, #0
 5245 00f2 02E0     		b	.L227
 5246              	.L226:
2451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_OK;
 5247              		.loc 1 2452 0
 5248 00f4 0023     		movs	r3, #0
 5249 00f6 00E0     		b	.L227
 5250              	.L220:
2453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     return HAL_BUSY;
 5251              		.loc 1 2456 0
 5252 00f8 0223     		movs	r3, #2
 5253              	.L227:
2457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5254              		.loc 1 2458 0
 5255 00fa 1846     		mov	r0, r3
 5256 00fc 1037     		adds	r7, r7, #16
 5257              	.LCFI292:
 5258              		.cfi_def_cfa_offset 8
 5259 00fe BD46     		mov	sp, r7
 5260              	.LCFI293:
 5261              		.cfi_def_cfa_register 13
 5262              		@ sp needed
 5263 0100 80BD     		pop	{r7, pc}
 5264              		.cfi_endproc
 5265              	.LFE116:
 5267 0102 00BF     		.section	.text.UART_SetConfig,"ax",%progbits
 5268              		.align	2
 5269              		.thumb
 5270              		.thumb_func
 5272              	UART_SetConfig:
 5273              	.LFB117:
2459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** /**
2461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @param  huart: pointer to a UART_HandleTypeDef structure that contains
2463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   * @retval None
2465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   */
2466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** {
 5274              		.loc 1 2467 0
ARM GAS  /tmp/cc9wfwek.s 			page 135


 5275              		.cfi_startproc
 5276              		@ args = 0, pretend = 0, frame = 16
 5277              		@ frame_needed = 1, uses_anonymous_args = 0
 5278 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5279              	.LCFI294:
 5280              		.cfi_def_cfa_offset 20
 5281              		.cfi_offset 4, -20
 5282              		.cfi_offset 5, -16
 5283              		.cfi_offset 6, -12
 5284              		.cfi_offset 7, -8
 5285              		.cfi_offset 14, -4
 5286 0002 85B0     		sub	sp, sp, #20
 5287              	.LCFI295:
 5288              		.cfi_def_cfa_offset 40
 5289 0004 00AF     		add	r7, sp, #0
 5290              	.LCFI296:
 5291              		.cfi_def_cfa_register 7
 5292 0006 7860     		str	r0, [r7, #4]
2468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 5293              		.loc 1 2468 0
 5294 0008 0023     		movs	r3, #0
 5295 000a FB60     		str	r3, [r7, #12]
2469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the parameters */
2471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR2 Configuration ------*/
2477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according 
2478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****    * to huart->Init.StopBits value */
2479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 5296              		.loc 1 2479 0
 5297 000c 7B68     		ldr	r3, [r7, #4]
 5298 000e 1B68     		ldr	r3, [r3]
 5299 0010 7A68     		ldr	r2, [r7, #4]
 5300 0012 1268     		ldr	r2, [r2]
 5301 0014 1269     		ldr	r2, [r2, #16]
 5302 0016 22F44051 		bic	r1, r2, #12288
 5303 001a 7A68     		ldr	r2, [r7, #4]
 5304 001c D268     		ldr	r2, [r2, #12]
 5305 001e 0A43     		orrs	r2, r2, r1
 5306 0020 1A61     		str	r2, [r3, #16]
2480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR1 Configuration ------*/
2482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
2486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
2490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
2491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
2492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
ARM GAS  /tmp/cc9wfwek.s 			page 136


2493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode;
 5307              		.loc 1 2494 0
 5308 0022 7B68     		ldr	r3, [r7, #4]
 5309 0024 9A68     		ldr	r2, [r3, #8]
 5310 0026 7B68     		ldr	r3, [r7, #4]
 5311 0028 1B69     		ldr	r3, [r3, #16]
 5312 002a 1A43     		orrs	r2, r2, r3
 5313 002c 7B68     		ldr	r3, [r7, #4]
 5314 002e 5B69     		ldr	r3, [r3, #20]
 5315 0030 1343     		orrs	r3, r3, r2
 5316 0032 FA68     		ldr	r2, [r7, #12]
 5317 0034 1343     		orrs	r3, r3, r2
 5318 0036 FB60     		str	r3, [r7, #12]
2495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, 
 5319              		.loc 1 2495 0
 5320 0038 7B68     		ldr	r3, [r7, #4]
 5321 003a 1A68     		ldr	r2, [r3]
 5322 003c 7B68     		ldr	r3, [r7, #4]
 5323 003e 1B68     		ldr	r3, [r3]
 5324 0040 DB68     		ldr	r3, [r3, #12]
 5325 0042 23F4B053 		bic	r3, r3, #5632
 5326 0046 23F00C03 		bic	r3, r3, #12
 5327 004a F968     		ldr	r1, [r7, #12]
 5328 004c 0B43     		orrs	r3, r3, r1
 5329 004e D360     		str	r3, [r2, #12]
2496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE), 
2497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****              tmpreg);
2498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*------- UART-associated USART registers setting : CR3 Configuration ------*/
2501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 5330              		.loc 1 2502 0
 5331 0050 7B68     		ldr	r3, [r7, #4]
 5332 0052 1B68     		ldr	r3, [r3]
 5333 0054 7A68     		ldr	r2, [r7, #4]
 5334 0056 1268     		ldr	r2, [r2]
 5335 0058 5269     		ldr	r2, [r2, #20]
 5336 005a 22F44071 		bic	r1, r2, #768
 5337 005e 7A68     		ldr	r2, [r7, #4]
 5338 0060 9269     		ldr	r2, [r2, #24]
 5339 0062 0A43     		orrs	r2, r2, r1
 5340 0064 5A61     		str	r2, [r3, #20]
2503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** 
2504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #if defined(USART_CR1_OVER8)
2505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /* Check the Over Sampling */
2506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
2507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
ARM GAS  /tmp/cc9wfwek.s 			page 137


2516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     if(huart->Instance == USART1)
2522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     else
2526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     {
2527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     }
2529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #else
2531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
2532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   if(huart->Instance == USART1)
 5341              		.loc 1 2532 0
 5342 0066 7B68     		ldr	r3, [r7, #4]
 5343 0068 1B68     		ldr	r3, [r3]
 5344 006a 6E4A     		ldr	r2, .L231
 5345 006c 9342     		cmp	r3, r2
 5346 006e 6BD1     		bne	.L229
2533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
 5347              		.loc 1 2534 0
 5348 0070 7B68     		ldr	r3, [r7, #4]
 5349 0072 1C68     		ldr	r4, [r3]
 5350 0074 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5351 0078 0246     		mov	r2, r0
 5352 007a 1346     		mov	r3, r2
 5353 007c 9B00     		lsls	r3, r3, #2
 5354 007e 1344     		add	r3, r3, r2
 5355 0080 9A00     		lsls	r2, r3, #2
 5356 0082 1A44     		add	r2, r2, r3
 5357 0084 7B68     		ldr	r3, [r7, #4]
 5358 0086 5B68     		ldr	r3, [r3, #4]
 5359 0088 9B00     		lsls	r3, r3, #2
 5360 008a B2FBF3F3 		udiv	r3, r2, r3
 5361 008e 664A     		ldr	r2, .L231+4
 5362 0090 A2FB0323 		umull	r2, r3, r2, r3
 5363 0094 5B09     		lsrs	r3, r3, #5
 5364 0096 1D01     		lsls	r5, r3, #4
 5365 0098 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5366 009c 0246     		mov	r2, r0
 5367 009e 1346     		mov	r3, r2
 5368 00a0 9B00     		lsls	r3, r3, #2
 5369 00a2 1344     		add	r3, r3, r2
 5370 00a4 9A00     		lsls	r2, r3, #2
 5371 00a6 1A44     		add	r2, r2, r3
 5372 00a8 7B68     		ldr	r3, [r7, #4]
 5373 00aa 5B68     		ldr	r3, [r3, #4]
 5374 00ac 9B00     		lsls	r3, r3, #2
 5375 00ae B2FBF3F6 		udiv	r6, r2, r3
 5376 00b2 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5377 00b6 0246     		mov	r2, r0
 5378 00b8 1346     		mov	r3, r2
ARM GAS  /tmp/cc9wfwek.s 			page 138


 5379 00ba 9B00     		lsls	r3, r3, #2
 5380 00bc 1344     		add	r3, r3, r2
 5381 00be 9A00     		lsls	r2, r3, #2
 5382 00c0 1A44     		add	r2, r2, r3
 5383 00c2 7B68     		ldr	r3, [r7, #4]
 5384 00c4 5B68     		ldr	r3, [r3, #4]
 5385 00c6 9B00     		lsls	r3, r3, #2
 5386 00c8 B2FBF3F3 		udiv	r3, r2, r3
 5387 00cc 564A     		ldr	r2, .L231+4
 5388 00ce A2FB0323 		umull	r2, r3, r2, r3
 5389 00d2 5B09     		lsrs	r3, r3, #5
 5390 00d4 6422     		movs	r2, #100
 5391 00d6 02FB03F3 		mul	r3, r2, r3
 5392 00da F31A     		subs	r3, r6, r3
 5393 00dc 1B01     		lsls	r3, r3, #4
 5394 00de 3233     		adds	r3, r3, #50
 5395 00e0 514A     		ldr	r2, .L231+4
 5396 00e2 A2FB0323 		umull	r2, r3, r2, r3
 5397 00e6 5B09     		lsrs	r3, r3, #5
 5398 00e8 03F0F003 		and	r3, r3, #240
 5399 00ec 1D44     		add	r5, r5, r3
 5400 00ee FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5401 00f2 0246     		mov	r2, r0
 5402 00f4 1346     		mov	r3, r2
 5403 00f6 9B00     		lsls	r3, r3, #2
 5404 00f8 1344     		add	r3, r3, r2
 5405 00fa 9A00     		lsls	r2, r3, #2
 5406 00fc 1A44     		add	r2, r2, r3
 5407 00fe 7B68     		ldr	r3, [r7, #4]
 5408 0100 5B68     		ldr	r3, [r3, #4]
 5409 0102 9B00     		lsls	r3, r3, #2
 5410 0104 B2FBF3F6 		udiv	r6, r2, r3
 5411 0108 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5412 010c 0246     		mov	r2, r0
 5413 010e 1346     		mov	r3, r2
 5414 0110 9B00     		lsls	r3, r3, #2
 5415 0112 1344     		add	r3, r3, r2
 5416 0114 9A00     		lsls	r2, r3, #2
 5417 0116 1A44     		add	r2, r2, r3
 5418 0118 7B68     		ldr	r3, [r7, #4]
 5419 011a 5B68     		ldr	r3, [r3, #4]
 5420 011c 9B00     		lsls	r3, r3, #2
 5421 011e B2FBF3F3 		udiv	r3, r2, r3
 5422 0122 414A     		ldr	r2, .L231+4
 5423 0124 A2FB0323 		umull	r2, r3, r2, r3
 5424 0128 5B09     		lsrs	r3, r3, #5
 5425 012a 6422     		movs	r2, #100
 5426 012c 02FB03F3 		mul	r3, r2, r3
 5427 0130 F31A     		subs	r3, r6, r3
 5428 0132 1B01     		lsls	r3, r3, #4
 5429 0134 3233     		adds	r3, r3, #50
 5430 0136 3C4A     		ldr	r2, .L231+4
 5431 0138 A2FB0323 		umull	r2, r3, r2, r3
 5432 013c 5B09     		lsrs	r3, r3, #5
 5433 013e 03F00F03 		and	r3, r3, #15
 5434 0142 2B44     		add	r3, r3, r5
 5435 0144 A360     		str	r3, [r4, #8]
ARM GAS  /tmp/cc9wfwek.s 			page 139


 5436 0146 6AE0     		b	.L228
 5437              	.L229:
2535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   else
2537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   {
2538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 5438              		.loc 1 2538 0
 5439 0148 7B68     		ldr	r3, [r7, #4]
 5440 014a 1C68     		ldr	r4, [r3]
 5441 014c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5442 0150 0246     		mov	r2, r0
 5443 0152 1346     		mov	r3, r2
 5444 0154 9B00     		lsls	r3, r3, #2
 5445 0156 1344     		add	r3, r3, r2
 5446 0158 9A00     		lsls	r2, r3, #2
 5447 015a 1A44     		add	r2, r2, r3
 5448 015c 7B68     		ldr	r3, [r7, #4]
 5449 015e 5B68     		ldr	r3, [r3, #4]
 5450 0160 9B00     		lsls	r3, r3, #2
 5451 0162 B2FBF3F3 		udiv	r3, r2, r3
 5452 0166 304A     		ldr	r2, .L231+4
 5453 0168 A2FB0323 		umull	r2, r3, r2, r3
 5454 016c 5B09     		lsrs	r3, r3, #5
 5455 016e 1D01     		lsls	r5, r3, #4
 5456 0170 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5457 0174 0246     		mov	r2, r0
 5458 0176 1346     		mov	r3, r2
 5459 0178 9B00     		lsls	r3, r3, #2
 5460 017a 1344     		add	r3, r3, r2
 5461 017c 9A00     		lsls	r2, r3, #2
 5462 017e 1A44     		add	r2, r2, r3
 5463 0180 7B68     		ldr	r3, [r7, #4]
 5464 0182 5B68     		ldr	r3, [r3, #4]
 5465 0184 9B00     		lsls	r3, r3, #2
 5466 0186 B2FBF3F6 		udiv	r6, r2, r3
 5467 018a FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5468 018e 0246     		mov	r2, r0
 5469 0190 1346     		mov	r3, r2
 5470 0192 9B00     		lsls	r3, r3, #2
 5471 0194 1344     		add	r3, r3, r2
 5472 0196 9A00     		lsls	r2, r3, #2
 5473 0198 1A44     		add	r2, r2, r3
 5474 019a 7B68     		ldr	r3, [r7, #4]
 5475 019c 5B68     		ldr	r3, [r3, #4]
 5476 019e 9B00     		lsls	r3, r3, #2
 5477 01a0 B2FBF3F3 		udiv	r3, r2, r3
 5478 01a4 204A     		ldr	r2, .L231+4
 5479 01a6 A2FB0323 		umull	r2, r3, r2, r3
 5480 01aa 5B09     		lsrs	r3, r3, #5
 5481 01ac 6422     		movs	r2, #100
 5482 01ae 02FB03F3 		mul	r3, r2, r3
 5483 01b2 F31A     		subs	r3, r6, r3
 5484 01b4 1B01     		lsls	r3, r3, #4
 5485 01b6 3233     		adds	r3, r3, #50
 5486 01b8 1B4A     		ldr	r2, .L231+4
 5487 01ba A2FB0323 		umull	r2, r3, r2, r3
 5488 01be 5B09     		lsrs	r3, r3, #5
ARM GAS  /tmp/cc9wfwek.s 			page 140


 5489 01c0 03F0F003 		and	r3, r3, #240
 5490 01c4 1D44     		add	r5, r5, r3
 5491 01c6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5492 01ca 0246     		mov	r2, r0
 5493 01cc 1346     		mov	r3, r2
 5494 01ce 9B00     		lsls	r3, r3, #2
 5495 01d0 1344     		add	r3, r3, r2
 5496 01d2 9A00     		lsls	r2, r3, #2
 5497 01d4 1A44     		add	r2, r2, r3
 5498 01d6 7B68     		ldr	r3, [r7, #4]
 5499 01d8 5B68     		ldr	r3, [r3, #4]
 5500 01da 9B00     		lsls	r3, r3, #2
 5501 01dc B2FBF3F6 		udiv	r6, r2, r3
 5502 01e0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5503 01e4 0246     		mov	r2, r0
 5504 01e6 1346     		mov	r3, r2
 5505 01e8 9B00     		lsls	r3, r3, #2
 5506 01ea 1344     		add	r3, r3, r2
 5507 01ec 9A00     		lsls	r2, r3, #2
 5508 01ee 1A44     		add	r2, r2, r3
 5509 01f0 7B68     		ldr	r3, [r7, #4]
 5510 01f2 5B68     		ldr	r3, [r3, #4]
 5511 01f4 9B00     		lsls	r3, r3, #2
 5512 01f6 B2FBF3F3 		udiv	r3, r2, r3
 5513 01fa 0B4A     		ldr	r2, .L231+4
 5514 01fc A2FB0323 		umull	r2, r3, r2, r3
 5515 0200 5B09     		lsrs	r3, r3, #5
 5516 0202 6422     		movs	r2, #100
 5517 0204 02FB03F3 		mul	r3, r2, r3
 5518 0208 F31A     		subs	r3, r6, r3
 5519 020a 1B01     		lsls	r3, r3, #4
 5520 020c 3233     		adds	r3, r3, #50
 5521 020e 064A     		ldr	r2, .L231+4
 5522 0210 A2FB0323 		umull	r2, r3, r2, r3
 5523 0214 5B09     		lsrs	r3, r3, #5
 5524 0216 03F00F03 		and	r3, r3, #15
 5525 021a 2B44     		add	r3, r3, r5
 5526 021c A360     		str	r3, [r4, #8]
 5527              	.L228:
2539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c ****   }
2540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** #endif /* USART_CR1_OVER8 */
2541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_uart.c **** }
 5528              		.loc 1 2541 0
 5529 021e 1437     		adds	r7, r7, #20
 5530              	.LCFI297:
 5531              		.cfi_def_cfa_offset 20
 5532 0220 BD46     		mov	sp, r7
 5533              	.LCFI298:
 5534              		.cfi_def_cfa_register 13
 5535              		@ sp needed
 5536 0222 F0BD     		pop	{r4, r5, r6, r7, pc}
 5537              	.L232:
 5538              		.align	2
 5539              	.L231:
 5540 0224 00380140 		.word	1073821696
 5541 0228 1F85EB51 		.word	1374389535
 5542              		.cfi_endproc
ARM GAS  /tmp/cc9wfwek.s 			page 141


 5543              	.LFE117:
 5545              		.text
 5546              	.Letext0:
 5547              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5548              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5549              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 5550              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 5551              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5552              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5553              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 5554              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /tmp/cc9wfwek.s 			page 142


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_uart.c
     /tmp/cc9wfwek.s:19     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc9wfwek.s:24     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc9wfwek.s:598    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc9wfwek.s:5272   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cc9wfwek.s:133    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc9wfwek.s:138    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc9wfwek.s:254    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc9wfwek.s:259    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc9wfwek.s:386    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc9wfwek.s:391    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc9wfwek.s:522    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc9wfwek.s:527    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc9wfwek.s:638    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc9wfwek.s:593    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc9wfwek.s:633    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc9wfwek.s:673    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc9wfwek.s:678    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc9wfwek.s:4380   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc9wfwek.s:886    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc9wfwek.s:891    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc9wfwek.s:1114   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:1119   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc9wfwek.s:1229   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:1234   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc9wfwek.s:1360   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc9wfwek.s:1365   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc9wfwek.s:1513   .text.HAL_UART_Transmit_DMA:00000000000000d4 $d
     /tmp/cc9wfwek.s:4033   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc9wfwek.s:4105   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc9wfwek.s:4271   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc9wfwek.s:1520   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc9wfwek.s:1525   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc9wfwek.s:1693   .text.HAL_UART_Receive_DMA:00000000000000f8 $d
     /tmp/cc9wfwek.s:4147   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc9wfwek.s:4229   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc9wfwek.s:1700   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc9wfwek.s:1705   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc9wfwek.s:1840   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc9wfwek.s:1845   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc9wfwek.s:1961   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc9wfwek.s:1966   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc9wfwek.s:4491   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc9wfwek.s:4542   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc9wfwek.s:2091   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc9wfwek.s:2096   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc9wfwek.s:2228   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc9wfwek.s:2233   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc9wfwek.s:2314   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc9wfwek.s:2319   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc9wfwek.s:2408   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:2413   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc9wfwek.s:3396   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc9wfwek.s:2624   .text.HAL_UART_Abort_IT:0000000000000140 $d
     /tmp/cc9wfwek.s:4651   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc9wfwek.s:4733   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
ARM GAS  /tmp/cc9wfwek.s 			page 143


     /tmp/cc9wfwek.s:2630   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:2635   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc9wfwek.s:3436   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc9wfwek.s:2744   .text.HAL_UART_AbortTransmit_IT:000000000000009c $d
     /tmp/cc9wfwek.s:4815   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc9wfwek.s:2749   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:2754   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc9wfwek.s:3476   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc9wfwek.s:2871   .text.HAL_UART_AbortReceive_IT:00000000000000ac $d
     /tmp/cc9wfwek.s:4865   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc9wfwek.s:2876   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc9wfwek.s:2881   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc9wfwek.s:5097   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cc9wfwek.s:3356   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc9wfwek.s:4915   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cc9wfwek.s:5044   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc9wfwek.s:3186   .text.HAL_UART_IRQHandler:00000000000001f0 $d
     /tmp/cc9wfwek.s:4601   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc9wfwek.s:3191   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3196   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc9wfwek.s:3231   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3236   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc9wfwek.s:3271   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3276   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cc9wfwek.s:3311   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3316   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc9wfwek.s:3351   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3391   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3431   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3471   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:3511   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc9wfwek.s:3516   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc9wfwek.s:3588   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc9wfwek.s:3593   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc9wfwek.s:3665   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/cc9wfwek.s:3670   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/cc9wfwek.s:3742   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc9wfwek.s:3747   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc9wfwek.s:3832   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc9wfwek.s:3837   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc9wfwek.s:3922   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc9wfwek.s:3927   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc9wfwek.s:3985   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc9wfwek.s:3990   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc9wfwek.s:4029   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc9wfwek.s:4101   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc9wfwek.s:4143   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc9wfwek.s:4225   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc9wfwek.s:4267   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc9wfwek.s:4376   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc9wfwek.s:4487   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc9wfwek.s:4538   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc9wfwek.s:4597   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc9wfwek.s:4647   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:4729   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:4811   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc9wfwek.s:4861   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
ARM GAS  /tmp/cc9wfwek.s 			page 144


     /tmp/cc9wfwek.s:4911   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:5040   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:5093   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/cc9wfwek.s:5268   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc9wfwek.s:5540   .text.UART_SetConfig:0000000000000224 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
